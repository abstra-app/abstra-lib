{
  "abstra": {},
  "abstra.agents": {
    "get_connections": {
      "object_type": "function",
      "description": "Get a list of available connections based on the specified role.",
      "signature": {
        "parameters": [
          {
            "name": "role",
            "type": "Literal[\"client\", \"agent\"]",
            "description": "The role to get connections for, either \"client\" or \"agent\". List[ConnectionModel]: A list of connection models for the specified role.",
            "default": "None",
            "required": true
          }
        ],
        "return_annotation": "typing.List[abstra_internals.entities.agents.ConnectionModel]"
      }
    }
  },
  "abstra.ai": {
    "prompt": {
      "object_type": "function",
      "description": "Send a prompt to the AI and get a response.",
      "signature": {
        "parameters": [
          {
            "name": "prompt",
            "type": "Union[Prompt, List[Prompt]]",
            "description": "The prompt(s) to send to the AI model.",
            "default": "None",
            "required": true
          },
          {
            "name": "instructions",
            "type": "Union[str, List[str]]",
            "description": "Additional instructions for the AI. Defaults to [].",
            "default": "[]",
            "required": false
          },
          {
            "name": "format",
            "type": "Optional[Format]",
            "description": "The expected format for the AI response. Defaults to None.",
            "default": "None",
            "required": false
          },
          {
            "name": "temperature",
            "type": "float",
            "description": "Controls randomness in the AI response, from 0.0 to 2.0. Defaults to 1.0. The AI response formatted according to the specified format if provided. ValueError: If temperature is not between 0.0 and 2.0.",
            "default": "1.0",
            "required": false
          }
        ],
        "return_annotation": null
      }
    }
  },
  "abstra.cli": {
    "CLI": {
      "object_type": "deprecated"
    }
  },
  "abstra.common": {
    "get_persistent_dir": {
      "object_type": "function",
      "description": "Get the path to the persistent directory Returns: pathlib.Path: Path to the persistent directory",
      "signature": {
        "parameters": [],
        "return_annotation": "<class 'pathlib.Path'>"
      }
    },
    "get_project_url": {
      "object_type": "function",
      "description": "Get the project URL. localhost if running locally Returns: str: Project URL",
      "signature": {
        "parameters": [],
        "return_annotation": "<class 'str'>"
      }
    },
    "get_public_dir": {
      "object_type": "function",
      "description": "Get the path to the public directory Returns: pathlib.Path: Path to the public directory",
      "signature": {
        "parameters": [],
        "return_annotation": "<class 'pathlib.Path'>"
      }
    },
    "create_public_link": {
      "object_type": "function",
      "description": "Create a public link for a file by copying it to the public directory",
      "signature": {
        "parameters": [
          {
            "name": "path",
            "type": "Union[str, pathlib.Path]",
            "description": "Path to the file str: Public link to the file",
            "default": "None",
            "required": true
          }
        ],
        "return_annotation": "<class 'str'>"
      }
    },
    "get_execution_id": {
      "object_type": "function",
      "description": "Get the execution ID of the current execution.",
      "signature": {
        "parameters": [],
        "return_annotation": "<class 'str'>"
      }
    }
  },
  "abstra.compat": {
    "use_legacy_threads": {
      "object_type": "function",
      "description": "Sets up compatibility mode for legacy threading functionality.",
      "signature": {
        "parameters": [
          {
            "name": "mode",
            "type": "Literal[\"scripts\", \"forms\", \"jobs\", \"hooks\"]",
            "description": "The execution mode for the legacy threads.",
            "default": "None",
            "required": true
          }
        ],
        "return_annotation": null
      }
    }
  },
  "abstra.connectors": {
    "get_access_token": {
      "object_type": "function",
      "description": "Retrieve an access token by its name.",
      "signature": {
        "parameters": [
          {
            "name": "name",
            "type": "str",
            "description": "The name of the access token to retrieve. AccessTokenDTO: The access token data transfer object.",
            "default": "None",
            "required": true
          }
        ],
        "return_annotation": "<class 'abstra_internals.repositories.connectors.AccessTokenDTO'>"
      }
    },
    "get_gsheets_credentials": {
      "object_type": "function",
      "description": "Get Google Sheets credentials.",
      "signature": {
        "parameters": [
          {
            "name": "connection_name",
            "type": "str",
            "description": "The name of the Google Sheets connection. Defaults to \"google-sheets\". AbstraGoogleCredentials: Credentials object for Google Sheets authentication.",
            "default": "'google-sheets'",
            "required": false
          }
        ],
        "return_annotation": null
      }
    },
    "get_gdrive_credentials": {
      "object_type": "function",
      "description": "Get Google Drive credentials.",
      "signature": {
        "parameters": [
          {
            "name": "connection_name",
            "type": "str",
            "description": "The name of the Google Drive connection. Defaults to \"google-drive\". AbstraGoogleCredentials: Credentials object for Google Drive authentication.",
            "default": "'google-drive'",
            "required": false
          }
        ],
        "return_annotation": null
      }
    },
    "get_gmail_credentials": {
      "object_type": "function",
      "description": "Get Gmail credentials.",
      "signature": {
        "parameters": [
          {
            "name": "connection_name",
            "type": "str",
            "description": "The name of the Gmail connection. Defaults to \"gmail\". AbstraGoogleCredentials: Credentials object for Gmail authentication.",
            "default": "'gmail'",
            "required": false
          }
        ],
        "return_annotation": null
      }
    },
    "get_bigquery_credentials": {
      "object_type": "function",
      "description": "Get Google BigQuery credentials.",
      "signature": {
        "parameters": [
          {
            "name": "connection_name",
            "type": "str",
            "description": "The name of the BigQuery connection. Defaults to \"google-bigquery\". AbstraGoogleCredentials: Credentials object for Google BigQuery authentication.",
            "default": "'google-bigquery'",
            "required": false
          }
        ],
        "return_annotation": null
      }
    },
    "get_google_cal_credentials": {
      "object_type": "function",
      "description": "Get Google Calendar credentials.",
      "signature": {
        "parameters": [
          {
            "name": "connection_name",
            "type": "str",
            "description": "The name of the Google Calendar connection. Defaults to \"google-calendar\". AbstraGoogleCredentials: Credentials object for Google Calendar authentication.",
            "default": "'google-calendar'",
            "required": false
          }
        ],
        "return_annotation": null
      }
    }
  },
  "abstra.ensurepath": {},
  "abstra.files": {
    "create_public_link": {
      "object_type": "function",
      "description": "Create a public link for a file by copying it to the public directory",
      "signature": {
        "parameters": [
          {
            "name": "path",
            "type": "Union[str, pathlib.Path]",
            "description": "Path to the file str: Public link to the file",
            "default": "None",
            "required": true
          }
        ],
        "return_annotation": "<class 'str'>"
      }
    },
    "get_persistent_dir": {
      "object_type": "function",
      "description": "Get the path to the persistent directory Returns: pathlib.Path: Path to the persistent directory",
      "signature": {
        "parameters": [],
        "return_annotation": "<class 'pathlib.Path'>"
      }
    },
    "get_public_dir": {
      "object_type": "function",
      "description": "Get the path to the public directory Returns: pathlib.Path: Path to the public directory",
      "signature": {
        "parameters": [],
        "return_annotation": "<class 'pathlib.Path'>"
      }
    }
  },
  "abstra.forms": {
    "execute_js": {
      "object_type": "function",
      "description": "Execute JavaScript code in the browser",
      "signature": {
        "parameters": [
          {
            "name": "code",
            "type": "str",
            "description": "JavaScript code to execute",
            "default": "None",
            "required": true
          },
          {
            "name": "context",
            "type": "dict",
            "description": "Context to pass to the JavaScript code. Defaults to {}. Any: Result of the JavaScript code",
            "default": "None",
            "required": false
          }
        ],
        "return_annotation": null
      }
    },
    "get_query_params": {
      "object_type": "function",
      "description": "Get the query parameters from the current URL Returns: Dict[str, str]: Query parameters",
      "signature": {
        "parameters": [],
        "return_annotation": "typing.Dict[str, str]"
      }
    },
    "get_user": {
      "object_type": "function",
      "description": "Get the current user",
      "signature": {
        "parameters": [
          {
            "name": "refresh",
            "type": "bool",
            "description": "Whether to force refresh the user. Defaults to False. Union[UserClaims, None]: User information",
            "default": "False",
            "required": false
          }
        ],
        "return_annotation": "<class 'abstra_internals.jwt_auth.UserClaims'>"
      }
    },
    "redirect": {
      "object_type": "function",
      "description": "Redirect the user to a new URL",
      "signature": {
        "parameters": [
          {
            "name": "url",
            "type": "str",
            "description": "URL to redirect to",
            "default": "None",
            "required": true
          },
          {
            "name": "query_params",
            "type": "Optional[dict]",
            "description": "Query parameters to append to the URL. Defaults to None. None",
            "default": "None",
            "required": false
          }
        ],
        "return_annotation": "None"
      }
    },
    "url_params": {},
    "reuse": {
      "object_type": "function",
      "description": "Reuse the result of a function call with the given arguments.",
      "signature": {
        "parameters": [
          {
            "name": "func",
            "type": "Callable",
            "description": "The function to reuse.",
            "default": "None",
            "required": true
          },
          {
            "name": "args",
            "type": "Any",
            "description": "Variable length argument list to pass to the function.",
            "default": "None",
            "required": false
          },
          {
            "name": "kwargs",
            "type": "Any",
            "description": "Arbitrary keyword arguments to pass to the function. Any: The result of the function call.",
            "default": "None",
            "required": false
          }
        ],
        "return_annotation": "typing.Any"
      }
    },
    "Button": {
      "object_type": "class",
      "description": "Base class for form navigation buttons.",
      "parent_classes": [],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "The text displayed on the button.",
            "default": "None",
            "required": true
          }
        ]
      }
    },
    "NextButton": {
      "object_type": "class",
      "description": "Button used to navigate to the next step in a form. Automatically labeled with internationalized \"Next\" text.",
      "parent_classes": [
        "Button"
      ],
      "init": {
        "parameters": []
      }
    },
    "BackButton": {
      "object_type": "class",
      "description": "Button used to navigate to the previous step in a form. Automatically labeled with internationalized \"Back\" text.",
      "parent_classes": [
        "Button"
      ],
      "init": {
        "parameters": []
      }
    },
    "ListItemSchema": {
      "object_type": "class",
      "description": "A schema for a list item This schema is used to define the schema of a list item.",
      "parent_classes": [
        "WidgetSchema"
      ],
      "init": {
        "parameters": []
      }
    },
    "AppointmentInput": {
      "object_type": "class",
      "description": "Appointment scheduling input widget for selecting time slots.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the input.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether a time slot must be selected before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the input should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the input is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "slots",
            "type": "Optional[List[AppointmentSlot]]",
            "description": "List of available time slots.",
            "default": "None",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "CameraInput": {
      "object_type": "class",
      "description": "Camera input widget for capturing images or videos directly from a camera.",
      "parent_classes": [
        "Widget",
        "FileInput",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the input.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether a file must be uploaded before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the input should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the input is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "max_file_size",
            "type": "Optional[int]",
            "description": "Maximum file size in bytes.",
            "default": "None",
            "required": false
          },
          {
            "name": "multiple",
            "type": "bool",
            "description": "Whether multiple files can be uploaded.",
            "default": "False",
            "required": false
          },
          {
            "name": "min",
            "type": "Optional[int]",
            "description": "Minimum number of files required when multiple=True.",
            "default": "None",
            "required": false
          },
          {
            "name": "max",
            "type": "Optional[int]",
            "description": "Maximum number of files allowed when multiple=True.",
            "default": "None",
            "required": false
          },
          {
            "name": "accepted_formats",
            "type": "Optional[List[str]]",
            "description": "List of accepted file extensions.",
            "default": "None",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "CardsInput": {
      "object_type": "class",
      "description": "Card selection input widget for choosing from visual card options.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the cards.",
            "default": "None",
            "required": true
          },
          {
            "name": "options",
            "type": "List[CardOption]",
            "description": "List of card options to display.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "searchable",
            "type": "bool",
            "description": "Whether cards can be filtered by search.",
            "default": "False",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether a card selection is required before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "columns",
            "type": "Optional[int]",
            "description": "Number of columns to display cards in.",
            "default": "2",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the cards should take up the full width of their container.",
            "default": "False",
            "required": false
          },
          {
            "name": "layout",
            "type": "Optional[str]",
            "description": "Layout style for the cards ('list' or 'grid').",
            "default": "'list'",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the input is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "min",
            "type": "Optional[int]",
            "description": "Minimum number of cards that must be selected when multiple=True.",
            "default": "None",
            "required": false
          },
          {
            "name": "max",
            "type": "Optional[int]",
            "description": "Maximum number of cards that can be selected when multiple=True.",
            "default": "None",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "CheckboxInput": {
      "object_type": "class",
      "description": "Checkbox input widget for capturing boolean values.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed next to the checkbox.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether the checkbox must be checked before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the checkbox.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the widget should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the checkbox is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[list, str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "ChecklistInput": {
      "object_type": "class",
      "description": "Checklist input widget for selecting multiple options from a list.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the checklist.",
            "default": "None",
            "required": true
          },
          {
            "name": "options",
            "type": "List[AbstraOption]",
            "description": "List of options to choose from, as AbstraOption objects.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether at least one option must be selected before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the checklist.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the checklist should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the checklist is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "min",
            "type": "int",
            "description": "Minimum number of options that must be selected.",
            "default": "0",
            "required": false
          },
          {
            "name": "max",
            "type": "Optional[int]",
            "description": "Maximum number of options that can be selected.",
            "default": "None",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[List[str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "CnpjInput": {
      "object_type": "class",
      "description": "CNPJ (Brazilian company registry) input widget.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the input.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "placeholder",
            "type": "Optional[str]",
            "description": "Placeholder text displayed when the input is empty.",
            "default": "'00.000.000/0001-00'",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether the input must be filled before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the input should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the input is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "invalid_message",
            "type": "Optional[str]",
            "description": "Custom error message for invalid CNPJ numbers.",
            "default": "'i18n_error_invalid_cnpj'",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "CodeInput": {
      "object_type": "class",
      "description": "Code input widget for entering code with syntax highlighting.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the input.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether the input must be filled before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "language",
            "type": "Optional[str]",
            "description": "Programming language for syntax highlighting.",
            "default": "None",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the input should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the input is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "CpfInput": {
      "object_type": "class",
      "description": "CPF (Brazilian individual taxpayer registry) input widget.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the input.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "placeholder",
            "type": "Optional[str]",
            "description": "Placeholder text displayed when the input is empty.",
            "default": "'000.000.000-00'",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether the input must be filled before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the input should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the input is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "invalid_message",
            "type": "Optional[str]",
            "description": "Custom error message for invalid CPF numbers.",
            "default": "'i18n_error_invalid_cpf'",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "CurrencyInput": {
      "object_type": "class",
      "description": "Currency input widget for entering monetary values.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the input.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether the input must be filled before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "placeholder",
            "type": "Optional[str]",
            "description": "Placeholder text displayed when the input is empty.",
            "default": "''",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the input should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the input is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "min",
            "type": "Optional[float]",
            "description": "Minimum allowed value.",
            "default": "None",
            "required": false
          },
          {
            "name": "max",
            "type": "Optional[float]",
            "description": "Maximum allowed value.",
            "default": "None",
            "required": false
          },
          {
            "name": "currency",
            "type": "str",
            "description": "Currency code to use for formatting (e.g., \"USD\", \"EUR\").",
            "default": "'USD'",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "CustomInput": {
      "object_type": "class",
      "description": "Custom HTML input widget for creating custom interactive components.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "html_body",
            "type": "str",
            "description": "HTML content for the body of the custom component.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to hash of html_body if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether the input must be filled before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the component.",
            "default": "''",
            "required": false
          },
          {
            "name": "html_head",
            "type": "str",
            "description": "HTML content for the head section.",
            "default": "''",
            "required": false
          },
          {
            "name": "height",
            "type": "int",
            "description": "Height of the component in pixels.",
            "default": "200",
            "required": false
          },
          {
            "name": "css",
            "type": "str",
            "description": "CSS styles for the component.",
            "default": "''",
            "required": false
          },
          {
            "name": "js",
            "type": "str",
            "description": "JavaScript code for the component.",
            "default": "''",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the component should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "change_event",
            "type": "Optional[Callable]",
            "description": "Function to process value changes before storing.",
            "default": "None",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "DateInput": {
      "object_type": "class",
      "description": "Date input widget with calendar picker.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the input.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether a date must be selected before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the input should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the input is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          },
          {
            "name": "min_date",
            "type": "Optional[datetime.date]",
            "description": "Earliest selectable date.",
            "default": "None",
            "required": false
          },
          {
            "name": "max_date",
            "type": "Optional[datetime.date]",
            "description": "Latest selectable date.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "DropdownInput": {
      "object_type": "class",
      "description": "Dropdown select widget allowing selection from predefined options.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the dropdown.",
            "default": "None",
            "required": true
          },
          {
            "name": "options",
            "type": "List[AbstraOption]",
            "description": "List of options to choose from, as AbstraOption objects.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether a selection is required before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the dropdown.",
            "default": "None",
            "required": false
          },
          {
            "name": "placeholder",
            "type": "str",
            "description": "Text shown when no option is selected.",
            "default": "''",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the dropdown should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the dropdown is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "multiple",
            "type": "bool",
            "description": "Whether multiple options can be selected.",
            "default": "False",
            "required": false
          },
          {
            "name": "min",
            "type": "Optional[int]",
            "description": "Minimum number of selections required when multiple=True.",
            "default": "None",
            "required": false
          },
          {
            "name": "max",
            "type": "Optional[int]",
            "description": "Maximum number of selections allowed when multiple=True.",
            "default": "None",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[object], object]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "EmailInput": {
      "object_type": "class",
      "description": "Email input widget for capturing email addresses.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the input.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "placeholder",
            "type": "str",
            "description": "Placeholder text displayed when the input is empty.",
            "default": "''",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether the input must be filled before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the input should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the input is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          },
          {
            "name": "max_length",
            "type": "Optional[int]",
            "description": "Maximum number of characters allowed.",
            "default": "None",
            "required": false
          },
          {
            "name": "min_length",
            "type": "Optional[int]",
            "description": "Minimum number of characters required.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "FileInput": {
      "object_type": "class",
      "description": "File upload input widget for handling file uploads.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the input.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether a file must be uploaded before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the input should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the input is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "max_file_size",
            "type": "Optional[int]",
            "description": "Maximum file size in bytes.",
            "default": "None",
            "required": false
          },
          {
            "name": "multiple",
            "type": "bool",
            "description": "Whether multiple files can be uploaded.",
            "default": "False",
            "required": false
          },
          {
            "name": "min",
            "type": "Optional[int]",
            "description": "Minimum number of files required when multiple=True.",
            "default": "None",
            "required": false
          },
          {
            "name": "max",
            "type": "Optional[int]",
            "description": "Maximum number of files allowed when multiple=True.",
            "default": "None",
            "required": false
          },
          {
            "name": "accepted_formats",
            "type": "Optional[List[str]]",
            "description": "List of accepted file extensions.",
            "default": "None",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "FileOutput": {
      "object_type": "class",
      "description": "File output widget for displaying downloadable files.",
      "parent_classes": [
        "Widget",
        "OutputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "file",
            "type": "Union[str, io.IOBase]",
            "description": "The file to make available for download, as a URL or file-like object.",
            "default": "None",
            "required": true
          },
          {
            "name": "download_text",
            "type": "str",
            "description": "Text displayed on the download button.",
            "default": "'Download'",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the download button should take up the full width of its container.",
            "default": "False",
            "required": false
          }
        ]
      }
    },
    "HtmlOutput": {
      "object_type": "class",
      "description": "HTML output widget for displaying custom HTML content.",
      "parent_classes": [
        "Widget",
        "OutputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "html",
            "type": "str",
            "description": "The HTML content to display.",
            "default": "None",
            "required": true
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the content should take up the full width of its container.",
            "default": "False",
            "required": false
          }
        ]
      }
    },
    "IframeOutput": {
      "object_type": "class",
      "description": "Iframe output widget for embedding external web content or HTML.",
      "parent_classes": [
        "Widget",
        "OutputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "url_or_html",
            "type": "str",
            "description": "The URL to embed or HTML content to display in the iframe.",
            "default": "None",
            "required": true
          },
          {
            "name": "width",
            "type": "int",
            "description": "Width of the iframe in pixels.",
            "default": "800",
            "required": false
          },
          {
            "name": "height",
            "type": "int",
            "description": "Height of the iframe in pixels.",
            "default": "600",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the iframe should take up the full width of its container.",
            "default": "False",
            "required": false
          }
        ]
      }
    },
    "ImageInput": {
      "object_type": "class",
      "description": "Image upload input widget for handling image file uploads.",
      "parent_classes": [
        "Widget",
        "FileInput",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the input.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether a file must be uploaded before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the input should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the input is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "max_file_size",
            "type": "Optional[int]",
            "description": "Maximum file size in bytes.",
            "default": "None",
            "required": false
          },
          {
            "name": "multiple",
            "type": "bool",
            "description": "Whether multiple files can be uploaded.",
            "default": "False",
            "required": false
          },
          {
            "name": "min",
            "type": "Optional[int]",
            "description": "Minimum number of files required when multiple=True.",
            "default": "None",
            "required": false
          },
          {
            "name": "max",
            "type": "Optional[int]",
            "description": "Maximum number of files allowed when multiple=True.",
            "default": "None",
            "required": false
          },
          {
            "name": "accepted_formats",
            "type": "Optional[List[str]]",
            "description": "List of accepted file extensions.",
            "default": "None",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "ImageOutput": {
      "object_type": "class",
      "description": "Image output widget for displaying images.",
      "parent_classes": [
        "Widget",
        "OutputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "image",
            "type": "Union[str, io.IOBase]",
            "description": "The image to display, as a URL or file-like object.",
            "default": "None",
            "required": true
          },
          {
            "name": "subtitle",
            "type": "str",
            "description": "Text displayed below the image.",
            "default": "''",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the image should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "label",
            "type": "str",
            "description": "Text displayed above the image.",
            "default": "''",
            "required": false
          }
        ]
      }
    },
    "LatexOutput": {
      "object_type": "class",
      "description": "LaTeX output widget for displaying mathematical notation.",
      "parent_classes": [
        "Widget",
        "OutputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "text",
            "type": "str",
            "description": "The LaTeX content to display.",
            "default": "None",
            "required": true
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the content should take up the full width of its container.",
            "default": "False",
            "required": false
          }
        ]
      }
    },
    "LinkOutput": {
      "object_type": "class",
      "description": "Link output widget for displaying clickable hyperlinks.",
      "parent_classes": [
        "Widget",
        "OutputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "link_url",
            "type": "str",
            "description": "The URL that the link points to.",
            "default": "None",
            "required": true
          },
          {
            "name": "link_text",
            "type": "str",
            "description": "The visible text of the link.",
            "default": "'Click here'",
            "required": false
          },
          {
            "name": "same_tab",
            "type": "bool",
            "description": "Whether the link should open in the same tab.",
            "default": "False",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the link should take up the full width of its container.",
            "default": "False",
            "required": false
          }
        ]
      }
    },
    "ListInput": {
      "object_type": "class",
      "description": "Repeatable list of input components that can be dynamically added or removed.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "key",
            "type": "str",
            "description": "Identifier for the widget.",
            "default": "None",
            "required": true
          },
          {
            "name": "template",
            "type": "Union[Template, TemplateFunction]",
            "description": "Template or function that returns a template for each list item.",
            "default": "None",
            "required": true
          },
          {
            "name": "min",
            "type": "Optional[int]",
            "description": "Minimum number of items required.",
            "default": "0",
            "required": false
          },
          {
            "name": "max",
            "type": "Optional[int]",
            "description": "Maximum number of items allowed.",
            "default": "None",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "add_button_text",
            "type": "str",
            "description": "Text displayed on the button to add a new item.",
            "default": "'+'",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the input should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether at least one item is required.",
            "default": "True",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the input is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "MarkdownOutput": {
      "object_type": "class",
      "description": "Markdown output widget for displaying formatted text.",
      "parent_classes": [
        "Widget",
        "OutputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "text",
            "type": "str",
            "description": "The markdown content to display.",
            "default": "None",
            "required": true
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the content should take up the full width of its container.",
            "default": "False",
            "required": false
          }
        ]
      }
    },
    "MultipleChoiceInput": {
      "object_type": "class",
      "description": "Multiple choice input widget for selecting a single option from a set of radio buttons.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the options.",
            "default": "None",
            "required": true
          },
          {
            "name": "options",
            "type": "List[AbstraOption]",
            "description": "List of options to choose from, as AbstraOption objects.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether an option must be selected before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the options.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the widget should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the widget is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "multiple",
            "type": "bool",
            "description": "Whether multiple options can be selected.",
            "default": "False",
            "required": false
          },
          {
            "name": "min",
            "type": "Optional[int]",
            "description": "Minimum number of options that can be selected.",
            "default": "None",
            "required": false
          },
          {
            "name": "max",
            "type": "Optional[int]",
            "description": "Maximum number of options that can be selected.",
            "default": "None",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "NpsInput": {
      "object_type": "class",
      "description": "Net Promoter Score input widget for collecting customer feedback scores.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the input.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether a score must be selected before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "min",
            "type": "int",
            "description": "Minimum score value.",
            "default": "0",
            "required": false
          },
          {
            "name": "max",
            "type": "int",
            "description": "Maximum score value.",
            "default": "10",
            "required": false
          },
          {
            "name": "min_hint",
            "type": "str",
            "description": "Text displayed beneath the minimum score value.",
            "default": "'Not at all likely'",
            "required": false
          },
          {
            "name": "max_hint",
            "type": "str",
            "description": "Text displayed beneath the maximum score value.",
            "default": "'Extremely likely'",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the input should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the input is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          },
          {
            "name": "value",
            "type": "int",
            "description": "Initial value of the score.",
            "default": "0",
            "required": false
          }
        ]
      }
    },
    "NumberInput": {
      "object_type": "class",
      "description": "Number input widget for capturing numeric values.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the input.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "placeholder",
            "type": "Optional[str]",
            "description": "Placeholder text displayed when the input is empty.",
            "default": "None",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether the input must be filled before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the input should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the input is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "min",
            "type": "Optional[float]",
            "description": "Minimum allowed value.",
            "default": "None",
            "required": false
          },
          {
            "name": "max",
            "type": "Optional[float]",
            "description": "Maximum allowed value.",
            "default": "None",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "NumberSliderInput": {
      "object_type": "class",
      "description": "Number slider input widget for selecting numeric values with a sliding control.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the slider.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether the slider must be adjusted before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the slider.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the slider should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the slider is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          },
          {
            "name": "min",
            "type": "float",
            "description": "Minimum value for the slider.",
            "default": "0",
            "required": false
          },
          {
            "name": "max",
            "type": "float",
            "description": "Maximum value for the slider.",
            "default": "100",
            "required": false
          },
          {
            "name": "step",
            "type": "float",
            "description": "Step increment for the slider.",
            "default": "1",
            "required": false
          }
        ]
      }
    },
    "PandasOutput": {
      "object_type": "class",
      "description": "Pandas DataFrame output widget for displaying tabular data.",
      "parent_classes": [
        "Widget",
        "OutputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "df",
            "type": "pd.DataFrame",
            "description": "The pandas DataFrame to display.",
            "default": "None",
            "required": true
          },
          {
            "name": "label",
            "type": "Optional[str]",
            "description": "Text label displayed above the table.",
            "default": "None",
            "required": false
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget.",
            "default": "None",
            "required": false
          },
          {
            "name": "actions",
            "type": "Optional[List[dict]]",
            "description": "List of action configurations.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the table should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "display_index",
            "type": "bool",
            "description": "Whether to display row indices.",
            "default": "True",
            "required": false
          },
          {
            "name": "filterable",
            "type": "bool",
            "description": "Whether the table is filterable.",
            "default": "True",
            "required": false
          },
          {
            "name": "page_size",
            "type": "int",
            "description": "Number of rows to display per page.",
            "default": "10",
            "required": false
          },
          {
            "name": "pagination_always_visible",
            "type": "bool",
            "description": "Whether pagination controls are always visible.",
            "default": "True",
            "required": false
          }
        ]
      }
    },
    "PandasRowSelectionInput": {
      "object_type": "class",
      "description": "Pandas DataFrame row selection input widget for selecting rows from tabular data.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "df",
            "type": "pd.DataFrame",
            "description": "The pandas DataFrame to display.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget.",
            "default": "None",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether row selection is required before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the table should take up the full width of its container.",
            "default": "True",
            "required": false
          },
          {
            "name": "display_index",
            "type": "bool",
            "description": "Whether to display row indices.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the input is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the table.",
            "default": "''",
            "required": false
          },
          {
            "name": "filterable",
            "type": "bool",
            "description": "Whether the table is filterable.",
            "default": "False",
            "required": false
          },
          {
            "name": "multiple",
            "type": "bool",
            "description": "Whether multiple rows can be selected.",
            "default": "False",
            "required": false
          },
          {
            "name": "initial_value",
            "type": "Optional[Union[List, Any]]",
            "description": "Initial selected row(s).",
            "default": "None",
            "required": false
          },
          {
            "name": "min",
            "type": "Optional[int]",
            "description": "Minimum number of rows that must be selected when multiple=True.",
            "default": "None",
            "required": false
          },
          {
            "name": "max",
            "type": "Optional[int]",
            "description": "Maximum number of rows that can be selected when multiple=True.",
            "default": "None",
            "required": false
          },
          {
            "name": "page_size",
            "type": "int",
            "description": "Number of rows to display per page.",
            "default": "10",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          },
          {
            "name": "pagination_always_visible",
            "type": "bool",
            "description": "Whether pagination controls are always visible.",
            "default": "True",
            "required": false
          }
        ]
      }
    },
    "PasswordInput": {
      "object_type": "class",
      "description": "Password input widget for capturing sensitive text with masked display.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the input.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether the input must be filled before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the input should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "lowercase_required",
            "type": "bool",
            "description": "Whether the input must contain at least one lowercase letter.",
            "default": "False",
            "required": false
          },
          {
            "name": "uppercase_required",
            "type": "bool",
            "description": "Whether the input must contain at least one uppercase letter.",
            "default": "False",
            "required": false
          },
          {
            "name": "special_required",
            "type": "bool",
            "description": "Whether the input must contain at least one special character.",
            "default": "False",
            "required": false
          },
          {
            "name": "digit_required",
            "type": "bool",
            "description": "Whether the input must contain at least one digit.",
            "default": "False",
            "required": false
          },
          {
            "name": "min_length",
            "type": "Optional[int]",
            "description": "Minimum number of characters required.",
            "default": "None",
            "required": false
          },
          {
            "name": "max_length",
            "type": "Optional[int]",
            "description": "Maximum number of characters allowed.",
            "default": "None",
            "required": false
          },
          {
            "name": "size",
            "type": "Optional[int]",
            "description": "Size of the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "pattern",
            "type": "Optional[str]",
            "description": "Regular expression pattern for input validation.",
            "default": "None",
            "required": false
          },
          {
            "name": "autocomplete",
            "type": "Optional[str]",
            "description": "Autocomplete attribute for the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "placeholder",
            "type": "Optional[str]",
            "description": "Placeholder text displayed when the input is empty.",
            "default": "None",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the input is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "secret",
            "type": "bool",
            "description": "Whether the input is a secret (e.g., for passwords).",
            "default": "False",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "PhoneInput": {
      "object_type": "class",
      "description": "Phone number input widget with country code selection.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the input.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "placeholder",
            "type": "Optional[str]",
            "description": "Placeholder text displayed when the input is empty.",
            "default": "None",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether the input must be filled before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the input should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the input is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[str]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          },
          {
            "name": "invalid_message",
            "type": "Optional[str]",
            "description": "Custom error message for invalid phone numbers.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "PlotlyOutput": {
      "object_type": "class",
      "description": "Plotly figure output widget for displaying interactive charts.",
      "parent_classes": [
        "Widget",
        "OutputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "fig",
            "type": "Any",
            "description": "The Plotly figure to display.",
            "default": "None",
            "required": false
          },
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the chart.",
            "default": "''",
            "required": false
          },
          {
            "name": "key",
            "type": "str",
            "description": "Identifier for the widget.",
            "default": "''",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the chart should take up the full width of its container.",
            "default": "False",
            "required": false
          }
        ]
      }
    },
    "ProgressOutput": {
      "object_type": "class",
      "description": "Progress bar output widget for displaying completion status.",
      "parent_classes": [
        "Widget",
        "OutputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "current",
            "type": "float",
            "description": "The current progress value.",
            "default": "50",
            "required": false
          },
          {
            "name": "total",
            "type": "float",
            "description": "The total value representing 100% progress.",
            "default": "100",
            "required": false
          },
          {
            "name": "text",
            "type": "str",
            "description": "Text displayed alongside the progress bar.",
            "default": "''",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the progress bar should take up the full width of its container.",
            "default": "False",
            "required": false
          }
        ]
      }
    },
    "RatingInput": {
      "object_type": "class",
      "description": "Rating input widget for capturing user ratings on a scale.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the input.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether a rating must be selected before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the input should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the input is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          },
          {
            "name": "max_value",
            "type": "int",
            "description": "Maximum value for the rating scale.",
            "default": "5",
            "required": false
          }
        ]
      }
    },
    "RichTextInput": {
      "object_type": "class",
      "description": "Rich text input widget with formatting options.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the input.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "placeholder",
            "type": "str",
            "description": "Placeholder text displayed when the input is empty.",
            "default": "''",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether the input must be filled before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the input should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the input is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "TagInput": {
      "object_type": "class",
      "description": "Tag input widget for entering multiple tag values.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the input.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "placeholder",
            "type": "str",
            "description": "Placeholder text displayed when the input is empty.",
            "default": "''",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether at least one tag must be entered before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the input should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the input is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "TextInput": {
      "object_type": "class",
      "description": "Text input widget for collecting single-line text.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the input.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "placeholder",
            "type": "str",
            "description": "Placeholder text displayed when the input is empty.",
            "default": "''",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether the input must be filled before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the input should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the input is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          },
          {
            "name": "mask",
            "type": "Optional[str]",
            "description": "String pattern for input masking.",
            "default": "None",
            "required": false
          },
          {
            "name": "max_length",
            "type": "Optional[int]",
            "description": "Maximum number of characters allowed.",
            "default": "None",
            "required": false
          },
          {
            "name": "min_length",
            "type": "Optional[int]",
            "description": "Minimum number of characters required.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "TextOutput": {
      "object_type": "class",
      "description": "Text output widget for displaying plain text.",
      "parent_classes": [
        "Widget",
        "OutputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "text",
            "type": "str",
            "description": "The text to display.",
            "default": "None",
            "required": true
          },
          {
            "name": "size",
            "type": "Literal[\"small\", \"medium\", \"large\"]",
            "description": "The size of the text.",
            "default": "'medium'",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the widget should take up the full width of its container.",
            "default": "False",
            "required": false
          }
        ]
      }
    },
    "TextareaInput": {
      "object_type": "class",
      "description": "Textarea input widget for collecting multi-line text.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the textarea.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "placeholder",
            "type": "str",
            "description": "Placeholder text displayed when the textarea is empty.",
            "default": "''",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether the textarea must be filled before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the textarea.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the textarea should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the textarea is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "TimeInput": {
      "object_type": "class",
      "description": "Time input widget with time picker.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the input.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether a time must be selected before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the input should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the input is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "format",
            "type": "str",
            "description": "The format of the time input.",
            "default": "'24hs'",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "ToggleInput": {
      "object_type": "class",
      "description": "Toggle switch input widget for capturing boolean values.",
      "parent_classes": [
        "Widget",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed next to the toggle.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "on_text",
            "type": "str",
            "description": "Text to display when the toggle is on.",
            "default": "'Yes'",
            "required": false
          },
          {
            "name": "off_text",
            "type": "str",
            "description": "Text to display when the toggle is off.",
            "default": "'No'",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether the toggle must be switched on before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the toggle.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the widget should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the toggle is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "VideoInput": {
      "object_type": "class",
      "description": "Video upload input widget for handling video file uploads.",
      "parent_classes": [
        "Widget",
        "FileInput",
        "InputWidget"
      ],
      "init": {
        "parameters": [
          {
            "name": "label",
            "type": "str",
            "description": "Text label displayed above the input.",
            "default": "None",
            "required": true
          },
          {
            "name": "key",
            "type": "Optional[str]",
            "description": "Identifier for the widget, defaults to label if not provided.",
            "default": "None",
            "required": false
          },
          {
            "name": "required",
            "type": "bool",
            "description": "Whether a file must be uploaded before proceeding.",
            "default": "True",
            "required": false
          },
          {
            "name": "hint",
            "type": "Optional[str]",
            "description": "Help text displayed below the input.",
            "default": "None",
            "required": false
          },
          {
            "name": "full_width",
            "type": "bool",
            "description": "Whether the input should take up the full width of its container.",
            "default": "False",
            "required": false
          },
          {
            "name": "disabled",
            "type": "bool",
            "description": "Whether the input is non-interactive.",
            "default": "False",
            "required": false
          },
          {
            "name": "max_file_size",
            "type": "Optional[int]",
            "description": "Maximum file size in bytes.",
            "default": "None",
            "required": false
          },
          {
            "name": "multiple",
            "type": "bool",
            "description": "Whether multiple files can be uploaded.",
            "default": "False",
            "required": false
          },
          {
            "name": "min",
            "type": "Optional[int]",
            "description": "Minimum number of files required when multiple=True.",
            "default": "None",
            "required": false
          },
          {
            "name": "max",
            "type": "Optional[int]",
            "description": "Maximum number of files allowed when multiple=True.",
            "default": "None",
            "required": false
          },
          {
            "name": "accepted_formats",
            "type": "Optional[List[str]]",
            "description": "List of accepted file extensions.",
            "default": "None",
            "required": false
          },
          {
            "name": "errors",
            "type": "Optional[Union[List[str], str]]",
            "description": "Pre-defined validation error messages to display.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "run": {
      "object_type": "function",
      "description": "Run a form with the given runnables or a single widget. This is the main entry point for executing forms. It supports two modes: 1. Running a list of runnables as a multi-step form 2. Running a single widget to get its value",
      "signature": {
        "parameters": [
          {
            "name": "runnables",
            "type": "Union[List[Runnable], Widget]",
            "description": "Either a list of form steps or a single widget.",
            "default": "None",
            "required": true
          },
          {
            "name": "state",
            "type": "Optional[Dict]",
            "description": "Initial state values for the form.",
            "default": "None",
            "required": false
          },
          {
            "name": "hide_steps",
            "type": "bool",
            "description": "Whether to hide steps navigation in the UI. Union[State, None, object]: - For a list of runnables: the final State object - For a single InputWidget: the widget's value - For other single widgets: None",
            "default": "False",
            "required": false
          }
        ],
        "return_annotation": "typing.Union[abstra_internals.entities.forms.form_state.State, NoneType, object]"
      }
    },
    "end_page_step": {
      "object_type": "function",
      "description": "Decorator that converts a function into an EndPageStep.",
      "signature": {
        "parameters": [
          {
            "name": "func",
            "type": "TemplateFunction",
            "description": "The function to be decorated. EndPageStep: A step object that represents the end page of a form.",
            "default": "None",
            "required": true
          }
        ],
        "return_annotation": "<class 'abstra_internals.entities.forms.steps.EndPageStep'>"
      }
    },
    "read_appointment": {
      "object_type": "deprecated"
    },
    "read_camera": {
      "object_type": "deprecated"
    },
    "read_cards": {
      "object_type": "deprecated"
    },
    "read_checkbox": {
      "object_type": "deprecated"
    },
    "read_checklist": {
      "object_type": "deprecated"
    },
    "read_cnpj": {
      "object_type": "deprecated"
    },
    "read_code": {
      "object_type": "deprecated"
    },
    "read_cpf": {
      "object_type": "deprecated"
    },
    "read_currency": {
      "object_type": "deprecated"
    },
    "read_custom": {
      "object_type": "deprecated"
    },
    "read_date": {
      "object_type": "deprecated"
    },
    "read_dropdown": {
      "object_type": "deprecated"
    },
    "read_email": {
      "object_type": "deprecated"
    },
    "read_file": {
      "object_type": "deprecated"
    },
    "read_image": {
      "object_type": "deprecated"
    },
    "read_list": {
      "object_type": "deprecated"
    },
    "read_multiple_choice": {
      "object_type": "deprecated"
    },
    "read_nps": {
      "object_type": "deprecated"
    },
    "read_number": {
      "object_type": "deprecated"
    },
    "read_number_slider": {
      "object_type": "deprecated"
    },
    "read_pandas_row_selection": {
      "object_type": "deprecated"
    },
    "read_password": {
      "object_type": "deprecated"
    },
    "read_phone": {
      "object_type": "deprecated"
    },
    "read_rating": {
      "object_type": "deprecated"
    },
    "read_richtext": {
      "object_type": "deprecated"
    },
    "read_tag": {
      "object_type": "deprecated"
    },
    "read": {
      "object_type": "deprecated"
    },
    "read_textarea": {
      "object_type": "deprecated"
    },
    "read_time": {
      "object_type": "deprecated"
    },
    "read_toggle": {
      "object_type": "deprecated"
    },
    "read_video": {
      "object_type": "deprecated"
    },
    "display_file": {
      "object_type": "deprecated"
    },
    "display_html": {
      "object_type": "deprecated"
    },
    "display_iframe": {
      "object_type": "deprecated"
    },
    "display_image": {
      "object_type": "deprecated"
    },
    "display_latex": {
      "object_type": "deprecated"
    },
    "display_link": {
      "object_type": "deprecated"
    },
    "display_markdown": {
      "object_type": "deprecated"
    },
    "display_pandas": {
      "object_type": "deprecated"
    },
    "display_plotly": {
      "object_type": "deprecated"
    },
    "display_progress": {
      "object_type": "deprecated"
    },
    "display": {
      "object_type": "deprecated"
    },
    "Page": {
      "object_type": "deprecated"
    },
    "reactive": {
      "object_type": "deprecated"
    },
    "run_steps": {
      "object_type": "deprecated"
    }
  },
  "abstra.hooks": {
    "get_raw_request": {
      "object_type": "function",
      "description": "Get the raw HTTP request data. Returns: Tuple[str, Dict[str, str], Dict[str, str]]: A tuple containing: - Raw request body as a string - Request headers as a dictionary - Request query parameters as a dictionary",
      "signature": {
        "parameters": [],
        "return_annotation": "typing.Tuple[str, typing.Dict[str, str], typing.Dict[str, str]]"
      }
    },
    "get_request": {
      "object_type": "function",
      "description": "Get the HTTP request data with parsed body. Returns: Tuple[Union[str, List, Dict], Dict[str, str], Dict[str, str]]: A tuple containing: - Parsed request body (as string, list, or dict depending on content type) - Request headers as a dictionary - Request query parameters as a dictionary",
      "signature": {
        "parameters": [],
        "return_annotation": "typing.Tuple[typing.Union[str, typing.List, typing.Dict], typing.Dict[str, str], typing.Dict[str, str]]"
      }
    },
    "send_response": {
      "object_type": "function",
      "description": "Send an HTTP response.",
      "signature": {
        "parameters": [
          {
            "name": "body",
            "type": "Union[str, Dict, List]",
            "description": "Response body content. Non-string values will be serialized to JSON. Defaults to empty string.",
            "default": "''",
            "required": false
          },
          {
            "name": "status_code",
            "type": "int",
            "description": "HTTP status code. Defaults to 200.",
            "default": "200",
            "required": false
          },
          {
            "name": "headers",
            "type": "Dict[str, str]",
            "description": "HTTP response headers. Defaults to empty dict. BadSendResponse: If status_code is not an integer or headers is not a dictionary.",
            "default": "{}",
            "required": false
          }
        ],
        "return_annotation": "None"
      }
    },
    "send_json": {
      "object_type": "function",
      "description": "Send a JSON HTTP response. Automatically sets the Content-Type header to application/json if not already set.",
      "signature": {
        "parameters": [
          {
            "name": "data",
            "type": "Union[Dict, List]",
            "description": "Data to be serialized to JSON. Defaults to empty dict.",
            "default": "{}",
            "required": false
          },
          {
            "name": "status_code",
            "type": "int",
            "description": "HTTP status code. Defaults to 200.",
            "default": "200",
            "required": false
          },
          {
            "name": "headers",
            "type": "Dict[str, str]",
            "description": "HTTP response headers. Defaults to empty dict. BadSendResponse: If status_code is not an integer or headers is not a dictionary.",
            "default": "{}",
            "required": false
          }
        ],
        "return_annotation": "None"
      }
    },
    "get_email_request": {
      "object_type": "function",
      "description": "Get the raw email request data. Returns: dict: Email request data containing sender, recipients, subject, and body information.",
      "signature": {
        "parameters": [],
        "return_annotation": null
      }
    }
  },
  "abstra.logging": {
    "logger": {}
  },
  "abstra.messages": {
    "send_email": {
      "object_type": "function",
      "description": "Send an email to one or more recipients.",
      "signature": {
        "parameters": [
          {
            "name": "to",
            "type": "Union[str, List[str]]",
            "description": "Email address(es) of the recipient(s). Can be a single email address as a string or multiple addresses as a list of strings.",
            "default": "None",
            "required": true
          },
          {
            "name": "message",
            "type": "str",
            "description": "Content of the email message.",
            "default": "None",
            "required": true
          },
          {
            "name": "title",
            "type": "str",
            "description": "Subject line of the email. Defaults to \"\".",
            "default": "''",
            "required": false
          },
          {
            "name": "attachments",
            "type": "List[Union[str, io.IOBase]]",
            "description": "List of attachments to include. Each attachment can be a file path string or an open file-like object. Defaults to [].",
            "default": "[]",
            "required": false
          },
          {
            "name": "is_html",
            "type": "bool",
            "description": "Whether the message content is HTML. When True, the message will be sent as HTML; when False, the message will be sent as plain text. Defaults to False.",
            "default": "False",
            "required": false
          }
        ],
        "return_annotation": null
      }
    }
  },
  "abstra.tables": {
    "run": {
      "object_type": "function",
      "description": "Execute a raw SQL query with parameters (deprecated, use run_sql instead).",
      "signature": {
        "parameters": [
          {
            "name": "query",
            "type": "str",
            "description": "SQL query to execute.",
            "default": "None",
            "required": true
          },
          {
            "name": "params",
            "type": "List",
            "description": "List of parameters for the query. Defaults to []. List[dict]: List of rows returned by the query.",
            "default": "[]",
            "required": false
          }
        ],
        "return_annotation": null
      }
    },
    "run_sql": {
      "object_type": "function",
      "description": "Execute a raw SQL query with parameters.",
      "signature": {
        "parameters": [
          {
            "name": "query",
            "type": "str",
            "description": "SQL query to execute.",
            "default": "None",
            "required": true
          },
          {
            "name": "params",
            "type": "List",
            "description": "List of parameters for the query. Defaults to []. List[dict]: List of rows returned by the query.",
            "default": "[]",
            "required": false
          }
        ],
        "return_annotation": null
      }
    },
    "query_df": {
      "object_type": "function",
      "description": "Execute a raw SQL query and return the results as a pandas DataFrame.",
      "signature": {
        "parameters": [
          {
            "name": "query",
            "type": "str",
            "description": "SQL query to execute.",
            "default": "None",
            "required": true
          },
          {
            "name": "params",
            "type": "List",
            "description": "List of parameters for the query. Defaults to []. pandas.DataFrame: DataFrame containing the query results.",
            "default": "[]",
            "required": false
          }
        ],
        "return_annotation": null
      }
    },
    "TablesExecutionError": {
      "object_type": "class",
      "description": "Exception raised when there is an error executing a SQL query.",
      "parent_classes": [
        "Exception",
        "BaseException"
      ],
      "init": {
        "parameters": [
          {
            "name": "errors",
            "type": "List",
            "description": "List of error messages from the database.",
            "default": "None",
            "required": true
          },
          {
            "name": "query",
            "type": "str",
            "description": "The SQL query that caused the error.",
            "default": "None",
            "required": true
          },
          {
            "name": "params",
            "type": "Optional[List]",
            "description": "The parameters used in the query.",
            "default": "None",
            "required": false
          }
        ]
      }
    },
    "select": {
      "object_type": "function",
      "description": "Select rows from a table with filtering and ordering options.",
      "signature": {
        "parameters": [
          {
            "name": "table",
            "type": "str",
            "description": "Name of the table to select from.",
            "default": "None",
            "required": true
          },
          {
            "name": "where",
            "type": "Optional[dict]",
            "description": "Dictionary of conditions for the WHERE clause.",
            "default": "None",
            "required": false
          },
          {
            "name": "order_by",
            "type": "Optional[str]",
            "description": "Column name to order by.",
            "default": "None",
            "required": false
          },
          {
            "name": "order_desc",
            "type": "bool",
            "description": "Whether to order in descending order. Defaults to False.",
            "default": "False",
            "required": false
          },
          {
            "name": "limit",
            "type": "Optional[int]",
            "description": "Maximum number of rows to return.",
            "default": "None",
            "required": false
          },
          {
            "name": "offset",
            "type": "Optional[int]",
            "description": "Number of rows to skip. List[dict]: List of rows matching the query.",
            "default": "None",
            "required": false
          }
        ],
        "return_annotation": null
      }
    },
    "select_by_id": {
      "object_type": "function",
      "description": "Select a single row from a table by its ID.",
      "signature": {
        "parameters": [
          {
            "name": "table",
            "type": "str",
            "description": "Name of the table to select from.",
            "default": "None",
            "required": true
          },
          {
            "name": "id",
            "type": "str",
            "description": "ID of the row to select. Optional[dict]: The matching row, or None if no row matches.",
            "default": "None",
            "required": true
          }
        ],
        "return_annotation": null
      }
    },
    "select_df": {
      "object_type": "function",
      "description": "Select rows from a table and return a pandas DataFrame.",
      "signature": {
        "parameters": [
          {
            "name": "table",
            "type": "str",
            "description": "Name of the table to select from.",
            "default": "None",
            "required": true
          },
          {
            "name": "where",
            "type": "Optional[dict]",
            "description": "Dictionary of conditions for the WHERE clause.",
            "default": "None",
            "required": false
          },
          {
            "name": "order_by",
            "type": "Optional[str]",
            "description": "Column name to order by.",
            "default": "None",
            "required": false
          },
          {
            "name": "order_desc",
            "type": "bool",
            "description": "Whether to order in descending order. Defaults to False.",
            "default": "False",
            "required": false
          },
          {
            "name": "limit",
            "type": "Optional[int]",
            "description": "Maximum number of rows to return.",
            "default": "None",
            "required": false
          },
          {
            "name": "offset",
            "type": "Optional[int]",
            "description": "Number of rows to skip. pandas.DataFrame: DataFrame containing the rows matching the query.",
            "default": "None",
            "required": false
          }
        ],
        "return_annotation": null
      }
    },
    "select_one": {
      "object_type": "function",
      "description": "Select a single row from a table.",
      "signature": {
        "parameters": [
          {
            "name": "table",
            "type": "str",
            "description": "Name of the table to select from.",
            "default": "None",
            "required": true
          },
          {
            "name": "where",
            "type": "Optional[dict]",
            "description": "Dictionary of conditions for the WHERE clause. Optional[dict]: The first matching row, or None if no rows match.",
            "default": "None",
            "required": false
          }
        ],
        "return_annotation": null
      }
    },
    "insert": {
      "object_type": "function",
      "description": "Insert one or more rows into a table.",
      "signature": {
        "parameters": [
          {
            "name": "table",
            "type": "str",
            "description": "Name of the table to insert into.",
            "default": "None",
            "required": true
          },
          {
            "name": "values",
            "type": "Any",
            "description": "Dictionary of column-value pairs for a single row, or list of dictionaries for multiple rows. Union[dict, List[dict]]: The inserted row if values is a dict, or a list of all inserted rows if values is a list.",
            "default": "None",
            "required": true
          }
        ],
        "return_annotation": null
      }
    },
    "update": {
      "object_type": "function",
      "description": "Update rows in a table.",
      "signature": {
        "parameters": [
          {
            "name": "table",
            "type": "str",
            "description": "Name of the table to update.",
            "default": "None",
            "required": true
          },
          {
            "name": "set",
            "type": "Any",
            "description": "Dictionary (or dataclass) of column-value pairs to set.",
            "default": "None",
            "required": true
          },
          {
            "name": "where",
            "type": "Any",
            "description": "Dictionary (or dataclass) of column-value pairs for the WHERE clause. List[dict]: List of updated rows.",
            "default": "None",
            "required": true
          }
        ],
        "return_annotation": null
      }
    },
    "delete": {
      "object_type": "function",
      "description": "Delete rows from a table based on conditions.",
      "signature": {
        "parameters": [
          {
            "name": "table",
            "type": "str",
            "description": "Name of the table to delete from.",
            "default": "None",
            "required": true
          },
          {
            "name": "values",
            "type": "Any",
            "description": "Dictionary (or dataclass) of column-value pairs for the WHERE clause. List[dict]: List of deleted rows.",
            "default": "None",
            "required": true
          }
        ],
        "return_annotation": null
      }
    },
    "update_by_id": {
      "object_type": "function",
      "description": "Update a row in a table by its ID.",
      "signature": {
        "parameters": [
          {
            "name": "table",
            "type": "str",
            "description": "Name of the table to update.",
            "default": "None",
            "required": true
          },
          {
            "name": "id",
            "type": "str",
            "description": "ID of the row to update.",
            "default": "None",
            "required": true
          },
          {
            "name": "values",
            "type": "Any",
            "description": "Dictionary (or dataclass) of column-value pairs to set. Optional[dict]: The updated row, or None if no row matches.",
            "default": "None",
            "required": true
          }
        ],
        "return_annotation": null
      }
    },
    "delete_by_id": {
      "object_type": "function",
      "description": "Delete a row from a table by its ID.",
      "signature": {
        "parameters": [
          {
            "name": "table",
            "type": "str",
            "description": "Name of the table to delete from.",
            "default": "None",
            "required": true
          },
          {
            "name": "id",
            "type": "str",
            "description": "ID of the row to delete. Optional[dict]: The deleted row, or None if no row matches.",
            "default": "None",
            "required": true
          }
        ],
        "return_annotation": null
      }
    },
    "is_eq": {
      "object_type": "class",
      "description": "Comparator for SQL equality operator (=). Checks if a column value equals a specified value.",
      "parent_classes": [
        "Comparator"
      ],
      "init": {
        "parameters": [
          {
            "name": "value",
            "type": "Any",
            "description": "The value to compare against.",
            "default": "None",
            "required": true
          }
        ]
      }
    },
    "is_neq": {
      "object_type": "class",
      "description": "Comparator for SQL inequality operator (<>). Checks if a column value is not equal to a specified value.",
      "parent_classes": [
        "Comparator"
      ],
      "init": {
        "parameters": [
          {
            "name": "value",
            "type": "Any",
            "description": "The value to compare against.",
            "default": "None",
            "required": true
          }
        ]
      }
    },
    "is_gt": {
      "object_type": "class",
      "description": "Comparator for SQL greater than operator (>). Checks if a column value is greater than a specified value.",
      "parent_classes": [
        "Comparator"
      ],
      "init": {
        "parameters": [
          {
            "name": "value",
            "type": "Any",
            "description": "The value to compare against.",
            "default": "None",
            "required": true
          }
        ]
      }
    },
    "is_between": {
      "object_type": "class",
      "description": "Comparator for SQL BETWEEN operator. Checks if a column value is between two specified values (inclusive).",
      "parent_classes": [
        "Comparator"
      ],
      "init": {
        "parameters": [
          {
            "name": "value1",
            "type": "Any",
            "description": "The lower bound value.",
            "default": "None",
            "required": true
          },
          {
            "name": "value2",
            "type": "Any",
            "description": "The upper bound value.",
            "default": "None",
            "required": true
          }
        ]
      }
    },
    "is_gte": {
      "object_type": "class",
      "description": "Comparator for SQL greater than or equal operator (>=). Checks if a column value is greater than or equal to a specified value.",
      "parent_classes": [
        "Comparator"
      ],
      "init": {
        "parameters": [
          {
            "name": "value",
            "type": "Any",
            "description": "The value to compare against.",
            "default": "None",
            "required": true
          }
        ]
      }
    },
    "is_in": {
      "object_type": "class",
      "description": "Comparator for SQL IN operator. Checks if a column value is in a specified list of values.",
      "parent_classes": [
        "Comparator"
      ],
      "init": {
        "parameters": [
          {
            "name": "value",
            "type": "List[Any]",
            "description": "The list of values to check against.",
            "default": "None",
            "required": true
          }
        ]
      }
    },
    "is_lt": {
      "object_type": "class",
      "description": "Comparator for SQL less than operator (<). Checks if a column value is less than a specified value.",
      "parent_classes": [
        "Comparator"
      ],
      "init": {
        "parameters": [
          {
            "name": "value",
            "type": "Any",
            "description": "The value to compare against.",
            "default": "None",
            "required": true
          }
        ]
      }
    },
    "is_like": {
      "object_type": "class",
      "description": "Comparator for SQL LIKE operator. Checks if a column value matches a pattern (case-sensitive).",
      "parent_classes": [
        "Comparator"
      ],
      "init": {
        "parameters": [
          {
            "name": "value",
            "type": "str",
            "description": "The pattern to match against.",
            "default": "None",
            "required": true
          }
        ]
      }
    },
    "is_lte": {
      "object_type": "class",
      "description": "Comparator for SQL less than or equal operator (<=). Checks if a column value is less than or equal to a specified value.",
      "parent_classes": [
        "Comparator"
      ],
      "init": {
        "parameters": [
          {
            "name": "value",
            "type": "Any",
            "description": "The value to compare against.",
            "default": "None",
            "required": true
          }
        ]
      }
    },
    "is_not_in": {
      "object_type": "class",
      "description": "Comparator for SQL NOT IN operator. Checks if a column value is not in a specified list of values.",
      "parent_classes": [
        "Comparator"
      ],
      "init": {
        "parameters": [
          {
            "name": "value",
            "type": "List[Any]",
            "description": "The list of values to check against.",
            "default": "None",
            "required": true
          }
        ]
      }
    },
    "is_not_like": {
      "object_type": "class",
      "description": "Comparator for SQL NOT LIKE operator. Checks if a column value does not match a pattern (case-sensitive).",
      "parent_classes": [
        "Comparator"
      ],
      "init": {
        "parameters": [
          {
            "name": "value",
            "type": "str",
            "description": "The pattern to match against.",
            "default": "None",
            "required": true
          }
        ]
      }
    },
    "is_null": {
      "object_type": "class",
      "description": "Comparator for SQL 'IS NULL' operator. Checks if a column value is NULL.",
      "parent_classes": [
        "Comparator"
      ],
      "init": {
        "parameters": []
      }
    },
    "is_not_null": {
      "object_type": "class",
      "description": "Comparator for SQL IS NOT NULL operator. Checks if a column value is not NULL.",
      "parent_classes": [
        "Comparator"
      ],
      "init": {
        "parameters": []
      }
    },
    "is_ilike": {
      "object_type": "class",
      "description": "Comparator for SQL ILIKE operator. Checks if a column value matches a pattern (case-insensitive).",
      "parent_classes": [
        "Comparator"
      ],
      "init": {
        "parameters": [
          {
            "name": "value",
            "type": "str",
            "description": "The pattern to match against.",
            "default": "None",
            "required": true
          }
        ]
      }
    },
    "is_not_ilike": {
      "object_type": "class",
      "description": "Comparator for SQL NOT ILIKE operator. Checks if a column value does not match a pattern (case-insensitive).",
      "parent_classes": [
        "Comparator"
      ],
      "init": {
        "parameters": [
          {
            "name": "value",
            "type": "str",
            "description": "The pattern to match against.",
            "default": "None",
            "required": true
          }
        ]
      }
    }
  },
  "abstra.tasks": {
    "get_tasks": {
      "object_type": "function",
      "description": "Retrieve a list of pending tasks.",
      "signature": {
        "parameters": [
          {
            "name": "limit",
            "type": "Optional[int]",
            "description": "Maximum number of tasks to retrieve. Defaults to None which is interpreted as 100. Will be capped at 10000.",
            "default": "None",
            "required": false
          },
          {
            "name": "offset",
            "type": "int",
            "description": "Number of tasks to skip. Defaults to 0.",
            "default": "0",
            "required": false
          },
          {
            "name": "where",
            "type": "Optional[dict]",
            "description": "Dictionary of filters to apply. Defaults to None. List[Task]: List of pending tasks matching the criteria.",
            "default": "None",
            "required": false
          }
        ],
        "return_annotation": "typing.List[abstra_internals.controllers.sdk_tasks.Task]"
      }
    },
    "send_task": {
      "object_type": "function",
      "description": "Send a new task to the task queue.",
      "signature": {
        "parameters": [
          {
            "name": "type",
            "type": "str",
            "description": "Type identifier for the task.",
            "default": "None",
            "required": true
          },
          {
            "name": "payload",
            "type": "TaskPayload",
            "description": "Dictionary containing the task data.",
            "default": "None",
            "required": true
          },
          {
            "name": "show_warning",
            "type": "bool",
            "description": "Whether to show warnings. Defaults to True. Exception: If the payload is not a dictionary.",
            "default": "True",
            "required": false
          }
        ],
        "return_annotation": "None"
      }
    },
    "Task": {
      "object_type": "class",
      "description": "A task is a unit of work that can be sent to the execution engine.",
      "parent_classes": [],
      "init": {
        "parameters": []
      }
    },
    "get_trigger_task": {
      "object_type": "function",
      "description": "Retrieve the task that triggered the current execution. Returns: Task: The task object that triggered this execution.",
      "signature": {
        "parameters": [],
        "return_annotation": "<class 'abstra_internals.controllers.sdk_tasks.Task'>"
      }
    },
    "iter_tasks": {
      "object_type": "function",
      "description": "Iterate through all pending tasks, handling pagination automatically. This function yields tasks in batches determined by BATCH_SIZE constant.",
      "signature": {
        "parameters": [
          {
            "name": "where",
            "type": "Optional[dict]",
            "description": "Dictionary of filters to apply. Defaults to None. Task: Each pending task matching the criteria.",
            "default": "None",
            "required": false
          }
        ],
        "return_annotation": "typing.Iterator[abstra_internals.controllers.sdk_tasks.Task]"
      }
    },
    "get_sent_tasks": {
      "object_type": "function",
      "description": "Retrieve a list of tasks that have been sent.",
      "signature": {
        "parameters": [
          {
            "name": "limit",
            "type": "Optional[int]",
            "description": "Maximum number of tasks to retrieve. Defaults to None which is interpreted as 100 if where is also None.",
            "default": "None",
            "required": false
          },
          {
            "name": "offset",
            "type": "int",
            "description": "Number of tasks to skip. Defaults to 0.",
            "default": "0",
            "required": false
          },
          {
            "name": "where",
            "type": "Optional[dict]",
            "description": "Dictionary of filters to apply. Defaults to None. List[Task]: List of sent tasks matching the criteria.",
            "default": "None",
            "required": false
          }
        ],
        "return_annotation": "typing.List[abstra_internals.controllers.sdk_tasks.Task]"
      }
    }
  },
  "abstra.types": {
    "AbstraOption": {},
    "FileResponse": {
      "object_type": "deprecated"
    },
    "PhoneResponse": {
      "object_type": "deprecated"
    },
    "AppointmentSlot": {
      "object_type": "deprecated"
    }
  }
}