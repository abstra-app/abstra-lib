var V=Object.defineProperty;var z=(o,t,e)=>t in o?V(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var f=(o,t,e)=>(z(o,typeof t!="symbol"?t+"":t,e),e);import{r as O,c as G,en as K,al as Q,i as u,w as W}from"./jwt-decode.esm.9346ee60.js";import"./contracts.generated.7d01c746.js";import{A as v}from"./record.0c3b2519.js";import"./linters.3b932e0f.js";import{u as X}from"./polling.0f208a7e.js";(function(){try{var o=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},t=new Error().stack;t&&(o._sentryDebugIds=o._sentryDebugIds||{},o._sentryDebugIds[t]="0f0adaeb-3edb-4bd2-a5ef-11529e79a04b",o._sentryDebugIdIdentifier="sentry-dbid-0f0adaeb-3edb-4bd2-a5ef-11529e79a04b")}catch{}})();class Y{async list(){return await(await fetch("/_editor/api/forms")).json()}async create(t,e,r,i){return await(await fetch("/_editor/api/forms",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:t,file:e,position:r,id:i})})).json()}async get(t){try{return await(await fetch(`/_editor/api/forms/${t}`)).json()}catch{return null}}async update(t,e){return await(await fetch(`/_editor/api/forms/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).json()}async delete(t,e){const r=e?"?remove_file=true":"",i=`/_editor/api/forms/${t}`+r;await fetch(i,{method:"DELETE",headers:{"Content-Type":"application/json"}})}async duplicate(t){return await(await fetch(`/_editor/api/forms/${t}/duplicate`,{method:"POST"})).json()}}const m=new Y;class w{constructor(t){f(this,"record");this.record=v.create(m,t)}static async list(){return(await m.list()).map(e=>new w(e))}static async create(t,e,r,i){const a=await m.create(t,e,r,i);return new w(a)}static async get(t){const e=await m.get(t);return e?new w(e):null}get id(){return this.record.get("id")}get type(){return"form"}get allowRestart(){return this.record.get("allow_restart")}set allowRestart(t){this.record.set("allow_restart",t)}get file(){return this.record.get("file")}set file(t){this.record.set("file",t)}get autoStart(){return this.record.get("auto_start")}set autoStart(t){this.record.set("auto_start",t)}get endMessage(){return this.record.get("end_message")}set endMessage(t){this.record.set("end_message",t)}get errorMessage(){return this.record.get("error_message")}set errorMessage(t){this.record.set("error_message",t)}get path(){return this.record.get("path")}set path(t){this.record.set("path",t)}get restartButtonText(){return this.record.get("restart_button_text")}set restartButtonText(t){this.record.set("restart_button_text",t)}get startButtonText(){return this.record.get("start_button_text")}set startButtonText(t){this.record.set("start_button_text",t)}get startMessage(){return this.record.get("start_message")}set startMessage(t){this.record.set("start_message",t)}get timeoutMessage(){return this.record.get("timeout_message")}set timeoutMessage(t){this.record.set("timeout_message",t)}get notificationTrigger(){return new Proxy(this.record.get("notification_trigger"),{set:(t,e,r)=>(this.record.set("notification_trigger",{...t,[e]:r}),!0)})}set notificationTrigger(t){this.record.set("notification_trigger",t)}get(t){return this.record.get(t)}set(t,e){this.record.set(t,e)}get title(){return this.record.get("title")}set title(t){this.record.set("title",t)}get codeContent(){return this.record.get("code_content")}set codeContent(t){this.record.set("code_content",t)}get welcomeTitle(){return this.record.get("welcome_title")}set welcomeTitle(t){this.record.set("welcome_title",t)}async save(t){const e=this.codeContent;await this.record.save(t),this.record.updateInitialState("code_content",e)}onUpdate(t){this.record.pubsub.subscribe("update",t)}hasChanges(t){return this.record.hasChanges(t)}hasChangesDeep(t){return this.record.hasChangesDeep(t)}getInitialState(t){return this.record.getInitialState(t)}updateInitialState(t,e){this.record.updateInitialState(t,e)}async delete(t){await m.delete(this.id,t)}async duplicate(){const t=await m.duplicate(this.id);return new w(t)}makeRunnerData(t){return{...t.makeRunnerData(),id:this.id,isLocal:!0,path:this.path,title:this.title,isInitial:this.isInitial,runtimeType:"form",autoStart:this.autoStart,endMessage:this.endMessage,errorMessage:this.errorMessage,allowRestart:this.allowRestart,welcomeTitle:this.welcomeTitle,startMessage:this.startMessage,timeoutMessage:this.timeoutMessage,startButtonText:this.startButtonText,restartButtonText:this.restartButtonText}}get position(){const[t,e]=this.record.get("workflow_position");return{x:t,y:e}}get isInitial(){return this.record.get("is_initial")}static from(t){return new w(t)}}class Z{async list(){return await(await fetch("/_editor/api/hooks")).json()}async create(t,e,r,i){return await(await fetch("/_editor/api/hooks",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:t,file:e,position:r,id:i})})).json()}async get(t){try{return await(await fetch(`/_editor/api/hooks/${t}`)).json()}catch{return null}}async update(t,e){return await(await fetch(`/_editor/api/hooks/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).json()}async delete(t,e){const r=e?"?remove_file=true":"",i=`/_editor/api/hooks/${t}`+r;await fetch(i,{method:"DELETE",headers:{"Content-Type":"application/json"}})}async run(t,e){const r=new URLSearchParams(e.query),i=await fetch(`/_editor/api/hooks/${t}/run?${r.toString()}`,{method:e.method,headers:{"Content-Type":"application/json",...e.headers},body:e.method==="GET"?void 0:e.body}),{status:a,headers:d,body:h}=await i.json();return{status:a,headers:d,body:h}}}const T=new Z;class _{constructor(t){f(this,"record");this.record=v.create(T,t)}static async list(){return(await T.list()).map(e=>new _(e))}static async create(t,e,r,i){const a=await T.create(t,e,r,i);return new _(a)}static async get(t){const e=await T.get(t);return e?new _(e):null}async delete(t){await T.delete(this.id,t)}async duplicate(){return this}async save(t){const e=this.codeContent;await this.record.save(t),this.record.updateInitialState("code_content",e)}onUpdate(t){this.record.pubsub.subscribe("update",t)}hasChanges(t){return this.record.hasChanges(t)}getInitialState(t){return this.record.getInitialState(t)}updateInitialState(t,e){this.record.updateInitialState(t,e)}get id(){return this.record.get("id")}get type(){return"hook"}get path(){return this.record.get("path")}set path(t){this.record.set("path",t)}get title(){return this.record.get("title")}set title(t){this.record.set("title",t)}get codeContent(){return this.record.get("code_content")}set codeContent(t){this.record.set("code_content",t)}get file(){return this.record.get("file")}set file(t){this.record.set("file",t)}async run(t){return T.run(this.id,t)}get position(){const[t,e]=this.record.get("workflow_position");return{x:t,y:e}}get isInitial(){return this.record.get("is_initial")}static from(t){return new _(t)}}class q{async list(){return await(await fetch("/_editor/api/jobs")).json()}async create(t,e,r,i){return await(await fetch("/_editor/api/jobs",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:t,file:e,position:r,id:i})})).json()}async get(t){try{return await(await fetch(`/_editor/api/jobs/${t}`)).json()}catch{return null}}async update(t,e){return await(await fetch(`/_editor/api/jobs/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).json()}async delete(t,e){const r=e?"?remove_file=true":"",i=`/_editor/api/jobs/${t}`+r;await fetch(i,{method:"DELETE",headers:{"Content-Type":"application/json"}})}async run(t){return(await fetch(`/_editor/api/jobs/${t}/run`,{method:"POST",headers:{"Content-Type":"application/json"}})).ok}}const S=new q;class I{constructor(t){f(this,"record");f(this,"isInitial",!0);this.record=v.create(S,t)}static async list(){return(await S.list()).map(e=>new I(e))}static async create(t,e,r,i){const a=await S.create(t,e,r,i);return new I(a)}static async get(t){const e=await S.get(t);return e?new I(e):null}async delete(t){await S.delete(this.id,t)}async duplicate(){return this}async save(t){const e=this.codeContent;await this.record.save(t),this.record.updateInitialState("code_content",e)}onUpdate(t){this.record.pubsub.subscribe("update",t)}hasChanges(t){return this.record.hasChanges(t)}getInitialState(t){return this.record.getInitialState(t)}updateInitialState(t,e){this.record.updateInitialState(t,e)}get schedule(){return this.record.get("schedule")}set schedule(t){this.record.set("schedule",t)}get type(){return"job"}get title(){return this.record.get("title")}set title(t){this.record.set("title",t)}get codeContent(){return this.record.get("code_content")}set codeContent(t){this.record.set("code_content",t)}get file(){return this.record.get("file")}set file(t){this.record.set("file",t)}get id(){return this.record.get("id")}async run(){return S.run(this.id)}get position(){const[t,e]=this.record.get("workflow_position");return{x:t,y:e}}static from(t){return new I(t)}hasChangesDeep(t){return this.record.hasChangesDeep(t)}}class F{async list(){return await(await fetch("/_editor/api/scripts")).json()}async create(t,e,r,i){return await(await fetch("/_editor/api/scripts",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:t,file:e,position:r,id:i})})).json()}async get(t){try{return await(await fetch(`/_editor/api/scripts/${t}`)).json()}catch{return null}}async update(t,e){return await(await fetch(`/_editor/api/scripts/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).json()}async delete(t,e){const r=e?"?remove_file=true":"",i=`/_editor/api/scripts/${t}`+r;await fetch(i,{method:"DELETE",headers:{"Content-Type":"application/json"}})}async run(t,e){return(await fetch(`/_editor/api/scripts/${t}/run`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({task_id:e})})).ok}}const b=new F;class C{constructor(t){f(this,"record");this.record=v.create(b,t)}static async list(){return(await b.list()).map(e=>new C(e))}static async create(t,e,r,i){const a=await b.create(t,e,r,i);return new C(a)}static async get(t){const e=await b.get(t);return e?new C(e):null}async delete(t){await b.delete(this.id,t)}async duplicate(){return this}async save(t){const e=this.codeContent;await this.record.save(t),this.record.updateInitialState("code_content",e)}onUpdate(t){this.record.pubsub.subscribe("update",t)}hasChanges(t){return this.record.hasChanges(t)}getInitialState(t){return this.record.getInitialState(t)}updateInitialState(t,e){this.record.updateInitialState(t,e)}get id(){return this.record.get("id")}get codeContent(){return this.record.get("code_content")}set codeContent(t){this.record.set("code_content",t)}get title(){return this.record.get("title")}set title(t){this.record.set("title",t)}get type(){return"tasklet"}get file(){return this.record.get("file")}set file(t){this.record.set("file",t)}get path(){return this.record.get("path")}set path(t){this.record.set("path",t)}async run(t){return b.run(this.id,t)}get position(){const[t,e]=this.record.get("workflow_position");return{x:t,y:e}}get isInitial(){return!1}static from(t){return new C(t)}}function H({api:o,fetchTasks:t}){const e=O({state:"idle"}),r=()=>{e.value={state:"idle"}},i=()=>{e.value={state:"creating",name:"My task",payloadCode:`{
    "key": "value"
  }`}},a=async h=>{const g=e.value;if(g.state!=="creating")throw new Error("Payload is required to create a task");if(!d.value)return;const c=JSON.parse(g.payloadCode),p=await o.createTask(g.name,h,c);return await t(),r(),p},d=G(()=>{const h=e.value;if(h.state!=="creating")return!1;try{const g=JSON.parse(h.payloadCode);return K.exports.isObject(g)}catch{return!1}});return{createTask:a,creatingTaskState:e,cancelCreatingTask:r,startCreatingTask:i,isPayloadValid:d}}const P=["pink","orange","green","blue","purple","red","cyan","magenta","volcano","gold"],ot=({api:o,poll:t,stageId:e,status:r,stages:i})=>{const a=Q({tasks:[],sentTasks:[],colorMap:new Map,pagination:{currentIndex:0,pageSize:10,totalCount:0},filters:{stage:e,status:r,dateRange:void 0},filterOptions:{stages:[],statuses:[{label:u.translate("i18n_tasksview_status_pending"),value:"pending"},{label:u.translate("i18n_tasksview_status_running"),value:"started"},{label:u.translate("i18n_tasksview_status_completed"),value:"completed"}]}}),d=[{name:"setToPending",label:u.translate("i18n_tasksview_action_set_to_pending"),handler:()=>{a.tasks.filter(s=>s.checked).map(s=>s.id).forEach(s=>x(s))}},{name:"setToCompleted",label:u.translate("i18n_tasksview_action_set_to_completed"),handler:()=>{a.tasks.filter(s=>s.checked).map(s=>s.id).forEach(s=>E(s))}},{name:"duplicate",label:u.translate("i18n_tasksview_action_duplicate"),handler:()=>{a.tasks.filter(s=>s.checked).forEach(async s=>{await o.createTask(s.type,s.targetStageId,s.payload),c()})}}],h=O(["pending"]),g=n=>{const s=a.tasks.findIndex(y=>y.id===n.id);s!==-1?a.tasks[s]=n:a.tasks.unshift(n)},c=async()=>{const n=e?await o.getStageTasks(e):await o.getAllTasks(a.pagination,a.filters);a.tasks=n.tasks.map(s=>({key:s.id,id:s.id,type:s.type,status:s.status,targetStageId:s.targetStageId,targetStageTitle:s.targetStageTitle,targetStageType:s.targetStageType,sourceStageTitle:s.sourceStageTitle,sourceStageType:s.sourceStageType,created:{at:new Date(s.created.at).toString(),byExecutionId:s.created.byExecutionId,byStageId:s.created.byStageId},locked:s.locked?{at:new Date(s.locked.at).toString(),byExecutionId:s.locked.byExecutionId,byStageId:s.locked.byStageId}:null,completed:s.completed?{at:new Date(s.completed.at).toString(),byExecutionId:s.completed.byExecutionId,byStageId:s.completed.byStageId}:null,payload:s.payload,checked:!1})),a.pagination.totalCount=n.totalCount},p=async()=>{if(!e)return[];const n=await o.getSentStageTasks(e);a.sentTasks=n.tasks.map(s=>({key:s.id,id:s.id,type:s.type,status:s.status,targetStageId:s.targetStageId,targetStageTitle:s.targetStageTitle,targetStageType:s.targetStageType,sourceStageTitle:s.sourceStageTitle,sourceStageType:s.sourceStageType,created:{at:new Date(s.created.at).toString(),byExecutionId:s.created.byExecutionId,byStageId:s.created.byStageId},locked:s.locked?{at:new Date(s.locked.at).toString(),byExecutionId:s.locked.byExecutionId,byStageId:s.locked.byStageId}:null,completed:s.completed?{at:new Date(s.completed.at).toString(),byExecutionId:s.completed.byExecutionId,byStageId:s.completed.byStageId}:null,payload:s.payload}))},j=()=>{var y;let n=0;a.tasks.concat((y=a.sentTasks)!=null?y:[]).forEach(k=>{a.colorMap.has(k.type)||(a.colorMap.set(k.type,P[n]),n=(n+1)%P.length)})};W(a.filters,async()=>{await Promise.all([c(),p()]),j()});const D=async()=>{await Promise.all([c(),p()]),j()},{startPolling:$,endPolling:A}=X({task:D,interval:15e3}),N=async()=>{if(await Promise.all([c(),p()]),j(),i===null){const n=Promise.all([w.list(),_.list(),I.list(),C.list()]).then(([s,y,k,l])=>[...s,...y,...k,...l]);a.filterOptions.stages=(await n).map(s=>({label:s.title,value:s.id}))}else a.filterOptions.stages=i.map(n=>({label:n.stageTitle,value:n.id}));t&&$()},J=()=>{t&&A()},x=async n=>{await o.updateTaskStatus(n,"pending"),c()},E=async n=>{await o.updateTaskStatus(n,"completed"),c()},U=n=>{a.tasks=a.tasks.map(s=>(s.id===n&&(s.checked=!s.checked),s))},M=()=>{const n=[],s=a.tasks.filter(l=>l.checked);return s.length===0?[]:(n.push("duplicate"),s.every(l=>l.status==="pending")&&n.push("setToCompleted"),s.every(l=>l.status==="completed")&&n.push("setToPending"),d.filter(l=>n.includes(l.name)))},R=async()=>{await o.clearAllTasks(),c(),p()},B=()=>[{title:u.translate("i18n_tasksview_column_date"),key:"timeInfo",align:"left",width:"25%"},{title:u.translate("i18n_tasksview_column_task"),key:"stageInfo",align:"left",width:"30%"},{title:u.translate("i18n_tasksview_column_payload"),key:"payloadInfo",align:"left",width:"45%"}],L=H({api:o,fetchTasks:c});return{setup:N,tearDown:J,state:a,getColumns:B,collapseValue:h,setToPending:x,setToCompleted:E,fetchTasks:c,fetchSentTasks:p,checkTask:U,getPossibleActions:M,clearAllTasks:R,insertOrUpdate:g,...L}};export{w as F,_ as H,I as J,C as S,ot as T};
//# sourceMappingURL=tasksController.b383a77e.js.map
