var h=Object.defineProperty;var l=(s,e,t)=>e in s?h(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var c=(s,e,t)=>(l(s,typeof e!="symbol"?e+"":e,t),t);import{cQ as d,S as i,q as f}from"./outputWidgets.26ad1119.js";(function(){try{var s=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},e=new Error().stack;e&&(s._sentryDebugIds=s._sentryDebugIds||{},s._sentryDebugIds[e]="30efe7b5-28d5-4e6c-822e-4454cdfd3464",s._sentryDebugIdIdentifier="sentry-dbid-30efe7b5-28d5-4e6c-822e-4454cdfd3464")}catch{}})();const y=()=>window.location.host.includes(".abstra.io"),w={authn:"/api/authn","cloud-api":"/api/cloud-api"},b={authn:"https://authn.abstra.cloud","cloud-api":"https://cloud-api.abstra.cloud"},u=s=>{const e="VITE_"+d.toUpper(d.snakeCase(s)),t={VITE_SENTRY_RELEASE:"663187366a0332812ed8b0282bdccfee0a216689",BASE_URL:"/",MODE:"production",DEV:!1,PROD:!0}[e];return t||(y()?w[s]:b[s])},p={authn:u("authn"),cloudApi:u("cloud-api")};class m{static async trackSession(e){const t=Object.fromEntries(document.cookie.split("; ").map(r=>r.split(/=(.*)/s).map(decodeURIComponent))),a=new URLSearchParams(window.location.search).get("session")||t.abstra_session;await fetch("https://usage-api.abstra.cloud/api/rest/session",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({referrer:document.referrer,href:location.href,queryParams:Object.fromEntries(new URLSearchParams(location.search)),previousSessionId:a,email:e})})}static async trackPageView(e){const t=Object.fromEntries(document.cookie.split("; ").map(r=>r.split(/=(.*)/s).map(decodeURIComponent))),a=new URLSearchParams(window.location.search).get("session")||t.abstra_session;await fetch("https://usage-api.abstra.cloud/api/rest/hackerforms/browser",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({previousSessionId:a,author_email:e,type:"PageView",payload:{referrer:document.referrer,href:location.href,queryParams:Object.fromEntries(new URLSearchParams(location.search))}})})}}const o=class{async authenticate(e){try{const t=await fetch(`${p.authn}/authenticate`,{method:"POST",headers:{"content-type":"application/json"},body:JSON.stringify({email:e,clientId:o.clientId,projectId:o.projectId})});if(!t.ok)throw new Error(await t.text());return null}catch(t){return t.message}}async verify(e,t){const a=await fetch(`${p.authn}/verify`,{method:"POST",headers:{"content-type":"application/json"},body:JSON.stringify({email:e,token:t})});if(!a.ok)throw new Error(await a.text());const r=await a.json();return this.saveJWT(r.jwt),m.trackSession(e),this.getAuthor()}saveJWT(e){i.set(o.key,e)}getJWT(){return i.get(o.key)}getAuthor(){const e=this.getJWT();if(e)try{const t=f(e);if(t.exp&&t.exp>Date.now()/1e3)return{jwt:e,claims:t}}catch{console.warn("Invalid JWT")}return null}removeAuthor(){i.remove(o.key)}get headers(){const e=this.getJWT();return e?{"Author-Authorization":`Bearer ${e}`}:{}}};let n=o;c(n,"key","abstracloud:auth:jwt"),c(n,"clientId","abstra:console"),c(n,"projectId","abstra:console");const E=new n;export{p as E,m as T,E as a};
//# sourceMappingURL=authorManager.e388ffc8.js.map
