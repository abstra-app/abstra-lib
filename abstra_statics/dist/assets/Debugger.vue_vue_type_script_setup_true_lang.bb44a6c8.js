import{d as y,r as h,o as w,K as v,b as s,c as d,w as e,aA as a,u as t,bZ as u,f as n,eB as m,cB as k}from"./outputWidgets.6f5f26c6.js";import{A,a as b}from"./Text.9c898266.js";import{A as g}from"./index.ec9a4cda.js";(function(){try{var o=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},r=new Error().stack;r&&(o._sentryDebugIds=o._sentryDebugIds||{},o._sentryDebugIds[r]="fa0a3b4a-14f5-49b3-8e70-bb8308f55176",o._sentryDebugIdIdentifier="sentry-dbid-fa0a3b4a-14f5-49b3-8e70-bb8308f55176")}catch{}})();const I=y({__name:"Debugger",setup(o){async function r(){const f=await fetch("/_editor/api/debugger",{method:"GET"});if(!f.ok)throw new Error("Failed to check debugger connection");return await f.json()}async function i(){await fetch("/_editor/api/debugger/vscode-launch",{method:"POST"}),_()}const c=h({connected:!1,port:0,is_launch_json_configured:!1});async function _(){c.value=await r()}let l=null;return w(()=>{l=setInterval(_,1e3)}),v(()=>{l&&clearInterval(l)}),(f,p)=>c.value.connected?(s(),d(t(u),{key:0,disabled:""},{default:e(()=>[a("VSCode connected")]),_:1})):(s(),d(t(k),{key:1},{content:e(()=>[n(t(g),{direction:"vertical"},{default:e(()=>[n(t(A),null,{default:e(()=>[a(" Abstra allows you to connect to your VSCode debugger ")]),_:1}),n(t(b),null,{default:e(()=>[a(" You're not connected ")]),_:1}),c.value.is_launch_json_configured?(s(),d(t(g),{key:0,direction:"vertical"},{default:e(()=>[n(t(b),{style:{"font-size":"24px"},copyable:"",code:""},{default:e(()=>[a(m(c.value.port),1)]),_:1}),n(t(u),{href:"https://docs.abstra.io/debug/vscode",target:"_blank"},{default:e(()=>[a(" Learn how to connect to vscode ")]),_:1})]),_:1})):(s(),d(t(u),{key:1,onClick:i},{default:e(()=>[a("Configure launch.json")]),_:1}))]),_:1})]),default:e(()=>[n(t(u),null,{default:e(()=>[a("Connect to VSCode")]),_:1})]),_:1}))}});export{I as _};
//# sourceMappingURL=Debugger.vue_vue_type_script_setup_true_lang.bb44a6c8.js.map
