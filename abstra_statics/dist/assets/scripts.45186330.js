var b=Object.defineProperty;var j=(a,t,e)=>t in a?b(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var d=(a,t,e)=>(j(a,typeof t!="symbol"?t+"":t,e),e);import{A as f}from"./record.21329a0f.js";import"./outputWidgets.3d482011.js";(function(){try{var a=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},t=new Error().stack;t&&(a._sentryDebugIds=a._sentryDebugIds||{},a._sentryDebugIds[t]="d41d7064-b231-4f7f-a3e4-b2f6d8b9395b",a._sentryDebugIdIdentifier="sentry-dbid-d41d7064-b231-4f7f-a3e4-b2f6d8b9395b")}catch{}})();class m{async list(){return await(await fetch("/_editor/api/hooks")).json()}async create(t,e,s){return await(await fetch("/_editor/api/hooks",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:t,file:e,position:s})})).json()}async get(t){return await(await fetch(`/_editor/api/hooks/${t}`)).json()}async update(t,e){return await(await fetch(`/_editor/api/hooks/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).json()}async delete(t,e){const s=e?"?remove_file=true":"",r=`/_editor/api/hooks/${t}`+s;await fetch(r,{method:"DELETE",headers:{"Content-Type":"application/json"}})}async run(t,e){const s=new URLSearchParams(e.query),r=await fetch(`/_editor/api/hooks/${t}/run?${s.toString()}`,{method:e.method,headers:{"Content-Type":"application/json",...e.headers},body:e.method==="GET"?void 0:e.body}),{status:c,headers:l,body:y,stderr:g,stdout:w}=await r.json();return{status:c,headers:l,body:y,stderr:g,stdout:w}}async test(t,e){const s=new URLSearchParams(e.query),r=await fetch(`/_editor/api/hooks/${t}/test?${s.toString()}`,{method:e.method,headers:{"Content-Type":"application/json",...e.headers},body:e.method==="GET"?void 0:e.body}),{status:c,headers:l,body:y,stderr:g,stdout:w}=await r.json();return{status:c,headers:l,body:y,stderr:g,stdout:w}}}const n=new m;class h{constructor(t){d(this,"record");this.record=f.create(n,t)}static async list(){return(await n.list()).map(e=>new h(e))}static async create(t,e,s){const r=await n.create(t,e,s);return new h(r)}static async get(t){const e=await n.get(t);return new h(e)}async delete(t){await n.delete(this.id,t)}async duplicate(){return this}async save(t){await this.record.save(t)}onUpdate(t){this.record.pubsub.subscribe("update",t)}hasChanges(t){return this.record.hasChanges(t)}getInitialState(t){return this.record.getInitialState(t)}updateInitialState(t,e){this.record.updateInitialState(t,e)}get id(){return this.record.get("id")}get type(){return"hook"}get path(){return this.record.get("path")}set path(t){this.record.set("path",t)}get title(){return this.record.get("title")}set title(t){this.record.set("title",t)}get codeContent(){return this.record.get("code_content")}set codeContent(t){this.record.set("code_content",t)}get file(){return this.record.get("file")}set file(t){this.record.set("file",t)}async run(t){return n.run(this.id,t)}async test(t){return n.test(this.id,t)}get position(){const[t,e]=this.record.get("workflow_position");return{x:t,y:e,referential:"world"}}get isInitial(){return this.record.get("is_initial")}static from(t){return new h(t)}}class T{async list(){return await(await fetch("/_editor/api/jobs")).json()}async create(t,e,s){return await(await fetch("/_editor/api/jobs",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:t,file:e,position:s})})).json()}async get(t){return await(await fetch(`/_editor/api/jobs/${t}`)).json()}async update(t,e){return await(await fetch(`/_editor/api/jobs/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).json()}async delete(t,e){const s=e?"?remove_file=true":"",r=`/_editor/api/jobs/${t}`+s;await fetch(r,{method:"DELETE",headers:{"Content-Type":"application/json"}})}async run(t){return(await fetch(`/_editor/api/jobs/${t}/run`,{method:"POST",headers:{"Content-Type":"application/json"}})).json()}async test(t){return(await fetch(`/_editor/api/jobs/${t}/test`,{method:"POST",headers:{"Content-Type":"application/json"}})).json()}}const i=new T;class p{constructor(t){d(this,"record");d(this,"isInitial",!0);this.record=f.create(i,t)}static async list(){return(await i.list()).map(e=>new p(e))}static async create(t,e,s){const r=await i.create(t,e,s);return new p(r)}static async get(t){const e=await i.get(t);return new p(e)}async delete(t){await i.delete(this.id,t)}async duplicate(){return this}async save(t){await this.record.save(t)}onUpdate(t){this.record.pubsub.subscribe("update",t)}hasChanges(t){return this.record.hasChanges(t)}getInitialState(t){return this.record.getInitialState(t)}updateInitialState(t,e){this.record.updateInitialState(t,e)}get schedule(){return this.record.get("schedule")}set schedule(t){this.record.set("schedule",t)}get type(){return"job"}get title(){return this.record.get("title")}set title(t){this.record.set("title",t)}get codeContent(){return this.record.get("code_content")}set codeContent(t){this.record.set("code_content",t)}get file(){return this.record.get("file")}set file(t){this.record.set("file",t)}get id(){return this.record.get("id")}async test(){return i.test(this.id)}async run(){return i.run(this.id)}get position(){const[t,e]=this.record.get("workflow_position");return{x:t,y:e,referential:"world"}}static from(t){return new p(t)}hasChangesDeep(t){return this.record.hasChangesDeep(t)}}class C{async list(){return await(await fetch("/_editor/api/scripts")).json()}async create(t,e,s){return await(await fetch("/_editor/api/scripts",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:t,file:e,position:s})})).json()}async get(t){return await(await fetch(`/_editor/api/scripts/${t}`)).json()}async update(t,e){return await(await fetch(`/_editor/api/scripts/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).json()}async delete(t,e){const s=e?"?remove_file=true":"",r=`/_editor/api/scripts/${t}`+s;await fetch(r,{method:"DELETE",headers:{"Content-Type":"application/json"}})}async run(t,e){return(await fetch(`/_editor/api/scripts/${t}/run`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({stage_run_id:e})})).json()}async test(t){return(await fetch(`/_editor/api/scripts/${t}/test`,{method:"POST",headers:{"Content-Type":"application/json"}})).json()}}const o=new C;class u{constructor(t){d(this,"record");this.record=f.create(o,t)}static async list(){return(await o.list()).map(e=>new u(e))}static async create(t,e,s){const r=await o.create(t,e,s);return new u(r)}static async get(t){const e=await o.get(t);return new u(e)}async delete(t){await o.delete(this.id,t)}async duplicate(){return this}async save(t){await this.record.save(t)}onUpdate(t){this.record.pubsub.subscribe("update",t)}hasChanges(t){return this.record.hasChanges(t)}getInitialState(t){return this.record.getInitialState(t)}updateInitialState(t,e){this.record.updateInitialState(t,e)}get id(){return this.record.get("id")}get codeContent(){return this.record.get("code_content")}set codeContent(t){this.record.set("code_content",t)}get title(){return this.record.get("title")}set title(t){this.record.set("title",t)}get type(){return"script"}get file(){return this.record.get("file")}set file(t){this.record.set("file",t)}get path(){return this.record.get("path")}set path(t){this.record.set("path",t)}async test(){return o.test(this.id)}async run(t){return o.run(this.id,t)}get position(){const[t,e]=this.record.get("workflow_position");return{x:t,y:e,referential:"world"}}get isInitial(){return!1}static from(t){return new u(t)}}export{h as H,p as J,u as S};
//# sourceMappingURL=scripts.45186330.js.map
