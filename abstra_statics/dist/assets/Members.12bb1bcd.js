import{d as b,K as f,b as y,t as g,z as s,J as _}from"./registerWidgets.8e2e133d.js";import{a as w}from"./asyncComputed.a6090ca2.js";import"./gateway.57276d9e.js";import{M as i}from"./member.7e42d6a2.js";import{C as I}from"./CrudView.927f6207.js";import"./passwordlessManager.cb9f88a0.js";import"./activeRecord.eba5e90d.js";import"./DropdownMenu.fda067f6.js";import"./Modal.2a0bcd16.js";import"./LoadingIndicator.e71709b4.js";import"./lottie.7a1c6d39.js";(function(){try{var e=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},a=new Error().stack;a&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[a]="c100280a-2e8d-446c-98b6-7b7d66dad364",e._sentryDebugIdIdentifier="sentry-dbid-c100280a-2e8d-446c-98b6-7b7d66dad364")}catch{}})();const A=b({__name:"Members",setup(e){const o=_().params.organizationId,m=[{key:"email",label:"Email"}],d=async t=>{await i.create(o,t.email),p()},{loading:l,result:c,refetch:p}=w(()=>i.list(o)),u=f(()=>{var t,r;return{columns:[{name:"Email"},{name:"Role"}],rows:(r=(t=c.value)==null?void 0:t.map(n=>({key:n.email,cells:[{text:n.email,classes:["title","centered"]},{text:n.role,classes:["centered"]}]})))!=null?r:[]}});return(t,r)=>(y(),g(I,{"entity-name":"members",loading:s(l),title:"Organization members",description:"List all organization members.","empty-title":"No members yet",table:s(u),"create-button-text":"Add members",fields:m,onCreate:d},null,8,["loading","table"]))}});export{A as default};
//# sourceMappingURL=Members.12bb1bcd.js.map
