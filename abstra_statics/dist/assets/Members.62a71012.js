import{d as u,K as f,b as y,t as g,z as s,J as _}from"./registerWidgets.6f0bbac2.js";import{a as w}from"./asyncComputed.e83909df.js";import"./gateway.2f3fe23e.js";import{M as i}from"./member.07bf274e.js";import{C as I}from"./CrudView.187b501e.js";import"./passwordlessManager.643e43e8.js";import"./activeRecord.9b68dfe2.js";import"./DropdownMenu.d2068d7f.js";import"./Modal.4278a303.js";import"./LoadingIndicator.c91a20ef.js";import"./lottie.68b1efe0.js";(function(){try{var e=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},a=new Error().stack;a&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[a]="ab145635-b5f6-4b97-ae2b-ba3b8dfa16b8",e._sentryDebugIdIdentifier="sentry-dbid-ab145635-b5f6-4b97-ae2b-ba3b8dfa16b8")}catch{}})();const A=u({__name:"Members",setup(e){const o=_().params.organizationId,m=[{key:"email",label:"Email"}],l=async t=>{await i.create(o,t.email),c()},{loading:d,result:b,refetch:c}=w(()=>i.list(o)),p=f(()=>{var t,r;return{columns:[{name:"Email"},{name:"Role"}],rows:(r=(t=b.value)==null?void 0:t.map(n=>({key:n.email,cells:[{text:n.email,classes:["title","centered"]},{text:n.role,classes:["centered"]}]})))!=null?r:[]}});return(t,r)=>(y(),g(I,{"entity-name":"members",loading:s(d),title:"Organization members",description:"List all organization members.","empty-title":"No members yet",table:s(p),"create-button-text":"Add members",fields:m,onCreate:l},null,8,["loading","table"]))}});export{A as default};
//# sourceMappingURL=Members.62a71012.js.map
