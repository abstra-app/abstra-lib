import{d as l,eO as f,K as _,o as h,O as p,dl as b,f as g,x as m}from"./outputWidgets.aedb9989.js";import{E as v}from"./ExclamationCircleOutlined.1aa0b2ca.js";import{M as y}from"./Modal.6d96e682.js";(function(){try{var n=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},a=new Error().stack;a&&(n._sentryDebugIds=n._sentryDebugIds||{},n._sentryDebugIds[a]="dbe2b8cc-57e6-4d4e-bc73-d5faf7a6c225",n._sentryDebugIdIdentifier="sentry-dbid-dbe2b8cc-57e6-4d4e-bc73-d5faf7a6c225")}catch{}})();const c="You have unsaved changes. Are you sure you want to leave?",w=l({__name:"UnsavedChangesHandler",props:{hasChanges:{type:Boolean}},setup(n){const a=n,o=e=>(e=e||window.event,e&&(e.returnValue=c),c),i=()=>{window.addEventListener("beforeunload",o)};f(async(e,u,s)=>{if(!a.hasChanges)return s();await new Promise(r=>{y.confirm({title:"You have unsaved changes.",icon:g(v),content:"Are you sure you want to discard them?",okText:"Discard Changes",okType:"danger",cancelText:"Cancel",onOk(){r(!0)},onCancel(){r(!1)}})})?s():s(!1)});const t=()=>window.removeEventListener("beforeunload",o),d=e=>e?i():t();return _(()=>a.hasChanges,d),h(()=>d(a.hasChanges)),p(t),(e,u)=>b(e.$slots,"default",{},void 0,!0)}});const x=m(w,[["__scopeId","data-v-79207dcb"]]);export{x as U};
//# sourceMappingURL=UnsavedChangesHandler.5204ecb7.js.map
