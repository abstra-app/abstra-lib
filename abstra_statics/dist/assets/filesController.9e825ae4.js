var o=Object.defineProperty;var c=(t,e,a)=>e in t?o(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a;var i=(t,e,a)=>(c(t,typeof e!="symbol"?e+"":e,a),a);import{A as d,a as p,b as h,c as b,d as l,e as y,f,g as w}from"./linters.4f2b6e14.js";import"./index.594f0369.js";(function(){try{var t=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},e=new Error().stack;e&&(t._sentryDebugIds=t._sentryDebugIds||{},t._sentryDebugIds[e]="0a553130-7906-49aa-b1c8-ed77984bf67a",t._sentryDebugIdIdentifier="sentry-dbid-0a553130-7906-49aa-b1c8-ed77984bf67a")}catch{}})();class g{async list(){const a=await(await fetch("/_editor/api/codebase/files")).json();return d.parse(a)}async create(e,a){const r=await(await fetch(`/_editor/api/codebase/files/${e}`,{method:"POST",body:a})).json();return p.parse(r)}async delete(e){const s=await(await fetch(`/_editor/api/codebase/files/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json"}})).json();return h.parse(s)}async update(e,a){const r=await(await fetch(`/_editor/api/codebase/files/${e}`,{method:"PUT",body:a})).json();return b.parse(r)}async retrieve(e){const s=await(await fetch(`/_editor/api/codebase/files/${e}`)).arrayBuffer();return new Uint8Array(s)}async rename(e,a){const s=l.parse({pathParts:e,newPathParts:a}),n=await(await fetch("/_editor/api/codebase/files/rename",{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)})).json();return y.parse(n)}async mkdir(e){const s=await(await fetch(`/_editor/api/codebase/dir/${e}`,{method:"POST",headers:{"Content-Type":"application/json"}})).json();return f.parse(s)}async settings(){const a=await(await fetch("/_editor/api/codebase/settings")).json();return w.parse(a)}}class F{constructor(e,a){i(this,"uploadFile",async(e,a)=>{const s=e.join(this.settings.separator);await this.api.create(s,a)});i(this,"deleteFile",async e=>{const a=e.join(this.settings.separator);await this.api.delete(a)});i(this,"renameFile",async(e,a)=>{await this.api.rename(e,a)});i(this,"editFile",async(e,a)=>{const s=e.join(this.settings.separator);await this.api.update(s,a)});i(this,"getFile",async e=>{const a=e.join(this.settings.separator);return this.api.retrieve(a)});i(this,"mkdir",async e=>{const a=e.join(this.settings.separator);await this.api.mkdir(a)});this.api=e,this.settings=a}}export{g as C,F};
//# sourceMappingURL=filesController.9e825ae4.js.map
