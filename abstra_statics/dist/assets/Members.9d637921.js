import{d as b,K as f,b as y,t as g,z as s,J as _}from"./registerWidgets.1590c05e.js";import{a as w}from"./asyncComputed.0f7a44c1.js";import"./gateway.d26fa955.js";import{M as i}from"./member.8fecd57a.js";import{C as I}from"./CrudView.179d2157.js";import"./passwordlessManager.e40e91a8.js";import"./activeRecord.e76d7c5c.js";import"./DropdownMenu.19ad0013.js";import"./Modal.654099b6.js";import"./LoadingIndicator.027fbbd1.js";import"./lottie.1e0c432a.js";(function(){try{var e=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},a=new Error().stack;a&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[a]="f981a9b4-8e37-414c-9955-44ca2b1a6e71",e._sentryDebugIdIdentifier="sentry-dbid-f981a9b4-8e37-414c-9955-44ca2b1a6e71")}catch{}})();const A=b({__name:"Members",setup(e){const o=_().params.organizationId,m=[{key:"email",label:"Email"}],l=async t=>{await i.create(o,t.email),p()},{loading:c,result:d,refetch:p}=w(()=>i.list(o)),u=f(()=>{var t,r;return{columns:[{name:"Email"},{name:"Role"}],rows:(r=(t=d.value)==null?void 0:t.map(n=>({key:n.email,cells:[{text:n.email,classes:["title","centered"]},{text:n.role,classes:["centered"]}]})))!=null?r:[]}});return(t,r)=>(y(),g(I,{"entity-name":"members",loading:s(c),title:"Organization members",description:"List all organization members.","empty-title":"No members yet",table:s(u),"create-button-text":"Add members",fields:m,onCreate:l},null,8,["loading","table"]))}});export{A as default};
//# sourceMappingURL=Members.9d637921.js.map
