import{d as u,eO as l,K as _,o as h,O as p,dn as g,f as m,x as v}from"./outputWidgets.29f7a477.js";import{E as y}from"./ExclamationCircleOutlined.e254b082.js";import{M as b}from"./Modal.7972ee69.js";(function(){try{var n=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},a=new Error().stack;a&&(n._sentryDebugIds=n._sentryDebugIds||{},n._sentryDebugIds[a]="360c28b4-c8e8-4a95-bfaf-a90f9fd7cd8d",n._sentryDebugIdIdentifier="sentry-dbid-360c28b4-c8e8-4a95-bfaf-a90f9fd7cd8d")}catch{}})();const c="You have unsaved changes. Are you sure you want to leave?",w=u({__name:"UnsavedChangesHandler",props:{hasChanges:{type:Boolean}},setup(n){const a=n,o=e=>(e=e||window.event,e&&(e.returnValue=c),c),i=()=>{window.addEventListener("beforeunload",o)};l(async(e,f,s)=>{if(!a.hasChanges)return s();await new Promise(r=>{b.confirm({title:"You have unsaved changes.",icon:m(y),content:"Are you sure you want to discard them?",okText:"Discard Changes",okType:"danger",cancelText:"Cancel",onOk(){r(!0)},onCancel(){r(!1)}})})?s():s(!1)});const t=()=>window.removeEventListener("beforeunload",o),d=e=>e?i():t();return _(()=>a.hasChanges,d),h(()=>d(a.hasChanges)),p(t),(e,f)=>g(e.$slots,"default",{},void 0,!0)}});const x=v(w,[["__scopeId","data-v-79207dcb"]]);export{x as U};
//# sourceMappingURL=UnsavedChangesHandler.54376b96.js.map
