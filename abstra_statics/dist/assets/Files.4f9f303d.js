var u=Object.defineProperty;var y=(r,e,t)=>e in r?u(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var n=(r,e,t)=>(y(r,typeof e!="symbol"?e+"":e,t),t);import{d as f,eA as g,J as b,b as w,c as _,u as h}from"./outputWidgets.bb3f51db.js";import"./console.6bb1f3af.js";import"./index.d7ab0193.js";import{C as k}from"./gateway.f68fad3e.js";import{A as v}from"./activeRecord.c79010ff.js";import{a as I}from"./asyncComputed.2cd59694.js";import{_ as D}from"./CrudView.vue_vue_type_script_setup_true_lang.0dc45fe5.js";import"./index.3783ccb5.js";import"./Form.2e2c8d13.js";import"./Title.6ccc42a5.js";import"./index.c8c8068b.js";import"./index.1cb265e5.js";import"./index.bc68c136.js";import"./dayjs.4fbebb05.js";import"./index.5a0d1b03.js";import"./index.14647457.js";import"./TabPane.37b7f7cd.js";import"./index.cb96ec6d.js";import"./CollapsePanel.137accbd.js";import"./index.1e743132.js";import"./index.ef2c839c.js";import"./index.f05c1d9c.js";import"./index.4843abaa.js";import"./index.14d03713.js";import"./index.456e34f0.js";import"./index.a3303e55.js";import"./index.9d8842e6.js";import"./pubsub.40a68d95.js";import"./icons.897a5c09.js";(function(){try{var r=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},e=new Error().stack;e&&(r._sentryDebugIds=r._sentryDebugIds||{},r._sentryDebugIds[e]="0b6a109c-6bfa-427c-ace2-390e30e54349",r._sentryDebugIdIdentifier="sentry-dbid-0b6a109c-6bfa-427c-ace2-390e30e54349")}catch{}})();class N{constructor(){n(this,"urlPath","files")}async create(e){throw new Error("Not implemented")}async delete(e,t){throw new Error("Not implemented")}async get(e){throw new Error("Not implemented")}async update(e,t){throw new Error("Not implemented")}async list(e){return k.get(`projects/${e}/${this.urlPath}`)}}const c=new N;class m{constructor(e,t){n(this,"record");this.projectId=e,this.record=v.create(c,t,"id")}static async list(e){return(await c.list(e)).map(a=>new m(e,a))}get key(){return this.record.get("name")}get name(){return this.record.get("name")}get size(){return this.record.get("size")}get date(){return new Date(this.record.get("date"))}}const re=f({__name:"Files",setup(r){const t=g().params.projectId,{loading:a,result:p}=I(()=>m.list(t)),l=[{label:"Variable name",key:"key"},{label:"Variable value",key:"value",type:"password"}],d=b(()=>{var i,s;return{columns:[{name:"Name"},{name:"Size"},{name:"Date"}],rows:(s=(i=p.value)==null?void 0:i.map(o=>({key:o.key,cells:[{text:o.key},{text:o.size.toString()},{text:o.date.toDateString()}]})))!=null?s:[]}});return(i,s)=>(w(),_(D,{"entity-name":"File",loading:h(a),title:"Files",description:"Persist files on your projects.","empty-title":"No environment variables set",table:d.value,fields:l},null,8,["loading","table"]))}});export{re as default};
//# sourceMappingURL=Files.4f9f303d.js.map
