import{d as b,K as f,b as y,t as g,z as s,J as _}from"./registerWidgets.7cf0d33e.js";import{a as w}from"./asyncComputed.0ce7cae2.js";import"./gateway.1543d32e.js";import{M as i}from"./member.3c3b3aba.js";import{C as I}from"./CrudView.5b53e164.js";import"./passwordlessManager.319d982e.js";import"./activeRecord.bddbe06b.js";import"./DropdownMenu.e550c7c7.js";import"./Modal.f8435634.js";import"./LoadingIndicator.8661078b.js";import"./lottie.adcbdb1d.js";(function(){try{var e=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},a=new Error().stack;a&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[a]="968a15db-7c9d-4c2c-94e0-a2eff0b830e5",e._sentryDebugIdIdentifier="sentry-dbid-968a15db-7c9d-4c2c-94e0-a2eff0b830e5")}catch{}})();const A=b({__name:"Members",setup(e){const o=_().params.organizationId,m=[{key:"email",label:"Email"}],l=async t=>{await i.create(o,t.email),p()},{loading:d,result:c,refetch:p}=w(()=>i.list(o)),u=f(()=>{var t,r;return{columns:[{name:"Email"},{name:"Role"}],rows:(r=(t=c.value)==null?void 0:t.map(n=>({key:n.email,cells:[{text:n.email,classes:["title","centered"]},{text:n.role,classes:["centered"]}]})))!=null?r:[]}});return(t,r)=>(y(),g(I,{"entity-name":"members",loading:s(d),title:"Organization members",description:"List all organization members.","empty-title":"No members yet",table:s(u),"create-button-text":"Add members",fields:m,onCreate:l},null,8,["loading","table"]))}});export{A as default};
//# sourceMappingURL=Members.9969c836.js.map
