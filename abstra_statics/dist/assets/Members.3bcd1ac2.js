import{d as p,K as u,b as y,t as g,z as s,J as _}from"./registerWidgets.68b4d727.js";import{a as w}from"./asyncComputed.93878fc8.js";import"./gateway.8f8e2838.js";import{M as i}from"./member.ae00d95c.js";import{C as I}from"./CrudView.5762b65c.js";import"./passwordlessManager.a7d5c3a4.js";import"./activeRecord.65858c58.js";import"./DropdownMenu.7c50a10a.js";import"./Modal.d08e28ea.js";import"./LoadingIndicator.980f9be2.js";import"./lottie.d1957a7e.js";(function(){try{var e=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},a=new Error().stack;a&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[a]="902c6526-7be9-42f1-82ca-8afec3bf43ba",e._sentryDebugIdIdentifier="sentry-dbid-902c6526-7be9-42f1-82ca-8afec3bf43ba")}catch{}})();const A=p({__name:"Members",setup(e){const o=_().params.organizationId,m=[{key:"email",label:"Email"}],l=async t=>{await i.create(o,t.email),b()},{loading:c,result:d,refetch:b}=w(()=>i.list(o)),f=u(()=>{var t,r;return{columns:[{name:"Email"},{name:"Role"}],rows:(r=(t=d.value)==null?void 0:t.map(n=>({key:n.email,cells:[{text:n.email,classes:["title","centered"]},{text:n.role,classes:["centered"]}]})))!=null?r:[]}});return(t,r)=>(y(),g(I,{"entity-name":"members",loading:s(c),title:"Organization members",description:"List all organization members.","empty-title":"No members yet",table:s(f),"create-button-text":"Add members",fields:m,onCreate:l},null,8,["loading","table"]))}});export{A as default};
//# sourceMappingURL=Members.3bcd1ac2.js.map
