import"./index.a95f3dfe.js";(function(){try{var a=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},e=new Error().stack;e&&(a._sentryDebugIds=a._sentryDebugIds||{},a._sentryDebugIds[e]="e27987e7-3981-4e24-9260-5ac6f07ae749",a._sentryDebugIdIdentifier="sentry-dbid-e27987e7-3981-4e24-9260-5ac6f07ae749")}catch{}})();class f{static async*sendMessage(e,t,o,s,c,y){var r;const n=await fetch("/_editor/api/ai/message",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({messages:e,stageId:t,langGraphThreadId:o,code:s,executionError:c})});if(!n.ok)throw new Error("Failed to send message");const i=(r=n.body)==null?void 0:r.getReader();if(!i)throw new Error("No response body");for(;!y();){const d=await i.read();if(d.done)break;yield new TextDecoder().decode(d.value)}}static async getHistory(e,t){const o=await fetch(`/_editor/api/ai/history?limit=${e}&offset=${t}`,{method:"GET"});if(!o.ok)throw new Error("Failed to fetch history");return await o.json()}static async createThread(){return(await fetch("/_editor/api/ai/thread",{method:"POST"})).json()}static async cancelAllRuns(e){return(await fetch("/_editor/api/ai/cancel-all",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({threadId:e})})).ok}static async generateProject(e){const t=await fetch("/_editor/api/ai/generate",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({prompt:e})});if(!t.ok){const o=await t.text();throw new Error(o)}}static async vote(e,t,o,s){await fetch("/_editor/api/ai/vote",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({vote:e,question:t,answer:o,context:s})})}}export{f as A};
//# sourceMappingURL=ai.08c4f0f8.js.map
