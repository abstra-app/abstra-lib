import{d as f,eO as l,K as _,o as h,O as p,dn as g,f as m,x as v}from"./outputWidgets.eb68177a.js";import{E as y}from"./ExclamationCircleOutlined.3792b97e.js";import{M as w}from"./Modal.92968fec.js";(function(){try{var n=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},a=new Error().stack;a&&(n._sentryDebugIds=n._sentryDebugIds||{},n._sentryDebugIds[a]="4e7fa563-e7c1-409c-896d-3653882b94f3",n._sentryDebugIdIdentifier="sentry-dbid-4e7fa563-e7c1-409c-896d-3653882b94f3")}catch{}})();const c="You have unsaved changes. Are you sure you want to leave?",b=f({__name:"UnsavedChangesHandler",props:{hasChanges:{type:Boolean}},setup(n){const a=n,o=e=>(e=e||window.event,e&&(e.returnValue=c),c),i=()=>{window.addEventListener("beforeunload",o)};l(async(e,u,s)=>{if(!a.hasChanges)return s();await new Promise(r=>{w.confirm({title:"You have unsaved changes.",icon:m(y),content:"Are you sure you want to discard them?",okText:"Discard Changes",okType:"danger",cancelText:"Cancel",onOk(){r(!0)},onCancel(){r(!1)}})})?s():s(!1)});const t=()=>window.removeEventListener("beforeunload",o),d=e=>e?i():t();return _(()=>a.hasChanges,d),h(()=>d(a.hasChanges)),p(t),(e,u)=>g(e.$slots,"default",{},void 0,!0)}});const x=v(b,[["__scopeId","data-v-79207dcb"]]);export{x as U};
//# sourceMappingURL=UnsavedChangesHandler.a63b4f74.js.map
