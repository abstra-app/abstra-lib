var q=Object.defineProperty;var G=(i,t,e)=>t in i?q(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var f=(i,t,e)=>(G(i,typeof t!="symbol"?t+"":t,e),e);import{k as j}from"./router.bd696210.js";import{r as $,c as V,ep as K,al as Q,i as h,w as W}from"./jwt-decode.esm.ab3ee903.js";import"./contracts.generated.b49a7a21.js";import{A as v}from"./record.f2db2562.js";import"./linters.c00cae33.js";import{u as X}from"./polling.00f7dc0f.js";(function(){try{var i=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},t=new Error().stack;t&&(i._sentryDebugIds=i._sentryDebugIds||{},i._sentryDebugIds[t]="a57ce3d2-37fd-479d-a850-fa34cb47a307",i._sentryDebugIdIdentifier="sentry-dbid-a57ce3d2-37fd-479d-a850-fa34cb47a307")}catch{}})();class Y{async list(){return await(await fetch("/_editor/api/forms")).json()}async create(t,e,a,n){return await(await fetch("/_editor/api/forms",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:t,file:e,position:a,id:n})})).json()}async get(t){try{return await(await fetch(`/_editor/api/forms/${t}`)).json()}catch{return null}}async update(t,e){return await(await fetch(`/_editor/api/forms/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).json()}async delete(t,e){const a=e?"?remove_file=true":"",n=`/_editor/api/forms/${t}`+a;await fetch(n,{method:"DELETE",headers:{"Content-Type":"application/json"}})}async duplicate(t){return await(await fetch(`/_editor/api/forms/${t}/duplicate`,{method:"POST"})).json()}}const m=new Y;class w{constructor(t){f(this,"record");this.record=v.create(m,t)}static async list(){return(await m.list()).map(e=>new w(e))}static async create(t,e,a,n){const r=await m.create(t,e,a,n);return new w(r)}static async get(t){const e=await m.get(t);return e?new w(e):null}get id(){return this.record.get("id")}get type(){return"form"}get file(){return this.record.get("file")}set file(t){this.record.set("file",t)}get autoStart(){return this.record.get("auto_start")}set autoStart(t){this.record.set("auto_start",t)}get endMessage(){return this.record.get("end_message")}set endMessage(t){this.record.set("end_message",t)}get errorMessage(){return this.record.get("error_message")}set errorMessage(t){this.record.set("error_message",t)}get path(){return this.record.get("path")}set path(t){this.record.set("path",t)}get startButtonText(){return this.record.get("start_button_text")}set startButtonText(t){this.record.set("start_button_text",t)}get startMessage(){return this.record.get("start_message")}set startMessage(t){this.record.set("start_message",t)}get timeoutMessage(){return this.record.get("timeout_message")}set timeoutMessage(t){this.record.set("timeout_message",t)}get notificationTrigger(){return new Proxy(this.record.get("notification_trigger"),{set:(t,e,a)=>(this.record.set("notification_trigger",{...t,[e]:a}),!0)})}set notificationTrigger(t){this.record.set("notification_trigger",t)}get(t){return this.record.get(t)}set(t,e){this.record.set(t,e)}get title(){return this.record.get("title")}set title(t){this.record.set("title",t)}get codeContent(){return this.record.get("code_content")}set codeContent(t){this.record.set("code_content",t)}async save(t){const e=this.codeContent;await this.record.save(t),this.record.updateInitialState("code_content",e)}onUpdate(t){this.record.pubsub.subscribe("update",t)}hasChanges(t){return this.record.hasChanges(t)}hasChangesDeep(t){return this.record.hasChangesDeep(t)}getInitialState(t){return this.record.getInitialState(t)}updateInitialState(t,e){this.record.updateInitialState(t,e)}async delete(t){await m.delete(this.id,t)}async duplicate(){const t=await m.duplicate(this.id);return new w(t)}makeRunnerData(t){return{...t.makeRunnerData(),id:this.id,isLocal:!0,path:this.path,title:this.title,isInitial:this.isInitial,runtimeType:"form",autoStart:this.autoStart,endMessage:this.endMessage,errorMessage:this.errorMessage,startMessage:this.startMessage,timeoutMessage:this.timeoutMessage,startButtonText:this.startButtonText}}get position(){const[t,e]=this.record.get("workflow_position");return{x:t,y:e}}get isInitial(){return this.record.get("is_initial")}static from(t){return new w(t)}}class Z{async list(){return await(await fetch("/_editor/api/hooks")).json()}async create(t,e,a,n){return await(await fetch("/_editor/api/hooks",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:t,file:e,position:a,id:n})})).json()}async get(t){try{return await(await fetch(`/_editor/api/hooks/${t}`)).json()}catch{return null}}async update(t,e){return await(await fetch(`/_editor/api/hooks/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).json()}async delete(t,e){const a=e?"?remove_file=true":"",n=`/_editor/api/hooks/${t}`+a;await fetch(n,{method:"DELETE",headers:{"Content-Type":"application/json"}})}async run(t,e){const a=new URLSearchParams(e.query),n=await fetch(`/_editor/api/hooks/${t}/run?${a.toString()}`,{method:e.method,headers:{"Content-Type":"application/json",...e.headers},body:e.method==="GET"?void 0:e.body}),{status:r,headers:l,body:p}=await n.json();return{status:r,headers:l,body:p}}}const S=new Z;class b{constructor(t){f(this,"record");this.record=v.create(S,t)}static async list(){return(await S.list()).map(e=>new b(e))}static async create(t,e,a,n){const r=await S.create(t,e,a,n);return new b(r)}static async get(t){const e=await S.get(t);return e?new b(e):null}async delete(t){await S.delete(this.id,t)}async duplicate(){return this}async save(t){const e=this.codeContent;await this.record.save(t),this.record.updateInitialState("code_content",e)}onUpdate(t){this.record.pubsub.subscribe("update",t)}hasChanges(t){return this.record.hasChanges(t)}getInitialState(t){return this.record.getInitialState(t)}updateInitialState(t,e){this.record.updateInitialState(t,e)}get id(){return this.record.get("id")}get type(){return"hook"}get path(){return this.record.get("path")}set path(t){this.record.set("path",t)}get title(){return this.record.get("title")}set title(t){this.record.set("title",t)}get codeContent(){return this.record.get("code_content")}set codeContent(t){this.record.set("code_content",t)}get file(){return this.record.get("file")}set file(t){this.record.set("file",t)}async run(t){return S.run(this.id,t)}get position(){const[t,e]=this.record.get("workflow_position");return{x:t,y:e}}get isInitial(){return this.record.get("is_initial")}static from(t){return new b(t)}}class F{async list(){return await(await fetch("/_editor/api/jobs")).json()}async create(t,e,a,n){return await(await fetch("/_editor/api/jobs",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:t,file:e,position:a,id:n})})).json()}async get(t){try{return await(await fetch(`/_editor/api/jobs/${t}`)).json()}catch{return null}}async update(t,e){return await(await fetch(`/_editor/api/jobs/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).json()}async delete(t,e){const a=e?"?remove_file=true":"",n=`/_editor/api/jobs/${t}`+a;await fetch(n,{method:"DELETE",headers:{"Content-Type":"application/json"}})}async run(t){return(await fetch(`/_editor/api/jobs/${t}/run`,{method:"POST",headers:{"Content-Type":"application/json"}})).ok}}const T=new F;class k{constructor(t){f(this,"record");f(this,"isInitial",!0);this.record=v.create(T,t)}static async list(){return(await T.list()).map(e=>new k(e))}static async create(t,e,a,n){const r=await T.create(t,e,a,n);return new k(r)}static async get(t){const e=await T.get(t);return e?new k(e):null}async delete(t){await T.delete(this.id,t)}async duplicate(){return this}async save(t){const e=this.codeContent;await this.record.save(t),this.record.updateInitialState("code_content",e)}onUpdate(t){this.record.pubsub.subscribe("update",t)}hasChanges(t){return this.record.hasChanges(t)}getInitialState(t){return this.record.getInitialState(t)}updateInitialState(t,e){this.record.updateInitialState(t,e)}get schedule(){return this.record.get("schedule")}set schedule(t){this.record.set("schedule",t)}get type(){return"job"}get title(){return this.record.get("title")}set title(t){this.record.set("title",t)}get codeContent(){return this.record.get("code_content")}set codeContent(t){this.record.set("code_content",t)}get file(){return this.record.get("file")}set file(t){this.record.set("file",t)}get id(){return this.record.get("id")}async run(){return T.run(this.id)}get position(){const[t,e]=this.record.get("workflow_position");return{x:t,y:e}}static from(t){return new k(t)}hasChangesDeep(t){return this.record.hasChangesDeep(t)}}class H{async list(){return await(await fetch("/_editor/api/scripts")).json()}async create(t,e,a,n){return await(await fetch("/_editor/api/scripts",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:t,file:e,position:a,id:n})})).json()}async get(t){try{return await(await fetch(`/_editor/api/scripts/${t}`)).json()}catch{return null}}async update(t,e){return await(await fetch(`/_editor/api/scripts/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).json()}async delete(t,e){const a=e?"?remove_file=true":"",n=`/_editor/api/scripts/${t}`+a;await fetch(n,{method:"DELETE",headers:{"Content-Type":"application/json"}})}async run(t,e){return(await fetch(`/_editor/api/scripts/${t}/run`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({task_id:e})})).ok}}const _=new H;class I{constructor(t){f(this,"record");this.record=v.create(_,t)}static async list(){return(await _.list()).map(e=>new I(e))}static async create(t,e,a,n){const r=await _.create(t,e,a,n);return new I(r)}static async get(t){const e=await _.get(t);return e?new I(e):null}async delete(t){await _.delete(this.id,t)}async duplicate(){return this}async save(t){const e=this.codeContent;await this.record.save(t),this.record.updateInitialState("code_content",e)}onUpdate(t){this.record.pubsub.subscribe("update",t)}hasChanges(t){return this.record.hasChanges(t)}getInitialState(t){return this.record.getInitialState(t)}updateInitialState(t,e){this.record.updateInitialState(t,e)}get id(){return this.record.get("id")}get codeContent(){return this.record.get("code_content")}set codeContent(t){this.record.set("code_content",t)}get title(){return this.record.get("title")}set title(t){this.record.set("title",t)}get type(){return"tasklet"}get file(){return this.record.get("file")}set file(t){this.record.set("file",t)}get path(){return this.record.get("path")}set path(t){this.record.set("path",t)}async run(t){return _.run(this.id,t)}get position(){const[t,e]=this.record.get("workflow_position");return{x:t,y:e}}get isInitial(){return!1}static from(t){return new I(t)}}class lt{async createTask(t,e,a){return fetch("/_editor/api/tasks",{method:"POST",body:JSON.stringify({name:t,payload:a,stage_id:e}),headers:{"Content-Type":"application/json"}}).then(n=>n.json())}async getAllTasks(t,e){const a={offset:t.currentIndex*t.pageSize,limit:t.pageSize,filter:{stage:e.stage,status:e.status,startDate:e.dateRange?e.dateRange[0]:void 0,endDate:e.dateRange?e.dateRange[1]:void 0}};return fetch("/_editor/api/tasks/list",{method:"POST",body:JSON.stringify(a),headers:{"Content-Type":"application/json"}}).then(n=>n.json())}async getStageTasks(t){return fetch(`/_editor/api/tasks/${t}`).then(e=>e.json())}async getSentStageTasks(t){return fetch(`/_editor/api/tasks/${t}/sent`).then(e=>e.json())}async updateTaskStatus(t,e){return fetch(`/_editor/api/tasks/${t}/status`,{method:"PUT",body:JSON.stringify({status:e}),headers:{"Content-Type":"application/json"}}).then(a=>a.json())}async clearAllTasks(){return fetch("/_editor/api/tasks/clear",{method:"DELETE"}).then(t=>t.json())}}class ut{constructor(t){f(this,"projectId");this.projectId=t}async createTask(t,e,a){return await j.post(`projects/${this.projectId}/tasks`,{name:t,stageId:e,payload:a})}async getAllTasks(t,e){const a={offset:(t.currentIndex*t.pageSize).toString(),limit:t.pageSize.toString(),stageId:e.stage,status:e.status,startDate:e.dateRange?e.dateRange[0]:void 0,endDate:e.dateRange?e.dateRange[1]:void 0};return Object.keys(a).forEach(r=>a[r]===void 0&&delete a[r]),await j.get(`projects/${this.projectId}/tasks`,a)}async getStageTasks(t){const e={stageId:t,offset:"0",limit:"1000"};return await j.get(`projects/${this.projectId}/tasks`,e)}async getSentStageTasks(t){const e={sourceStageId:t,offset:"0",limit:"1000"};return await j.get(`projects/${this.projectId}/tasks`,e)}async updateTaskStatus(t,e){await j.patch(`projects/${this.projectId}/tasks/${t}`,{status:e})}async fetchStages(){throw new Error("Method not implemented.")}async fetchStatuses(){throw new Error("Method not implemented.")}async clearAllTasks(){throw new Error("Method not implemented.")}}function tt({api:i,fetchTasks:t}){const e=$({state:"idle"}),a=()=>{e.value={state:"idle"}},n=()=>{e.value={state:"creating",name:"My task",payloadCode:`{
    "key": "value"
  }`}},r=async p=>{const g=e.value;if(g.state!=="creating")throw new Error("Payload is required to create a task");if(!l.value)return;const c=JSON.parse(g.payloadCode),y=await i.createTask(g.name,p,c);return await t(),a(),y},l=V(()=>{const p=e.value;if(p.state!=="creating")return!1;try{const g=JSON.parse(p.payloadCode);return K.exports.isObject(g)}catch{return!1}});return{createTask:r,creatingTaskState:e,cancelCreatingTask:a,startCreatingTask:n,isPayloadValid:l}}const O=["pink","orange","green","blue","purple","red","cyan","magenta","volcano","gold"],ht=({api:i,poll:t,stageId:e,status:a,stages:n})=>{const r=Q({tasks:[],sentTasks:[],colorMap:new Map,pagination:{currentIndex:0,pageSize:10,totalCount:0},filters:{stage:e,status:a,dateRange:void 0},filterOptions:{stages:[],statuses:[{label:h.translate("i18n_tasksview_status_pending"),value:"pending"},{label:h.translate("i18n_tasksview_status_running"),value:"started"},{label:h.translate("i18n_tasksview_status_completed"),value:"completed"}]}}),l=[{name:"setToPending",label:h.translate("i18n_tasksview_action_set_to_pending"),handler:()=>{r.tasks.filter(s=>s.checked).map(s=>s.id).forEach(s=>P(s))}},{name:"setToCompleted",label:h.translate("i18n_tasksview_action_set_to_completed"),handler:()=>{r.tasks.filter(s=>s.checked).map(s=>s.id).forEach(s=>x(s))}},{name:"duplicate",label:h.translate("i18n_tasksview_action_duplicate"),handler:()=>{r.tasks.filter(s=>s.checked).forEach(async s=>{await i.createTask(s.type,s.targetStageId,s.payload),c()})}}],p=$(["pending"]),g=o=>{const s=r.tasks.findIndex(d=>d.id===o.id);s!==-1?r.tasks[s]=o:r.tasks.unshift(o)},c=async()=>{const o=e?await i.getStageTasks(e):await i.getAllTasks(r.pagination,r.filters);r.tasks=o.tasks.map(s=>({key:s.id,id:s.id,type:s.type,status:s.status,targetStageId:s.targetStageId,targetStageTitle:s.targetStageTitle,targetStageType:s.targetStageType,sourceStageTitle:s.sourceStageTitle,sourceStageType:s.sourceStageType,created:{at:new Date(s.created.at).toString(),byExecutionId:s.created.byExecutionId,byStageId:s.created.byStageId},locked:s.locked?{at:new Date(s.locked.at).toString(),byExecutionId:s.locked.byExecutionId,byStageId:s.locked.byStageId}:null,completed:s.completed?{at:new Date(s.completed.at).toString(),byExecutionId:s.completed.byExecutionId,byStageId:s.completed.byStageId}:null,payload:s.payload,checked:!1})),r.pagination.totalCount=o.totalCount},y=async()=>{if(!e)return[];const o=await i.getSentStageTasks(e);r.sentTasks=o.tasks.map(s=>({key:s.id,id:s.id,type:s.type,status:s.status,targetStageId:s.targetStageId,targetStageTitle:s.targetStageTitle,targetStageType:s.targetStageType,sourceStageTitle:s.sourceStageTitle,sourceStageType:s.sourceStageType,created:{at:new Date(s.created.at).toString(),byExecutionId:s.created.byExecutionId,byStageId:s.created.byStageId},locked:s.locked?{at:new Date(s.locked.at).toString(),byExecutionId:s.locked.byExecutionId,byStageId:s.locked.byStageId}:null,completed:s.completed?{at:new Date(s.completed.at).toString(),byExecutionId:s.completed.byExecutionId,byStageId:s.completed.byStageId}:null,payload:s.payload}))},E=()=>{var d;let o=0;r.tasks.concat((d=r.sentTasks)!=null?d:[]).forEach(C=>{r.colorMap.has(C.type)||(r.colorMap.set(C.type,O[o]),o=(o+1)%O.length)})};W(r.filters,async()=>{await Promise.all([c(),y()]),E()});const D=async()=>{await Promise.all([c(),y()]),E()},{startPolling:A,endPolling:R}=X({task:D,interval:15e3}),N=async()=>{if(await Promise.all([c(),y()]),E(),n===null){const o=Promise.all([w.list(),b.list(),k.list(),I.list()]).then(([s,d,C,u])=>[...s,...d,...C,...u]);r.filterOptions.stages=(await o).map(s=>({label:s.title,value:s.id}))}else r.filterOptions.stages=n.map(o=>({label:o.stageTitle,value:o.id}));t&&A()},J=()=>{t&&R()},P=async o=>{await i.updateTaskStatus(o,"pending"),c()},x=async o=>{await i.updateTaskStatus(o,"completed"),c()},M=o=>{r.tasks=r.tasks.map(s=>(s.id===o&&(s.checked=!s.checked),s))},U=()=>{const o=[],s=r.tasks.filter(u=>u.checked);return s.length===0?[]:(o.push("duplicate"),s.every(u=>u.status==="pending")&&o.push("setToCompleted"),s.every(u=>u.status==="completed")&&o.push("setToPending"),l.filter(u=>o.includes(u.name)))},L=async()=>{await i.clearAllTasks(),c(),y()},z=()=>[{title:h.translate("i18n_tasksview_column_date"),key:"timeInfo",align:"left",width:"25%"},{title:h.translate("i18n_tasksview_column_task"),key:"stageInfo",align:"left",width:"30%"},{title:h.translate("i18n_tasksview_column_payload"),key:"payloadInfo",align:"left",width:"45%"}],B=tt({api:i,fetchTasks:c});return{setup:N,tearDown:J,state:r,getColumns:z,collapseValue:p,setToPending:P,setToCompleted:x,fetchTasks:c,updateStatus:async(o,s)=>{r.tasks=r.tasks.map(d=>(d.id===o.id&&(d.status=s),d)),await i.updateTaskStatus(o.id,s),c()},fetchSentTasks:y,checkTask:M,getPossibleActions:U,clearAllTasks:L,insertOrUpdate:g,...B}};export{w as F,b as H,k as J,lt as L,ut as R,I as S,ht as T};
//# sourceMappingURL=tasksController.c7290907.js.map
