import{d as l,eO as f,K as b,o as _,O as h,dl as p,f as g,x as m}from"./outputWidgets.0143183d.js";import{E as v}from"./ExclamationCircleOutlined.c9c95f4b.js";import{M as y}from"./Modal.5ccb2e2d.js";(function(){try{var n=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},a=new Error().stack;a&&(n._sentryDebugIds=n._sentryDebugIds||{},n._sentryDebugIds[a]="01a5f00b-5649-42a8-ae4b-5bfbd5787bc8",n._sentryDebugIdIdentifier="sentry-dbid-01a5f00b-5649-42a8-ae4b-5bfbd5787bc8")}catch{}})();const c="You have unsaved changes. Are you sure you want to leave?",w=l({__name:"UnsavedChangesHandler",props:{hasChanges:{type:Boolean}},setup(n){const a=n,o=e=>(e=e||window.event,e&&(e.returnValue=c),c),i=()=>{window.addEventListener("beforeunload",o)};f(async(e,u,s)=>{if(!a.hasChanges)return s();await new Promise(r=>{y.confirm({title:"You have unsaved changes.",icon:g(v),content:"Are you sure you want to discard them?",okText:"Discard Changes",okType:"danger",cancelText:"Cancel",onOk(){r(!0)},onCancel(){r(!1)}})})?s():s(!1)});const t=()=>window.removeEventListener("beforeunload",o),d=e=>e?i():t();return b(()=>a.hasChanges,d),_(()=>d(a.hasChanges)),h(t),(e,u)=>p(e.$slots,"default",{},void 0,!0)}});const x=m(w,[["__scopeId","data-v-79207dcb"]]);export{x as U};
//# sourceMappingURL=UnsavedChangesHandler.31e4b0ba.js.map
