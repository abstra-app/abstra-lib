var u=Object.defineProperty;var y=(r,e,t)=>e in r?u(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var n=(r,e,t)=>(y(r,typeof e!="symbol"?e+"":e,t),t);import{d as f,eA as g,J as w,b as _,c as b,u as h}from"./outputWidgets.a63119cc.js";import"./console.c1ed6123.js";import"./index.65f9ad7e.js";import{C as k}from"./gateway.4411f3e1.js";import{A as v}from"./activeRecord.799e4af2.js";import{a as I}from"./asyncComputed.0765bec9.js";import{_ as D}from"./CrudView.vue_vue_type_script_setup_true_lang.239784ed.js";import"./index.51e8d1a3.js";import"./Form.fd17293d.js";import"./Title.96f1946a.js";import"./CollapsePanel.99fd393e.js";import"./index.9d4533ab.js";import"./index.575c8c16.js";import"./index.ac63db11.js";import"./dayjs.27fd9ade.js";import"./index.14800d12.js";import"./index.2f460fa3.js";import"./TabPane.38d3e574.js";import"./index.283a2e19.js";import"./index.f89d9d9e.js";import"./index.80cbdddc.js";import"./index.b37c749a.js";import"./index.8db1387d.js";import"./index.1eead774.js";import"./index.3c325bb8.js";import"./index.71778fd1.js";import"./index.cd450d2a.js";import"./pubsub.229f97b0.js";import"./icons.1038fc63.js";(function(){try{var r=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},e=new Error().stack;e&&(r._sentryDebugIds=r._sentryDebugIds||{},r._sentryDebugIds[e]="8ff74df4-ccce-4780-a721-f415a44d0e2c",r._sentryDebugIdIdentifier="sentry-dbid-8ff74df4-ccce-4780-a721-f415a44d0e2c")}catch{}})();class N{constructor(){n(this,"urlPath","files")}async create(e){throw new Error("Not implemented")}async delete(e,t){throw new Error("Not implemented")}async get(e){throw new Error("Not implemented")}async update(e,t){throw new Error("Not implemented")}async list(e){return k.get(`projects/${e}/${this.urlPath}`)}}const c=new N;class m{constructor(e,t){n(this,"record");this.projectId=e,this.record=v.create(c,t,"id")}static async list(e){return(await c.list(e)).map(a=>new m(e,a))}get key(){return this.record.get("name")}get name(){return this.record.get("name")}get size(){return this.record.get("size")}get date(){return new Date(this.record.get("date"))}}const re=f({__name:"Files",setup(r){const t=g().params.projectId,{loading:a,result:p}=I(()=>m.list(t)),l=[{label:"Variable name",key:"key"},{label:"Variable value",key:"value",type:"password"}],d=w(()=>{var i,s;return{columns:[{name:"Name"},{name:"Size"},{name:"Date"}],rows:(s=(i=p.value)==null?void 0:i.map(o=>({key:o.key,cells:[{text:o.key},{text:o.size.toString()},{text:o.date.toDateString()}]})))!=null?s:[]}});return(i,s)=>(_(),b(D,{"entity-name":"File",loading:h(a),title:"Files",description:"Persist files on your projects.","empty-title":"No environment variables set",table:d.value,fields:l},null,8,["loading","table"]))}});export{re as default};
//# sourceMappingURL=Files.0d44fa69.js.map
