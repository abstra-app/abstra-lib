var L=Object.defineProperty;var O=(i,e,t)=>e in i?L(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var o=(i,e,t)=>(O(i,typeof e!="symbol"?e+"":e,t),t);import{h as b}from"./router.c145c879.js";import{d as M,am as C,c as w,o as y,a5 as _,a7 as B,h as P,e6 as Z,e as v,r as d,a as I,b as x,g as N,ec as D,u as A,aV as U,_ as R,f as j,eG as q,i as J,ae as V,q as z,N as E}from"./jwt-decode.esm.d9ea36e7.js";import{P as G}from"./record.1ddc779b.js";import{u as m}from"./uuid.d4ed22e0.js";import{I as Q}from"./PhCopySimple.vue.f9c17d21.js";(function(){try{var i=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},e=new Error().stack;e&&(i._sentryDebugIds=i._sentryDebugIds||{},i._sentryDebugIds[e]="f20406e4-722d-4961-a99b-e633a9bb8d0e",i._sentryDebugIdIdentifier="sentry-dbid-f20406e4-722d-4961-a99b-e633a9bb8d0e")}catch{}})();const W=["width","height","fill","transform"],X={key:0},K=v("path",{d:"M176.49,95.51a12,12,0,0,1,0,17l-56,56a12,12,0,0,1-17,0l-24-24a12,12,0,1,1,17-17L112,143l47.51-47.52A12,12,0,0,1,176.49,95.51ZM236,128A108,108,0,1,1,128,20,108.12,108.12,0,0,1,236,128Zm-24,0a84,84,0,1,0-84,84A84.09,84.09,0,0,0,212,128Z"},null,-1),Y=[K],ee={key:1},te=v("path",{d:"M224,128a96,96,0,1,1-96-96A96,96,0,0,1,224,128Z",opacity:"0.2"},null,-1),se=v("path",{d:"M173.66,98.34a8,8,0,0,1,0,11.32l-56,56a8,8,0,0,1-11.32,0l-24-24a8,8,0,0,1,11.32-11.32L112,148.69l50.34-50.35A8,8,0,0,1,173.66,98.34ZM232,128A104,104,0,1,1,128,24,104.11,104.11,0,0,1,232,128Zm-16,0a88,88,0,1,0-88,88A88.1,88.1,0,0,0,216,128Z"},null,-1),oe=[te,se],re={key:2},ie=v("path",{d:"M128,24A104,104,0,1,0,232,128,104.11,104.11,0,0,0,128,24Zm45.66,85.66-56,56a8,8,0,0,1-11.32,0l-24-24a8,8,0,0,1,11.32-11.32L112,148.69l50.34-50.35a8,8,0,0,1,11.32,11.32Z"},null,-1),ae=[ie],ne={key:3},le=v("path",{d:"M172.24,99.76a6,6,0,0,1,0,8.48l-56,56a6,6,0,0,1-8.48,0l-24-24a6,6,0,0,1,8.48-8.48L112,151.51l51.76-51.75A6,6,0,0,1,172.24,99.76ZM230,128A102,102,0,1,1,128,26,102.12,102.12,0,0,1,230,128Zm-12,0a90,90,0,1,0-90,90A90.1,90.1,0,0,0,218,128Z"},null,-1),ce=[le],he={key:4},de=v("path",{d:"M173.66,98.34a8,8,0,0,1,0,11.32l-56,56a8,8,0,0,1-11.32,0l-24-24a8,8,0,0,1,11.32-11.32L112,148.69l50.34-50.35A8,8,0,0,1,173.66,98.34ZM232,128A104,104,0,1,1,128,24,104.11,104.11,0,0,1,232,128Zm-16,0a88,88,0,1,0-88,88A88.1,88.1,0,0,0,216,128Z"},null,-1),ue=[de],ge={key:5},fe=v("path",{d:"M170.83,101.17a4,4,0,0,1,0,5.66l-56,56a4,4,0,0,1-5.66,0l-24-24a4,4,0,0,1,5.66-5.66L112,154.34l53.17-53.17A4,4,0,0,1,170.83,101.17ZM228,128A100,100,0,1,1,128,28,100.11,100.11,0,0,1,228,128Zm-8,0a92,92,0,1,0-92,92A92.1,92.1,0,0,0,220,128Z"},null,-1),pe=[fe],ye={name:"PhCheckCircle"},ve=M({...ye,props:{weight:{type:String},size:{type:[String,Number]},color:{type:String},mirrored:{type:Boolean}},setup(i){const e=i,t=C("weight","regular"),s=C("size","1em"),r=C("color","currentColor"),l=C("mirrored",!1),c=w(()=>{var a;return(a=e.weight)!=null?a:t}),f=w(()=>{var a;return(a=e.size)!=null?a:s}),u=w(()=>{var a;return(a=e.color)!=null?a:r}),p=w(()=>e.mirrored!==void 0?e.mirrored?"scale(-1, 1)":void 0:l?"scale(-1, 1)":void 0);return(a,h)=>(y(),_("svg",Z({xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 256 256",width:f.value,height:f.value,fill:u.value,transform:p.value},a.$attrs),[B(a.$slots,"default"),c.value==="bold"?(y(),_("g",X,Y)):c.value==="duotone"?(y(),_("g",ee,oe)):c.value==="fill"?(y(),_("g",re,ae)):c.value==="light"?(y(),_("g",ne,ce)):c.value==="regular"?(y(),_("g",he,ue)):c.value==="thin"?(y(),_("g",ge,pe)):P("",!0)],16,W))}});class H{constructor(e,t){o(this,"staging");this.flag=e,this.acc=t,this.staging=""}}class _e extends H{constructor(){super("___JSON_MODE___",[])}reduceChar(e){try{this.staging+=e;const t=JSON.parse(this.staging);return this.acc.push(t),this.staging="",t}catch{return}}reduce(e){const t=[];for(const s of e){const r=this.reduceChar(s);r!==void 0&&t.push(r)}return t}}class we extends H{constructor(){super("___TEXT_MODE___","")}reduce(e){return this.staging+=e,this.acc=this.staging,e}}class ${constructor(){o(this,"mode");o(this,"modes",[new we,new _e]);o(this,"staging","");o(this,"chunkOnBuffer","");o(this,"flagMap");o(this,"flagPrefixes");this.mode=this.modes[0],this.flagMap=new Map,this.flagPrefixes=new Set;for(const e of this.modes){this.flagMap.set(e.flag,e);for(let t=1;t<e.flag.length;t++)this.flagPrefixes.add(e.flag.slice(0,t))}}*reduce(e){for(const t of e){if(this.staging+=t,this.flagMap.has(this.staging)){this.mode=this.flagMap.get(this.staging),this.staging="";continue}if(!this.flagPrefixes.has(this.staging))for(;this.staging.length>0;){const s=this.staging[0];this.staging=this.staging.slice(1);const r=this.mode.reduce(s);if(r!==void 0&&(Array.isArray(r)?yield*r:yield r),this.flagPrefixes.has(this.staging))break}}}*reduceInChunks(e,t){let s="";for(const r of this.reduce(t))if(typeof r=="string")for(s+=r;s.length>=e;)yield s.slice(0,e),s=s.slice(e);else s.length>0&&(yield s,s=""),yield r;s.length>0&&(yield s)}}const F=300;class me{constructor(){o(this,"_baseUrl","/_editor/api/ai");o(this,"_headers",{"Content-Type":"application/json"})}async*sendMessage(e,t,s,r,l){var a;const c={conversationId:e,content:t,context:s,humanApproval:l},f=await fetch(`${this._baseUrl}/stream`,{method:"POST",headers:this._headers,body:JSON.stringify(c)});if(!f.ok)throw new Error("Failed to send message");const u=(a=f.body)==null?void 0:a.getReader();if(!u)throw new Error("No response body");const p=new $;for(;!r();){const h=await u.read();if(h.done)break;for(const g of p.reduceInChunks(F,new TextDecoder().decode(h.value)))yield g}}async deleteThread(e){if(!(await fetch(`${this._baseUrl}/thread/${e}`,{method:"DELETE",headers:this._headers})).ok)throw new Error("Failed to delete thread")}async abortStreaming(e){if(!(await fetch(`${this._baseUrl}/abort`,{method:"POST",headers:this._headers,body:JSON.stringify({langGraphThreadId:e})})).ok)throw new Error("Failed to abort streaming")}async getHistory(e,t){const s=await fetch(`${this._baseUrl}/history?limit=${e}&offset=${t}`,{method:"GET"});if(!s.ok)throw new Error("Failed to fetch history");return await s.json()}async vote(e,t,s,r){const l={vote:e,question:t,answer:s,context:r};await fetch(`${this._baseUrl}/vote`,{method:"POST",headers:this._headers,body:JSON.stringify(l)})}startConversation(){return new Promise((e,t)=>{fetch(`${this._baseUrl}/start-conversation`,{method:"POST",headers:this._headers}).then(s=>{if(!s.ok)throw new Error("Failed to start conversation");return s.json()}).then(s=>e(s)).catch(s=>t(s))})}}class Se{constructor(e){o(this,"projectId");o(this,"baseUrl");this.projectId=e,this.baseUrl=`projects/${e}`}startConversation(){throw new Error("Method not implemented.")}async*sendMessage(e,t,s,r,l){var a;const c={conversationId:e,content:t,context:s,humanApproval:l},u=(a=(await b.postRaw(`${this.baseUrl}/messages`,c)).body)==null?void 0:a.getReader();if(!u)throw new Error("No response body");const p=new $;for(;!r();){const h=await u.read();if(h.done)break;for(const g of p.reduceInChunks(F,new TextDecoder().decode(h.value)))yield g}}async abortStreaming(e){await b.post(`${this.baseUrl}/abort`,{langGraphThreadId:e})}async getHistory(e,t){const s={limit:`${e}`,offset:`${t}`};return await b.get(`${this.baseUrl}/history`,s)}async deleteThread(e){await b.delete(`${this.baseUrl}/threads/${e}`)}async vote(e,t,s,r){throw new Error("Method not implemented.")}}const be=M({__name:"CopyButton",props:{textToCopy:{}},setup(i){const e=i,t=d(!1),s=()=>{navigator.clipboard.writeText(e.textToCopy),t.value=!0,setTimeout(()=>t.value=!1,2e3)},r=w(()=>t.value?"Copied!":"Copy to clipboard");return(l,c)=>(y(),I(A(U),null,{title:x(()=>[N(D(r.value),1)]),default:x(()=>[v("div",{class:"copy-button",onClick:s},[t.value?(y(),I(A(ve),{key:1,color:"#fff",size:"22"})):(y(),I(A(Q),{key:0,color:"#fff",size:"22"}))])]),_:1}))}});const Ce=R(be,[["__scopeId","data-v-9f87bac2"]]);class k{constructor(e,t,s){o(this,"_repository");o(this,"conversationId");o(this,"_input");o(this,"_badgeState");o(this,"_smartChatState");o(this,"_logService");o(this,"_stageId",null);o(this,"_hasError",d(null));o(this,"_isLoadingHistory",d(!1));o(this,"_history",d([]));o(this,"_threadHistoryFetchInfo",d({limit:10,offset:0,done:!1}));o(this,"_recentlyAccessedThreads",d([]));o(this,"_environment");o(this,"codeForApproval",d(null));o(this,"setupThread",async()=>{this.conversationId.value=`abstra-assistant-thread-${m()}`,this._recentlyAccessedThreads.value.unshift({id:this.conversationId.value,messages:[],createdAt:new Date().toISOString()})});o(this,"fetchHistory",async()=>{this._isLoadingHistory.value=!0;const e=await this._repository.getHistory(this._threadHistoryFetchInfo.value.limit,this._threadHistoryFetchInfo.value.offset);this._history.value=e,this._isLoadingHistory.value=!1});o(this,"loadMoreHistory",async()=>{this._isLoadingHistory.value=!0,this._threadHistoryFetchInfo.value.offset+=this._threadHistoryFetchInfo.value.limit;const e=await this._repository.getHistory(this._threadHistoryFetchInfo.value.limit,this._threadHistoryFetchInfo.value.offset);e.length<this._threadHistoryFetchInfo.value.limit&&(this._threadHistoryFetchInfo.value.done=!0);const t=[...this._history.value,...e];this._history.value=t,this._isLoadingHistory.value=!1});o(this,"setStageId",e=>{this._stageId=e});o(this,"setError",e=>{this._hasError.value=e});o(this,"_fillChat",e=>{this._logService.clear();for(const t of e)t.toolTitle?(this._logService.log({type:"ai-tool-approval",toolCallId:t.toolCallId,description:t.toolTitle,args:{},disabled:!1,needsApproval:!1,loading:!1}),this._logService.log({type:"ai-tool-call-response",toolCallId:t.toolCallId,response:t.content})):this._logService.log({type:t.role==="user"?"ai-input":"ai-output",log:t.content});this.renderCopyButtons()});o(this,"moveThreadFromHistoryToRecents",e=>{this.conversationId.value=e;const t=this._history.value.find(r=>r.id===e);if(!t)throw new Error(`Thread ${e} not found`);const s=this._recentlyAccessedThreads.value.findIndex(r=>r.id===e);s!==-1&&this._recentlyAccessedThreads.value.splice(s,1),this._recentlyAccessedThreads.value.unshift(t),this._fillChat(t.messages)});o(this,"deleteThread",e=>{this._repository.deleteThread(e),this.removeFromRecentlyAccessedThreads(e);const t=this._history.value.findIndex(s=>s.id===e);t!==-1&&this._history.value.splice(t,1)});o(this,"setCurrentThreadFromRecents",e=>{this.conversationId.value=e;const t=this._recentlyAccessedThreads.value.findIndex(r=>r.id===e);if(t===-1)throw new Error(`Thread ${e} not found`);const[s]=this._recentlyAccessedThreads.value.splice(t,1);this._recentlyAccessedThreads.value.unshift(s),this._fillChat(s.messages)});o(this,"removeFromRecentlyAccessedThreads",e=>{const t=this._recentlyAccessedThreads.value.findIndex(s=>s.id===e);if(t===-1)throw new Error(`Thread ${e} not found`);if(this._recentlyAccessedThreads.value.splice(t,1),this._logService.clear(),this._recentlyAccessedThreads.value.length===0)this.conversationId.value=null;else{const s=this._recentlyAccessedThreads.value[0];this.conversationId.value=s.id,this._fillChat(s.messages)}});o(this,"renderCopyButtons",()=>{document.querySelectorAll("pre").forEach(t=>{t.style.position="relative";const s=j(Ce,{textToCopy:t.textContent});q(s,t)})});o(this,"clearLogService",()=>{this._logService.clear()});o(this,"send",async(e,t)=>{var s,r;this.conversationId.value||await this.setupThread(),this._logService.log({type:"ai-input",log:this._input.value}),this._smartChatState.value="processing";try{const l=m(),c=this.conversationId.value;if(!c)throw new Error("Conversation ID is not set");const f=[{type:"text",text:this._input.value}],u={currentEditorUrl:window.location.href,panesInfo:e||{}},p=this._repository.sendMessage(c,f,u,this.isIdle.bind(this),t);let a="",h=l,g="";for await(const S of p){if(this.isIdle())break;this._smartChatState.value==="processing"&&(this._smartChatState.value="answering");const n=S;typeof n=="string"?(a+=n,g+=n,this._logService.log({type:"ai-output",log:g},h)):n instanceof Object&&(n.type==="ai-tool-approval"?(this._logService.log({type:"ai-tool-approval",toolCallId:n.toolCallId,description:n.title,args:n.args,disabled:!1,needsApproval:!0,loading:!1}),(r=(s=n.args)==null?void 0:s.changes)!=null&&r.code_content&&(this.codeForApproval.value={stageId:n.args.id,code:n.args.changes.code_content}),h=m(),g=""):n.type==="ai-tool-call"?(this._logService.log({type:"ai-tool-approval",toolCallId:n.toolCallId,description:n.title,args:n.args,disabled:!1,needsApproval:!1,loading:!1}),h=m(),g=""):n.type==="ai-tool-call-response"&&this._logService.log({type:"ai-tool-call-response",toolCallId:n.toolCallId,response:n.response}))}this._recentlyAccessedThreads.value=this._recentlyAccessedThreads.value.map(S=>(S.id===this.conversationId.value&&S.messages.unshift({role:"assistant",content:a,createdAt:new Date().toISOString()}),S)),this._input.value=""}catch(l){this._logService.log({type:"ai-output",log:"Sorry, there was an issue processing your request. Please try again later."}),console.error(l),J(l)}finally{this._smartChatState.value="idle",this.renderCopyButtons()}});o(this,"abort",()=>{if(!this.conversationId.value)throw new Error("Conversation ID is not set");this._repository.abortStreaming(this.conversationId.value),this._smartChatState.value="idle"});o(this,"isLoadingHistory",()=>this._isLoadingHistory.value);o(this,"isProcessing",()=>this._smartChatState.value==="processing");o(this,"isAnswering",()=>this._smartChatState.value==="answering");o(this,"isIdle",()=>this._smartChatState.value==="idle");o(this,"setSeen",()=>{this._badgeState.value={type:"seen"}});o(this,"setUnseen",e=>{this._badgeState.value={type:"unseen",count:this._badgeState.value.type==="unseen"?this._badgeState.value.count+1:1,severity:e.type==="stderr"?"error":"info"}});o(this,"setInput",e=>{e=e==null?void 0:e.trimEnd(),this._input.value=e||""});o(this,"regenerateLast",async()=>{for(let e=this._logService.logs.length-1;e>=0;e--){const t=this._logService.logs[e];if(t.type==="ai-input"){this.setInput(t.log);break}}await this.send()});o(this,"fixJson",async(e,t)=>{this._logService.clear(),this._logService.log({type:"ai-input",log:`here is my json code:
      ${e}
      And I got this error:`}),this._logService.log({type:"stderr",log:t}),this.setSeen(),this.setInput("Can you fix this JSON?"),await this.send()});o(this,"askAboutError",async(e,t)=>{this._logService.clear(),this.setInput(`I have this error in my code:
      ${e.entries.map(s=>s.payload.text).join("")}

      Can you help me understand what went wrong?
      My current code is: ${t||"No code provided"}`),await this.send()});o(this,"vote",async(e,t)=>{const s=this._logService.logs[e],r=this._logService.logs[e-1],l=this._logService.logs.slice(0,e-1);await this._repository.vote(t,r,s,l)});this._repository=e,this._logService=t,this.conversationId=d(null),this._input=d(""),this._badgeState=d({type:"seen"}),this._smartChatState=d("idle"),this._environment=s}init(){this.setupThread(),this.renderCopyButtons(),this.fetchHistory()}get hasError(){var e;return((e=this._hasError.value)==null?void 0:e.payload)||null}get logService(){return this._logService}shouldRenderLoadMoreHistory(){return!this._threadHistoryFetchInfo.value.done}get pastThreads(){return this._history.value.map(e=>e.messages.length===0?{threadId:e.id,title:"New thread"}:{threadId:e.id,title:e.messages[0].content.slice(0,20)+"..."})}get recentlyAccessedThreads(){return this._recentlyAccessedThreads.value.map(e=>({threadId:e.id,title:e.messages.length>0?e.messages[0].content.slice(0,20)+"...":"New thread"}))}get badgeState(){return this._badgeState.value}get input(){return this._input.value}}class T{constructor(){o(this,"logState",V({log:[]}));o(this,"_listeners",{});o(this,"getLastExecutionLogs",e=>{let t="";for(let s=this.logs.length-1;s>=0;s--){const r=this.logs[s];if(r.type!==e&&t.length>0)break;r.type===e&&(t=`${r.log}
${t}`)}return t})}static create(){return new T}get logs(){return this.logState.log}hasAiLogs(){return this.logs.some(e=>e.type==="ai-input"||e.type==="ai-output")}log(e,t){if(e.type!=="restart"&&e.type!=="ai-actions"&&e.type!=="ai-tool-approval"&&e.type!=="ai-tool-call-response"&&"log"in e&&e.log.trim()==="")return;const s=t?this.logs.find(r=>r.id===t):null;return s?(s.type==="stderr"&&e.type==="stderr"&&(e.log=s.log+`
`+e.log),Object.assign(s,e)):this.logs.push({...e,id:t||m()}),this.notifyListeners(e),t}clear(){this.logState.log=[]}listen(e){const t=m();return this._listeners[t]=e,t}unlisten(e){delete this._listeners[e]}notifyListeners(e){Object.values(this._listeners).forEach(t=>t(e))}}const Me=new G,He=z("omniChat",()=>{const i=d(!0),e=d(!1),t=T.create(),s=E(),r=E(),l=(h,g)=>{if(!r.value)if(h==="console"){if(!g)throw new Error("Project ID is required for console chat");s.value=new Se(g),r.value=new k(s.value,t,{origin:h,projectId:g})}else s.value=new me,r.value=new k(s.value,t,{origin:h})},c=()=>{e.value=!0},f=()=>{e.value=!1},u=()=>{i.value=!0,c()},p=()=>{i.value=!1,f()};return{isOpen:i,isInputFocused:e,focusInput:c,blurInput:f,open:u,close:p,toggle:()=>{i.value?p():u()},controller:w(()=>r.value),repository:s,init:l}});export{ve as H,me as L,k as S,T as a,Me as o,He as u};
//# sourceMappingURL=omniChatStore.7dcc3075.js.map
