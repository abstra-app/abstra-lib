var u=Object.defineProperty;var y=(r,e,t)=>e in r?u(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var n=(r,e,t)=>(y(r,typeof e!="symbol"?e+"":e,t),t);import{d as f,eA as g,J as w,b as _,c as b,u as h}from"./outputWidgets.0607c5f7.js";import"./console.b766339a.js";import"./index.cc469f4b.js";import{C as k}from"./gateway.bbc1481c.js";import{A as v}from"./activeRecord.9f5b552a.js";import{a as I}from"./asyncComputed.9d360b31.js";import{_ as D}from"./CrudView.vue_vue_type_script_setup_true_lang.e3828c2c.js";import"./index.dc02ac8b.js";import"./Form.7b93f433.js";import"./Title.64cf794c.js";import"./index.fb95c825.js";import"./index.13cc6d2b.js";import"./index.e55c1dca.js";import"./dayjs.a8dca6cb.js";import"./index.4d00468a.js";import"./index.7145dba7.js";import"./TabPane.deb05916.js";import"./index.972bd3b8.js";import"./CollapsePanel.3b334b57.js";import"./index.b75020f9.js";import"./index.eb505871.js";import"./index.1038647d.js";import"./index.ea23cb6e.js";import"./index.1bda0976.js";import"./index.8b435834.js";import"./index.fc1e2b4e.js";import"./index.60e069ab.js";import"./pubsub.c651758a.js";import"./icons.0a1291aa.js";(function(){try{var r=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},e=new Error().stack;e&&(r._sentryDebugIds=r._sentryDebugIds||{},r._sentryDebugIds[e]="de9d7069-2ea0-48ec-a5f3-47d5256ee216",r._sentryDebugIdIdentifier="sentry-dbid-de9d7069-2ea0-48ec-a5f3-47d5256ee216")}catch{}})();class N{constructor(){n(this,"urlPath","files")}async create(e){throw new Error("Not implemented")}async delete(e,t){throw new Error("Not implemented")}async get(e){throw new Error("Not implemented")}async update(e,t){throw new Error("Not implemented")}async list(e){return k.get(`projects/${e}/${this.urlPath}`)}}const p=new N;class m{constructor(e,t){n(this,"record");this.projectId=e,this.record=v.create(p,t,"id")}static async list(e){return(await p.list(e)).map(a=>new m(e,a))}get key(){return this.record.get("name")}get name(){return this.record.get("name")}get size(){return this.record.get("size")}get date(){return new Date(this.record.get("date"))}}const re=f({__name:"Files",setup(r){const t=g().params.projectId,{loading:a,result:c}=I(()=>m.list(t)),d=[{label:"Variable name",key:"key"},{label:"Variable value",key:"value",type:"password"}],l=w(()=>{var i,s;return{columns:[{name:"Name"},{name:"Size"},{name:"Date"}],rows:(s=(i=c.value)==null?void 0:i.map(o=>({key:o.key,cells:[{text:o.key},{text:o.size.toString()},{text:o.date.toDateString()}]})))!=null?s:[]}});return(i,s)=>(_(),b(D,{"entity-name":"File",loading:h(a),title:"Files",description:"Persist files on your projects.","empty-title":"No environment variables set",table:l.value,fields:d},null,8,["loading","table"]))}});export{re as default};
//# sourceMappingURL=Files.4b06e64a.js.map
