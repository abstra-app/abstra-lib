import{d as f,eL as u,J as l,o as b,N as _,f as h,v as p}from"./outputWidgets.67b8e105.js";import{E as g}from"./ExclamationCircleOutlined.17de2d51.js";import{M as m}from"./Modal.7fa04887.js";(function(){try{var n=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},a=new Error().stack;a&&(n._sentryDebugIds=n._sentryDebugIds||{},n._sentryDebugIds[a]="00de6b0b-6b9b-4f68-9895-6ddfb7f66d65",n._sentryDebugIdIdentifier="sentry-dbid-00de6b0b-6b9b-4f68-9895-6ddfb7f66d65")}catch{}})();const i="You have unsaved changes. Are you sure you want to leave?",v=f({__name:"UnsavedChangesHandler",props:{hasChanges:{type:Boolean}},setup(n){const a=n,o=e=>(e=e||window.event,e&&(e.returnValue=i),i),c=()=>{window.addEventListener("beforeunload",o)};u(async(e,y,s)=>{if(!a.hasChanges)return s();await new Promise(r=>{m.confirm({title:"You have unsaved changes.",icon:h(g),content:"Are you sure you want to discard them?",okText:"Discard Changes",okType:"danger",cancelText:"Cancel",onOk(){r(!0)},onCancel(){r(!1)}})})?s():s(!1)});const t=()=>window.removeEventListener("beforeunload",o),d=e=>e?c():t();return l(()=>a.hasChanges,d),b(()=>d(a.hasChanges)),_(t),()=>{}}});const I=p(v,[["__scopeId","data-v-0a2660df"]]);export{I as U};
//# sourceMappingURL=UnsavedChangesHandler.7c435ce0.js.map
