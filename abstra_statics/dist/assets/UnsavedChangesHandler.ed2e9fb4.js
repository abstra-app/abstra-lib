import{d as l,eH as f,O as h,o as _,R as g,b as p,c as v,w as m,u as y,dv as b,A as w,co as C,f as k,E}from"./outputWidgets.fd23be41.js";import{E as U}from"./ExclamationCircleOutlined.0dcadd7b.js";(function(){try{var n=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},a=new Error().stack;a&&(n._sentryDebugIds=n._sentryDebugIds||{},n._sentryDebugIds[a]="93a9e017-6d9b-48ae-89f6-ac43e3a8b307",n._sentryDebugIdIdentifier="sentry-dbid-93a9e017-6d9b-48ae-89f6-ac43e3a8b307")}catch{}})();const c="You have unsaved changes. Are you sure you want to leave?",I=l({__name:"UnsavedChangesHandler",props:{hasChanges:{type:Boolean}},setup(n){const a=n,o=e=>(e=e||window.event,e&&(e.returnValue=c),c),i=()=>{window.addEventListener("beforeunload",o)};f(async(e,u,s)=>{if(!a.hasChanges)return s();await new Promise(d=>{C.confirm({title:"You have unsaved changes.",icon:k(U),content:"Are you sure you want to discard them?",okText:"Discard Changes",okType:"danger",cancelText:"Cancel",onOk(){d(!0)},onCancel(){d(!1)}})})?s():s(!1)});const t=()=>window.removeEventListener("beforeunload",o),r=e=>e?i():t();return h(()=>a.hasChanges,r),_(()=>r(a.hasChanges)),g(t),(e,u)=>(p(),v(y(w),{theme:{token:{colorPrimary:"#d14056"}}},{default:m(()=>[b(e.$slots,"default",{},void 0,!0)]),_:3}))}});const A=E(I,[["__scopeId","data-v-b13f3978"]]);export{A as U};
//# sourceMappingURL=UnsavedChangesHandler.ed2e9fb4.js.map
