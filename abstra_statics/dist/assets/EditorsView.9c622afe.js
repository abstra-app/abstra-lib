var f=Object.defineProperty;var p=(i,e,t)=>e in i?f(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var a=(i,e,t)=>(p(i,typeof e!="symbol"?e+"":e,t),t);import{C as b}from"./CrudView.bc9243cf.js";import{e as n,f as c,ep as g,d as w,ea as y,eo as I,o as v,c as M,u as l}from"./index.49752f8d.js";import{a as h}from"./gateway.7e06cc37.js";import{M as z}from"./member.197d9165.js";import"./tables.06ecb0ba.js";import{a as u}from"./ant-design.a712a8b7.js";import"./router.1e03437c.js";import"./Badge.6a492432.js";import"./DocsButton.vue_vue_type_script_setup_true_lang.084fe45a.js";import"./BookOutlined.bfcd1281.js";import"./url.d64127c8.js";import"./PhDotsThreeVertical.vue.3a7a24a4.js";import"./index.e9467e18.js";import"./index.f0a418b5.js";import"./popupNotifcation.8f6af93d.js";import"./record.58756642.js";import"./string.65605b35.js";(function(){try{var i=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},e=new Error().stack;e&&(i._sentryDebugIds=i._sentryDebugIds||{},i._sentryDebugIds[e]="7f8edd7b-7d7b-442d-a1e9-ee7de6c86f3b",i._sentryDebugIdIdentifier="sentry-dbid-7f8edd7b-7d7b-442d-a1e9-ee7de6c86f3b")}catch{}})();class C{constructor({authorEmail:e,organizationId:t,api:o,handlers:s}){a(this,"members",n([]));a(this,"selectedMember",n(null));a(this,"draftMember",n(null));a(this,"creationFields",c(()=>this.getCreationFields()));a(this,"table",c(()=>this.makeCrudViewTable()));a(this,"loading",n(!1));a(this,"authorEmail");a(this,"organizationId");a(this,"api");a(this,"handlers");a(this,"currentMember",n(null));a(this,"confirmAddMember",async e=>{await this.api.create({organizationId:this.organizationId,email:e.email.trim(),teams:e.teams}),await this.fetchState()});this.authorEmail=e,this.organizationId=t,this.api=o,this.handlers=s}async fetchState(){this.loading.value=!0,await this.fetchMembers(),this.setCurrentMember(),this.loading.value=!1}setCurrentMember(){var e;this.currentMember.value=(e=this.members.value.find(t=>t.email===this.authorEmail))!=null?e:null}async fetchMembers(){this.members.value=await this.api.list(this.organizationId)}async removeMember(e){var o;if(((o=h.getAuthor())==null?void 0:o.claims.email)===e.email){await u("Removing your own access will block you from this organization. Are you sure?",{okText:"Remove",cancelText:"Cancel"})&&(await this.api.delete({organizationId:this.organizationId,authorId:e.authorId}),this.handlers.onSelfRemove());return}await u(`Are you sure you want to remove ${e.email} access?`,{okText:"Remove",cancelText:"Cancel"})&&(await this.api.delete({organizationId:this.organizationId,authorId:e.authorId}),await this.fetchMembers())}getCreationFields(){return[{key:"email",label:"Email",type:"text"}]}makeCrudViewTable(){return{columns:[{title:"Email",align:"center"},{title:"",align:"right"}],rows:this.members.value.map(e=>({key:e.email,cells:[{type:"text",text:e.email},{type:"actions",actions:[{icon:g,label:"Remove access",onClick:()=>this.removeMember(e),dangerous:!0}]}]}))}}}const K=w({__name:"EditorsView",setup(i){var m;const e=y(),t=I(),o=e.params.organizationId,s=new z,d=(m=h.getAuthor())==null?void 0:m.claims.email;if(!d)throw new Error("Author email is not available");const r=new C({organizationId:o,api:s,authorEmail:d,handlers:{onSelfRemove:()=>{t.push("organizations")}}});return r.fetchState(),(k,E)=>(v(),M(b,{"entity-name":"editor",loading:l(r).loading.value,title:"Editors",description:"Manage people who can edit projects within your organization","empty-title":"No editors yet",table:l(r).table.value,"create-button-text":"Invite Editor",fields:l(r).creationFields.value,create:l(r).confirmAddMember},null,8,["loading","table","fields","create"]))}});export{K as default};
//# sourceMappingURL=EditorsView.9c622afe.js.map
