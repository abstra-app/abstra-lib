import{d as b,r as h,o as w,K as v,b as d,c as s,w as e,aA as n,u as t,b$ as u,f as a,cL as g,eD as k,cH as m}from"./outputWidgets.89c081d6.js";import{A as C,a as p}from"./Text.474082f1.js";(function(){try{var o=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},c=new Error().stack;c&&(o._sentryDebugIds=o._sentryDebugIds||{},o._sentryDebugIds[c]="56392e90-4478-4209-9989-2385931aedcf",o._sentryDebugIdIdentifier="sentry-dbid-56392e90-4478-4209-9989-2385931aedcf")}catch{}})();const A=b({__name:"Debugger",setup(o){async function c(){const i=await fetch("/_editor/api/debugger",{method:"GET"});if(!i.ok)throw new Error("Failed to check debugger connection");return await i.json()}async function f(){await fetch("/_editor/api/debugger/vscode-launch",{method:"POST"}),_()}const r=h({connected:!1,port:0,is_launch_json_configured:!1});async function _(){r.value=await c()}let l=null;return w(()=>{l=setInterval(_,1e3)}),v(()=>{l&&clearInterval(l)}),(i,y)=>r.value.connected?(d(),s(t(u),{key:0,disabled:""},{default:e(()=>[n("VSCode connected")]),_:1})):(d(),s(t(m),{key:1},{content:e(()=>[a(t(g),{direction:"vertical"},{default:e(()=>[a(t(C),null,{default:e(()=>[n(" Abstra allows you to connect to your VSCode debugger ")]),_:1}),a(t(p),null,{default:e(()=>[n(" You're not connected ")]),_:1}),r.value.is_launch_json_configured?(d(),s(t(g),{key:0,direction:"vertical"},{default:e(()=>[a(t(p),{style:{"font-size":"24px"},copyable:"",code:""},{default:e(()=>[n(k(r.value.port),1)]),_:1}),a(t(u),{href:"https://docs.abstra.io/debug/vscode",target:"_blank"},{default:e(()=>[n(" Learn how to connect to vscode ")]),_:1})]),_:1})):(d(),s(t(u),{key:1,onClick:f},{default:e(()=>[n("Configure launch.json")]),_:1}))]),_:1})]),default:e(()=>[a(t(u),null,{default:e(()=>[n("Connect to VSCode")]),_:1})]),_:1}))}});export{A as _};
//# sourceMappingURL=Debugger.vue_vue_type_script_setup_true_lang.0e3a1267.js.map
