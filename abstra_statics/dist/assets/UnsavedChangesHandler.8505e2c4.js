import{d as u,eM as f,I as l,o as _,K as h,f as p,v as g}from"./outputWidgets.67d01534.js";import{E as m}from"./ExclamationCircleOutlined.af61b8f4.js";import{M as v}from"./Modal.e44b2640.js";(function(){try{var n=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},a=new Error().stack;a&&(n._sentryDebugIds=n._sentryDebugIds||{},n._sentryDebugIds[a]="d55e5641-5187-48d7-8c2a-c1bd4a508cdd",n._sentryDebugIdIdentifier="sentry-dbid-d55e5641-5187-48d7-8c2a-c1bd4a508cdd")}catch{}})();const c="You have unsaved changes. Are you sure you want to leave?",y=u({__name:"UnsavedChangesHandler",props:{hasChanges:{type:Boolean}},setup(n){const a=n,o=e=>(e=e||window.event,e&&(e.returnValue=c),c),i=()=>{window.addEventListener("beforeunload",o)};f(async(e,w,s)=>{if(!a.hasChanges)return s();await new Promise(r=>{v.confirm({title:"You have unsaved changes.",icon:p(m),content:"Are you sure you want to discard them?",okText:"Discard Changes",okType:"danger",cancelText:"Cancel",onOk(){r(!0)},onCancel(){r(!1)}})})?s():s(!1)});const t=()=>window.removeEventListener("beforeunload",o),d=e=>e?i():t();return l(()=>a.hasChanges,d),_(()=>d(a.hasChanges)),h(t),()=>{}}});const E=g(y,[["__scopeId","data-v-0a2660df"]]);export{E as U};
//# sourceMappingURL=UnsavedChangesHandler.8505e2c4.js.map
