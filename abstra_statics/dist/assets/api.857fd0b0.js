import{z as e}from"./outputWidgets.6d63c349.js";import{w as r}from"./metadata.c516739c.js";(function(){try{var a=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},t=new Error().stack;t&&(a._sentryDebugIds=a._sentryDebugIds||{},a._sentryDebugIds[t]="6ef8ee8f-3f55-4ba0-a933-fa7ddd010eee",a._sentryDebugIdIdentifier="sentry-dbid-6ef8ee8f-3f55-4ba0-a933-fa7ddd010eee")}catch{}})();const i=r.stages.flatMap(a=>a.transitions.flatMap(t=>t.typeName)),d=e.object({type:e.enum(["forms","hooks","jobs","scripts","conditions","iterators"]),id:e.string(),title:e.string(),position:e.object({x:e.number(),y:e.number()}),props:e.object({path:e.string().nullable(),filename:e.string().nullable(),variableName:e.string().nullable(),itemName:e.string().nullable()})}),l=e.object({id:e.string(),type:e.enum(i),sourceStageId:e.string(),targetStageId:e.string(),props:e.object({conditionValue:e.string().nullable()})}),o=e.object({stages:e.array(d),transitions:e.array(l)}),f={"Content-Type":"application/json"},b="abstra-run-id";class u{async load(){const t=await fetch("/_editor/api/workflows");if(t.ok){const n=await t.json();return o.parse(n)}else throw new Error("Failed to fetch initial data")}async update(t){const n=await fetch("/_editor/api/workflows",{method:"PUT",headers:f,body:JSON.stringify(t)});if(n.ok){const s=await n.json();return o.parse(s)}else throw new Error("Failed to update workflow")}}export{b as A,u as W};
//# sourceMappingURL=api.857fd0b0.js.map
