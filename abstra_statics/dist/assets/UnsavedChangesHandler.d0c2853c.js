import{d as f,f9 as l,O as _,o as h,R as p,dy as b,f as g,E as m}from"./outputWidgets.a6a6ef30.js";import{E as y}from"./ExclamationCircleOutlined.cae6bd9b.js";import{M as v}from"./Modal.c1c6172f.js";(function(){try{var n=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},a=new Error().stack;a&&(n._sentryDebugIds=n._sentryDebugIds||{},n._sentryDebugIds[a]="43ba40e2-851c-4b3b-813a-53e06fc936cf",n._sentryDebugIdIdentifier="sentry-dbid-43ba40e2-851c-4b3b-813a-53e06fc936cf")}catch{}})();const c="You have unsaved changes. Are you sure you want to leave?",w=f({__name:"UnsavedChangesHandler",props:{hasChanges:{type:Boolean}},setup(n){const a=n,o=e=>(e=e||window.event,e&&(e.returnValue=c),c),i=()=>{window.addEventListener("beforeunload",o)};l(async(e,u,s)=>{if(!a.hasChanges)return s();await new Promise(d=>{v.confirm({title:"You have unsaved changes.",icon:g(y),content:"Are you sure you want to discard them?",okText:"Discard Changes",okType:"danger",cancelText:"Cancel",onOk(){d(!0)},onCancel(){d(!1)}})})?s():s(!1)});const t=()=>window.removeEventListener("beforeunload",o),r=e=>e?i():t();return _(()=>a.hasChanges,r),h(()=>r(a.hasChanges)),p(t),(e,u)=>b(e.$slots,"default",{},void 0,!0)}});const D=m(w,[["__scopeId","data-v-79207dcb"]]);export{D as U};
//# sourceMappingURL=UnsavedChangesHandler.d0c2853c.js.map
