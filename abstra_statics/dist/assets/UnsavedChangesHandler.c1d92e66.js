import{d as c,eL as u,J as l,o as _,N as h,f as p,v as g}from"./outputWidgets.65744ed0.js";import{E as m}from"./ExclamationCircleOutlined.63d9d5b5.js";import{M as v}from"./Modal.b5c448c3.js";(function(){try{var n=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},a=new Error().stack;a&&(n._sentryDebugIds=n._sentryDebugIds||{},n._sentryDebugIds[a]="6f1ff504-6d34-4198-bb76-f817d707f7fa",n._sentryDebugIdIdentifier="sentry-dbid-6f1ff504-6d34-4198-bb76-f817d707f7fa")}catch{}})();const f="You have unsaved changes. Are you sure you want to leave?",y=c({__name:"UnsavedChangesHandler",props:{hasChanges:{type:Boolean}},setup(n){const a=n,o=e=>(e=e||window.event,e&&(e.returnValue=f),f),i=()=>{window.addEventListener("beforeunload",o)};u(async(e,w,s)=>{if(!a.hasChanges)return s();await new Promise(r=>{v.confirm({title:"You have unsaved changes.",icon:p(m),content:"Are you sure you want to discard them?",okText:"Discard Changes",okType:"danger",cancelText:"Cancel",onOk(){r(!0)},onCancel(){r(!1)}})})?s():s(!1)});const t=()=>window.removeEventListener("beforeunload",o),d=e=>e?i():t();return l(()=>a.hasChanges,d),_(()=>d(a.hasChanges)),h(t),()=>{}}});const I=g(y,[["__scopeId","data-v-0a2660df"]]);export{I as U};
//# sourceMappingURL=UnsavedChangesHandler.c1d92e66.js.map
