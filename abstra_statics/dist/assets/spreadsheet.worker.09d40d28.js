let E=null;function k(i){let l="",s=i;for(;s>0;){const f=(s-1)%26;l=String.fromCharCode(65+f)+l,s=Math.floor((s-1)/26)}return l}function T(i){const l=[];let s="",f=!1;for(let u=0;u<i.length;u++){const y=i[u],v=i[u+1];y==='"'?f&&v==='"'?(s+='"',u++):f=!f:y===","&&!f?(l.push(s),s=""):s+=y}return l.push(s),l}function A(i,l=!1){const s={0:"FF000000",1:"FFFFFFFF",2:"FF44546A",3:"FFE7E6E6",4:"FF4472C4",5:"FFED7D31",6:"FFA5A5A5",7:"FFFFC000",8:"FF5B9BD5",9:"FF70AD47"};return i===1&&!l?"FF000000":s[i]}self.addEventListener("message",async i=>{const l=i.data;if(l.type==="parse")try{E||(E=await import("./exceljs.min.30e613b5.js").then(function(a){return a.e}));const{arrayBuffer:s,filename:f}=l,u=f.toLowerCase().endsWith(".csv"),y=new E.Workbook;if(u){const x=new TextDecoder("utf-8").decode(s).split(`
`).filter(m=>m.trim()!==""),C=y.addWorksheet("Sheet1");x.forEach((m,b)=>{T(m).forEach((h,e)=>{const d=C.getCell(b+1,e+1),g=h.trim(),c=Number(g);g!==""&&!isNaN(c)&&g===String(c)?d.value=c:d.value=g})})}else{const a=s.byteLength/1048576;await y.xlsx.load(s),y.model&&y.model.themes}const v=[];y.eachSheet((a,S)=>{const x=a.name;v.push(x);const C={},m={s:{r:0,c:0},e:{r:0,c:0}};if(a.eachRow((b,F)=>{const h=F-1;h>m.e.r&&(m.e.r=h),b.eachCell({includeEmpty:!1},(e,d)=>{const g=d-1;g>m.e.c&&(m.e.c=g);const c=k(d)+F;let t=e.value,p;t&&typeof t=="object"&&(t.result!==void 0?t=t.result:t.richText&&Array.isArray(t.richText)?t=t.richText.map(o=>o.text||"").join(""):t.text!==void 0?t=t.text:t.hyperlink!==void 0?t=t.text||t.hyperlink:t.error!==void 0?t=t.error:t.sharedFormula!==void 0||t.formula!==void 0?t=e.result!==void 0?e.result:"":(console.warn(`[Worker] Unknown cell value type in ${c}:`,t),t="")),e.formula?p=e.formula:e.value&&typeof e.value=="object"&&e.value.formula?p=e.value.formula:e.value&&typeof e.value=="object"&&e.value.sharedFormula&&(p=e.value.sharedFormula);const n={v:t,t:"s"};if(p&&(n.f=p),e.numFmt&&(n.z=e.numFmt),t==null||t===""?n.t="z":typeof t=="number"?n.t="n":typeof t=="boolean"?n.t="b":t instanceof Date&&(n.t="d"),e.style){const o={};if(e.style.font&&(o.font={name:e.style.font.name,sz:e.style.font.size,bold:e.style.font.bold,italic:e.style.font.italic,underline:e.style.font.underline,strike:e.style.font.strike},e.style.font.color)){if(e.style.font.color.argb)o.font.color={rgb:e.style.font.color.argb};else if(e.style.font.color.theme!==void 0){const r=A(e.style.font.color.theme,!1);r?o.font.color={rgb:r}:o.font.color={theme:e.style.font.color.theme}}}if(e.style.fill&&(o.fill={},e.style.fill.type==="pattern"&&(o.fill.patternType=e.style.fill.pattern,e.style.fill.pattern!=="none"))){if(e.style.fill.fgColor){if(e.style.fill.fgColor.argb)o.fill.fgColor={rgb:e.style.fill.fgColor.argb};else if(e.style.fill.fgColor.theme!==void 0){const r=A(e.style.fill.fgColor.theme,!0);r?o.fill.fgColor={rgb:r}:o.fill.fgColor={theme:e.style.fill.fgColor.theme}}}if(e.style.fill.bgColor){if(e.style.fill.bgColor.argb)o.fill.bgColor={rgb:e.style.fill.bgColor.argb};else if(e.style.fill.bgColor.theme!==void 0){const r=A(e.style.fill.bgColor.theme,!0);r?o.fill.bgColor={rgb:r}:o.fill.bgColor={theme:e.style.fill.bgColor.theme}}}}e.style.border&&(o.border={},["top","left","bottom","right"].forEach(r=>{if(e.style.border[r]&&(o.border[r]={style:e.style.border[r].style},e.style.border[r].color)){if(e.style.border[r].color.argb)o.border[r].color={rgb:e.style.border[r].color.argb};else if(e.style.border[r].color.theme!==void 0){const w=A(e.style.border[r].color.theme,!1);w?o.border[r].color={rgb:w}:o.border[r].color={theme:e.style.border[r].color.theme}}}})),e.style.alignment&&(o.alignment={horizontal:e.style.alignment.horizontal,vertical:e.style.alignment.vertical,wrapText:e.style.alignment.wrapText,textRotation:e.style.alignment.textRotation,indent:e.style.alignment.indent}),n.s=o}C[c]=n})}),C["!ref"]=`A1:${k(m.e.c+1)}${m.e.r+1}`,a.model&&a.model.merges&&Array.isArray(a.model.merges)){const b=[];a.model.merges.forEach(F=>{const h=F.split(":");if(h.length===2){const e=h[0].match(/^([A-Z]+)(\d+)$/),d=h[1].match(/^([A-Z]+)(\d+)$/);if(e&&d){const g=e[1].split("").reduce((n,o)=>n*26+o.charCodeAt(0)-65,0),c=d[1].split("").reduce((n,o)=>n*26+o.charCodeAt(0)-65,0),t=parseInt(e[2])-1,p=parseInt(d[2])-1;b.push({s:{r:t,c:g},e:{r:p,c}})}}}),b.length>0&&(C["!merges"]=b)}self.postMessage({type:"sheet-data",sheetName:x,sheetData:C})});const D={type:"success",sheetNames:v};self.postMessage(D)}catch(s){console.error("[Worker] Error parsing spreadsheet:",s);const f={type:"error",error:s instanceof Error?s.message:"Unknown error parsing spreadsheet"};self.postMessage(f)}});
//# sourceMappingURL=spreadsheet.worker.09d40d28.js.map