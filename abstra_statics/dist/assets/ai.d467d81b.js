import"./index.f5071a39.js";(function(){try{var o=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},e=new Error().stack;e&&(o._sentryDebugIds=o._sentryDebugIds||{},o._sentryDebugIds[e]="efa2b38d-8581-49d3-800a-52c589a70bf0",o._sentryDebugIdIdentifier="sentry-dbid-efa2b38d-8581-49d3-800a-52c589a70bf0")}catch{}})();class p{static async*sendMessage(e,t,a,s,c,y){var r;const n=await fetch("/_editor/api/ai/message",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({messages:e,stageId:t,langGraphThreadId:a,code:s,executionError:c})});if(!n.ok)throw new Error("Failed to send message");const i=(r=n.body)==null?void 0:r.getReader();if(!i)throw new Error("No response body");for(;!y();){const d=await i.read();if(d.done)break;yield new TextDecoder().decode(d.value)}}static async getHistory(e,t){const a=await fetch(`/_editor/api/ai/history?limit=${e}&offset=${t}`,{method:"GET"});if(!a.ok)throw new Error("Failed to fetch history");return await a.json()}static async createThread(){return(await fetch("/_editor/api/ai/thread",{method:"POST"})).json()}static async cancelAllRuns(e){return(await fetch("/_editor/api/ai/cancel-all",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({threadId:e})})).ok}static async generateProject(e){const t=await fetch("/_editor/api/ai/generate",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({prompt:e})});if(!t.ok){const a=await t.text();throw new Error(a)}}static async vote(e,t,a,s){await fetch("/_editor/api/ai/vote",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({vote:e,question:t,answer:a,context:s})})}}export{p as A};
//# sourceMappingURL=ai.d467d81b.js.map
