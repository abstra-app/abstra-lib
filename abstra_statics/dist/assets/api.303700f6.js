import{z as t}from"./outputWidgets.8862456b.js";import{w as r}from"./metadata.ba8dfc0f.js";(function(){try{var a=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},e=new Error().stack;e&&(a._sentryDebugIds=a._sentryDebugIds||{},a._sentryDebugIds[e]="ebc546e3-16e7-4a46-9fb8-c5cd326bbe2a",a._sentryDebugIdIdentifier="sentry-dbid-ebc546e3-16e7-4a46-9fb8-c5cd326bbe2a")}catch{}})();const i=r.stages.flatMap(a=>a.transitions.flatMap(e=>e.typeName)),c=t.object({type:t.enum(["forms","hooks","jobs","scripts","conditions","iterators"]),id:t.string(),title:t.string(),position:t.object({x:t.number(),y:t.number()}),props:t.object({path:t.string().nullable(),filename:t.string().nullable(),variableName:t.string().nullable(),itemName:t.string().nullable()})}),l=t.object({id:t.string(),type:t.enum(i),sourceStageId:t.string(),targetStageId:t.string(),props:t.object({conditionValue:t.string().nullable()})}),o=t.object({stages:t.array(c),transitions:t.array(l)}),d={"Content-Type":"application/json"},f="abstra-run-id";class u{async load(){const e=await fetch("/_editor/api/workflows");if(e.ok){const n=await e.json();return o.parse(n)}else throw new Error("Failed to fetch initial data")}async update(e){const n=await fetch("/_editor/api/workflows",{method:"PUT",headers:d,body:JSON.stringify(e)});if(n.ok){const s=await n.json();return o.parse(s)}else throw new Error("Failed to update workflow")}}export{f as A,u as W};
//# sourceMappingURL=api.303700f6.js.map
