import{z as t}from"./outputWidgets.c66cfd35.js";import{w as i}from"./metadata.0278d2c7.js";(function(){try{var o=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},e=new Error().stack;e&&(o._sentryDebugIds=o._sentryDebugIds||{},o._sentryDebugIds[e]="966c3d85-de40-4f1a-a547-cb3a064a0bb4",o._sentryDebugIdIdentifier="sentry-dbid-966c3d85-de40-4f1a-a547-cb3a064a0bb4")}catch{}})();const l=i.stages.flatMap(o=>o.transitions.flatMap(e=>e.typeName)),c=t.object({type:t.enum(["forms","hooks","jobs","scripts","conditions","iterators"]),id:t.string(),title:t.string(),position:t.object({x:t.number(),y:t.number()}),props:t.object({path:t.string().nullable(),filename:t.string().nullable(),variableName:t.string().nullable(),itemName:t.string().nullable()})}),d=t.object({id:t.string(),type:t.enum(l),sourceStageId:t.string(),targetStageId:t.string(),props:t.object({conditionValue:t.string().nullable()})}),n=t.object({stages:t.array(c),transitions:t.array(d)}),r={"Content-Type":"application/json"},p="abstra-run-id";class u{async load(){const e=await fetch("/_editor/api/workflows");if(e.ok){const a=await e.json();return n.parse(a)}else throw new Error("Failed to fetch initial data")}async update(e){const a=await fetch("/_editor/api/workflows",{method:"PUT",headers:r,body:JSON.stringify(e)});if(a.ok){const s=await a.json();return n.parse(s)}else throw new Error("Failed to update workflow")}}class b{async load(){const e=await fetch("/_workflows");if(e.ok){const a=await e.json();return n.parse(a)}else throw new Error("Failed to fetch initial data")}async update(e){const a=await fetch("/_workflows",{method:"PUT",headers:r,body:JSON.stringify(e)});if(a.ok){const s=await a.json();return n.parse(s)}else throw new Error("Failed to update workflow")}}export{p as A,u as E,b as P};
//# sourceMappingURL=api.44fb96dd.js.map
