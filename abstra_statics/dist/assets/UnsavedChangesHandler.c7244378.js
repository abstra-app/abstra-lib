import{d as l,f9 as f,O as _,o as h,R as p,dy as g,f as m,E as y}from"./outputWidgets.52066b3d.js";import{E as v}from"./ExclamationCircleOutlined.35293152.js";import{M as w}from"./Modal.780f0f8f.js";(function(){try{var n=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},a=new Error().stack;a&&(n._sentryDebugIds=n._sentryDebugIds||{},n._sentryDebugIds[a]="3a953009-7e97-43e3-a37b-8612995c3ea5",n._sentryDebugIdIdentifier="sentry-dbid-3a953009-7e97-43e3-a37b-8612995c3ea5")}catch{}})();const c="You have unsaved changes. Are you sure you want to leave?",b=l({__name:"UnsavedChangesHandler",props:{hasChanges:{type:Boolean}},setup(n){const a=n,o=e=>(e=e||window.event,e&&(e.returnValue=c),c),i=()=>{window.addEventListener("beforeunload",o)};f(async(e,u,s)=>{if(!a.hasChanges)return s();await new Promise(d=>{w.confirm({title:"You have unsaved changes.",icon:m(v),content:"Are you sure you want to discard them?",okText:"Discard Changes",okType:"danger",cancelText:"Cancel",onOk(){d(!0)},onCancel(){d(!1)}})})?s():s(!1)});const t=()=>window.removeEventListener("beforeunload",o),r=e=>e?i():t();return _(()=>a.hasChanges,r),h(()=>r(a.hasChanges)),p(t),(e,u)=>g(e.$slots,"default",{},void 0,!0)}});const D=y(b,[["__scopeId","data-v-79207dcb"]]);export{D as U};
//# sourceMappingURL=UnsavedChangesHandler.c7244378.js.map
