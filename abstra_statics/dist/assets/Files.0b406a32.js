var u=Object.defineProperty;var y=(r,e,t)=>e in r?u(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var n=(r,e,t)=>(y(r,typeof e!="symbol"?e+"":e,t),t);import{d as f,eA as g,J as b,b as w,c as _,u as h}from"./outputWidgets.75df2c6c.js";import"./console.80a42f1b.js";import"./index.50c5e781.js";import{C as k}from"./gateway.dcef7bce.js";import{A as v}from"./activeRecord.5824d23b.js";import{a as I}from"./asyncComputed.4c25409b.js";import{_ as D}from"./CrudView.vue_vue_type_script_setup_true_lang.a846e2aa.js";import"./index.e3225393.js";import"./Form.c0328a64.js";import"./Title.de5720f2.js";import"./CollapsePanel.1c0a5992.js";import"./index.ec013f94.js";import"./index.98621ec9.js";import"./index.70117e20.js";import"./dayjs.0dc93a74.js";import"./index.fd4bfc8f.js";import"./index.ec94aa9a.js";import"./TabPane.4eb08ff3.js";import"./index.1a5c600f.js";import"./index.aabc4b68.js";import"./index.a54969a9.js";import"./index.6e2956ed.js";import"./index.8264e645.js";import"./index.be7d7e6f.js";import"./index.9f609020.js";import"./index.a80e9f5f.js";import"./index.0a2703da.js";import"./pubsub.01aac4ae.js";import"./icons.6c11da1b.js";(function(){try{var r=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},e=new Error().stack;e&&(r._sentryDebugIds=r._sentryDebugIds||{},r._sentryDebugIds[e]="184b5607-9456-4827-8b20-401c8f359d32",r._sentryDebugIdIdentifier="sentry-dbid-184b5607-9456-4827-8b20-401c8f359d32")}catch{}})();class N{constructor(){n(this,"urlPath","files")}async create(e){throw new Error("Not implemented")}async delete(e,t){throw new Error("Not implemented")}async get(e){throw new Error("Not implemented")}async update(e,t){throw new Error("Not implemented")}async list(e){return k.get(`projects/${e}/${this.urlPath}`)}}const p=new N;class m{constructor(e,t){n(this,"record");this.projectId=e,this.record=v.create(p,t,"id")}static async list(e){return(await p.list(e)).map(i=>new m(e,i))}get key(){return this.record.get("name")}get name(){return this.record.get("name")}get size(){return this.record.get("size")}get date(){return new Date(this.record.get("date"))}}const re=f({__name:"Files",setup(r){const t=g().params.projectId,{loading:i,result:c}=I(()=>m.list(t)),l=[{label:"Variable name",key:"key"},{label:"Variable value",key:"value",type:"password"}],d=b(()=>{var s,a;return{columns:[{name:"Name"},{name:"Size"},{name:"Date"}],rows:(a=(s=c.value)==null?void 0:s.map(o=>({key:o.key,cells:[{text:o.key},{text:o.size.toString()},{text:o.date.toDateString()}]})))!=null?a:[]}});return(s,a)=>(w(),_(D,{"entity-name":"File",loading:h(i),title:"Files",description:"Persist files on your projects.","empty-title":"No environment variables set",table:d.value,fields:l},null,8,["loading","table"]))}});export{re as default};
//# sourceMappingURL=Files.0b406a32.js.map
