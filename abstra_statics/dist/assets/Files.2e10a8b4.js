var u=Object.defineProperty;var y=(r,e,t)=>e in r?u(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var n=(r,e,t)=>(y(r,typeof e!="symbol"?e+"":e,t),t);import{d as f,eA as g,J as b,b as w,c as _,u as h}from"./outputWidgets.6d878336.js";import"./console.bb49fd7b.js";import"./index.d3f5bc3d.js";import{C as k}from"./gateway.04616128.js";import{A as v}from"./activeRecord.0d2b743a.js";import{a as I}from"./asyncComputed.f4e8f601.js";import{_ as D}from"./CrudView.vue_vue_type_script_setup_true_lang.4ebf21bf.js";import"./index.9e0e45c6.js";import"./Form.9dbabc14.js";import"./Title.7777f40a.js";import"./CollapsePanel.e467f5eb.js";import"./index.48f0e3d4.js";import"./index.ec7066e1.js";import"./index.e1dcf4ff.js";import"./dayjs.52118055.js";import"./index.d8a13a23.js";import"./index.64e4975b.js";import"./TabPane.dac9512e.js";import"./index.f4029516.js";import"./index.ddda7671.js";import"./index.12ea9441.js";import"./index.21962144.js";import"./index.ab3edcb5.js";import"./index.defccd4f.js";import"./index.26308154.js";import"./index.40d5d1c1.js";import"./index.4179d6a8.js";import"./pubsub.7c8033ef.js";import"./icons.31732537.js";(function(){try{var r=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},e=new Error().stack;e&&(r._sentryDebugIds=r._sentryDebugIds||{},r._sentryDebugIds[e]="e073e701-5107-43b3-97c4-cb05f82494da",r._sentryDebugIdIdentifier="sentry-dbid-e073e701-5107-43b3-97c4-cb05f82494da")}catch{}})();class N{constructor(){n(this,"urlPath","files")}async create(e){throw new Error("Not implemented")}async delete(e,t){throw new Error("Not implemented")}async get(e){throw new Error("Not implemented")}async update(e,t){throw new Error("Not implemented")}async list(e){return k.get(`projects/${e}/${this.urlPath}`)}}const p=new N;class m{constructor(e,t){n(this,"record");this.projectId=e,this.record=v.create(p,t,"id")}static async list(e){return(await p.list(e)).map(i=>new m(e,i))}get key(){return this.record.get("name")}get name(){return this.record.get("name")}get size(){return this.record.get("size")}get date(){return new Date(this.record.get("date"))}}const re=f({__name:"Files",setup(r){const t=g().params.projectId,{loading:i,result:c}=I(()=>m.list(t)),l=[{label:"Variable name",key:"key"},{label:"Variable value",key:"value",type:"password"}],d=b(()=>{var s,a;return{columns:[{name:"Name"},{name:"Size"},{name:"Date"}],rows:(a=(s=c.value)==null?void 0:s.map(o=>({key:o.key,cells:[{text:o.key},{text:o.size.toString()},{text:o.date.toDateString()}]})))!=null?a:[]}});return(s,a)=>(w(),_(D,{"entity-name":"File",loading:h(i),title:"Files",description:"Persist files on your projects.","empty-title":"No environment variables set",table:d.value,fields:l},null,8,["loading","table"]))}});export{re as default};
//# sourceMappingURL=Files.2e10a8b4.js.map
