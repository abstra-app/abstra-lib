import{d as u,K as f,b as y,t as g,z as s,J as _}from"./registerWidgets.5e258592.js";import{a as w}from"./asyncComputed.2269e9b0.js";import"./gateway.772dec88.js";import{M as i}from"./member.64f66c82.js";import"./index.7276737e.js";import{C as I}from"./CrudView.90459d3b.js";import"./passwordlessManager.0607f999.js";import"./activeRecord.b3eba751.js";import"./DropdownMenu.bb27be32.js";import"./Modal.8489c194.js";import"./LoadingIndicator.fecca023.js";import"./lottie.8d9ff8b2.js";(function(){try{var e=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},a=new Error().stack;a&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[a]="b6cce603-cd14-48b0-a39b-2755402faac1",e._sentryDebugIdIdentifier="sentry-dbid-b6cce603-cd14-48b0-a39b-2755402faac1")}catch{}})();const J=u({__name:"Members",setup(e){const o=_().params.organizationId,m=[{key:"email",label:"Email"}],l=async t=>{await i.create(o,t.email),p()},{loading:c,result:d,refetch:p}=w(()=>i.list(o)),b=f(()=>{var t,r;return{columns:[{name:"Email"},{name:"Role"}],rows:(r=(t=d.value)==null?void 0:t.map(n=>({key:n.email,cells:[{text:n.email,classes:["title","centered"]},{text:n.role,classes:["centered"]}]})))!=null?r:[]}});return(t,r)=>(y(),g(I,{"entity-name":"members",loading:s(c),title:"Organization members",description:"List all organization members.","empty-title":"No members yet",table:s(b),"create-button-text":"Add members",fields:m,onCreate:l},null,8,["loading","table"]))}});export{J as default};
//# sourceMappingURL=Members.1ff407ef.js.map
