var u=Object.defineProperty;var y=(r,e,t)=>e in r?u(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var n=(r,e,t)=>(y(r,typeof e!="symbol"?e+"":e,t),t);import{d as f,eA as g,J as w,b as _,c as b,u as h}from"./outputWidgets.a2ba4435.js";import"./console.f5a96fc2.js";import"./index.9d0474a3.js";import{C as k}from"./gateway.04861b82.js";import{A as v}from"./activeRecord.37ea5e23.js";import{a as I}from"./asyncComputed.6f368a69.js";import{_ as D}from"./CrudView.vue_vue_type_script_setup_true_lang.f205684a.js";import"./index.a775cbea.js";import"./Form.91dd00e5.js";import"./Title.b29d6718.js";import"./CollapsePanel.dab38855.js";import"./index.73e8a114.js";import"./index.94bb3a8a.js";import"./index.3524619b.js";import"./dayjs.52cb4bad.js";import"./index.7b51c8ca.js";import"./index.01f11779.js";import"./TabPane.5c2f9b68.js";import"./index.3d04f168.js";import"./index.625daf6d.js";import"./index.2b1c7624.js";import"./index.d437d536.js";import"./index.3c317eee.js";import"./index.2e559ad8.js";import"./index.e8824290.js";import"./index.947c90fc.js";import"./index.0087c5d3.js";import"./pubsub.8fcfe7c5.js";import"./icons.f7e8e357.js";(function(){try{var r=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},e=new Error().stack;e&&(r._sentryDebugIds=r._sentryDebugIds||{},r._sentryDebugIds[e]="67643f87-6b1d-4e1f-99a6-9126fc5fc657",r._sentryDebugIdIdentifier="sentry-dbid-67643f87-6b1d-4e1f-99a6-9126fc5fc657")}catch{}})();class N{constructor(){n(this,"urlPath","files")}async create(e){throw new Error("Not implemented")}async delete(e,t){throw new Error("Not implemented")}async get(e){throw new Error("Not implemented")}async update(e,t){throw new Error("Not implemented")}async list(e){return k.get(`projects/${e}/${this.urlPath}`)}}const p=new N;class m{constructor(e,t){n(this,"record");this.projectId=e,this.record=v.create(p,t,"id")}static async list(e){return(await p.list(e)).map(i=>new m(e,i))}get key(){return this.record.get("name")}get name(){return this.record.get("name")}get size(){return this.record.get("size")}get date(){return new Date(this.record.get("date"))}}const re=f({__name:"Files",setup(r){const t=g().params.projectId,{loading:i,result:c}=I(()=>m.list(t)),l=[{label:"Variable name",key:"key"},{label:"Variable value",key:"value",type:"password"}],d=w(()=>{var s,a;return{columns:[{name:"Name"},{name:"Size"},{name:"Date"}],rows:(a=(s=c.value)==null?void 0:s.map(o=>({key:o.key,cells:[{text:o.key},{text:o.size.toString()},{text:o.date.toDateString()}]})))!=null?a:[]}});return(s,a)=>(_(),b(D,{"entity-name":"File",loading:h(i),title:"Files",description:"Persist files on your projects.","empty-title":"No environment variables set",table:d.value,fields:l},null,8,["loading","table"]))}});export{re as default};
//# sourceMappingURL=Files.0d99f977.js.map
