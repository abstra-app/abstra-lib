var b=Object.defineProperty;var j=(r,t,e)=>t in r?b(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var c=(r,t,e)=>(j(r,typeof t!="symbol"?t+"":t,e),e);import{A as u}from"./record.7d38c825.js";import"./outputWidgets.4dca5506.js";(function(){try{var r=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},t=new Error().stack;t&&(r._sentryDebugIds=r._sentryDebugIds||{},r._sentryDebugIds[t]="81e5e898-917b-4211-8db0-138252500a77",r._sentryDebugIdIdentifier="sentry-dbid-81e5e898-917b-4211-8db0-138252500a77")}catch{}})();class m{async list(){return await(await fetch("/_editor/api/hooks")).json()}async create(t,e){return await(await fetch("/_editor/api/hooks",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:t,file:e})})).json()}async get(t){return await(await fetch(`/_editor/api/hooks/${t}`)).json()}async update(t,e){return await(await fetch(`/_editor/api/hooks/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).json()}async delete(t,e){const s=e?"?remove_file=true":"",a=`/_editor/api/hooks/${t}`+s;await fetch(a,{method:"DELETE",headers:{"Content-Type":"application/json"}})}async test(t,e){const s=new URLSearchParams(e.query),a=await fetch(`/_editor/api/hooks/${t}/test?${s.toString()}`,{method:e.method,headers:{"Content-Type":"application/json",...e.headers},body:e.method==="GET"?void 0:e.body}),{status:l,headers:y,body:w,stderr:g,stdout:f}=await a.json();return{status:l,headers:y,body:w,stderr:g,stdout:f}}}const i=new m;class d{constructor(t){c(this,"record");this.record=u.create(i,t)}static async list(){return(await i.list()).map(e=>new d(e))}static async create(t,e){const s=await i.create(t,e);return new d(s)}static async get(t){const e=await i.get(t);return new d(e)}async delete(t){await i.delete(this.id,t)}async duplicate(){return this}async save(){await this.record.save()}onUpdate(t){this.record.pubsub.subscribe("update",t)}hasChanges(t){return this.record.hasChanges(t)}get id(){return this.record.get("id")}get path(){return this.record.get("path")}set path(t){this.record.set("path",t)}get title(){return this.record.get("title")}set title(t){this.record.set("title",t)}get file(){return this.record.get("file")}set file(t){this.record.set("file",t)}async test(t){return i.test(this.id,t)}get position(){const[t,e]=this.record.get("workflow_position");return{x:t,y:e,referential:"world"}}get isInitial(){return this.record.get("is_initial")}}class T{async list(){return await(await fetch("/_editor/api/jobs")).json()}async create(t,e){return await(await fetch("/_editor/api/jobs",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:t,file:e})})).json()}async get(t){return await(await fetch(`/_editor/api/jobs/${t}`)).json()}async update(t,e){return await(await fetch(`/_editor/api/jobs/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).json()}async delete(t,e){const s=e?"?remove_file=true":"",a=`/_editor/api/jobs/${t}`+s;await fetch(a,{method:"DELETE",headers:{"Content-Type":"application/json"}})}async test(t){return(await fetch(`/_editor/api/jobs/${t}/test`,{method:"POST",headers:{"Content-Type":"application/json"}})).json()}}const n=new T;class h{constructor(t){c(this,"record");c(this,"isInitial",!0);this.record=u.create(n,t)}static async list(){return(await n.list()).map(e=>new h(e))}static async create(t,e){const s=await n.create(t,e);return new h(s)}static async get(t){const e=await n.get(t);return new h(e)}async delete(t){await n.delete(this.id,t)}async duplicate(){return this}async save(){await this.record.save()}onUpdate(t){this.record.pubsub.subscribe("update",t)}hasChanges(t){return this.record.hasChanges(t)}get schedule(){return this.record.get("schedule")}set schedule(t){this.record.set("schedule",t)}get title(){return this.record.get("title")}set title(t){this.record.set("title",t)}get file(){return this.record.get("file")}set file(t){this.record.set("file",t)}get id(){return this.record.get("id")}async test(){return n.test(this.id)}get position(){const[t,e]=this.record.get("workflow_position");return{x:t,y:e,referential:"world"}}}class _{async list(){return await(await fetch("/_editor/api/scripts")).json()}async create(t,e){return await(await fetch("/_editor/api/scripts",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:t,file:e})})).json()}async get(t){return await(await fetch(`/_editor/api/scripts/${t}`)).json()}async update(t,e){return await(await fetch(`/_editor/api/scripts/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).json()}async delete(t,e){const s=e?"?remove_file=true":"",a=`/_editor/api/scripts/${t}`+s;await fetch(a,{method:"DELETE",headers:{"Content-Type":"application/json"}})}async test(t){return(await fetch(`/_editor/api/scripts/${t}/test`,{method:"POST",headers:{"Content-Type":"application/json"}})).json()}}const o=new _;class p{constructor(t){c(this,"record");this.record=u.create(o,t)}static async list(){return(await o.list()).map(e=>new p(e))}static async create(t,e){const s=await o.create(t,e);return new p(s)}static async get(t){const e=await o.get(t);return new p(e)}async delete(t){await o.delete(this.id,t)}async duplicate(){return this}async save(){await this.record.save()}onUpdate(t){this.record.pubsub.subscribe("update",t)}hasChanges(t){return this.record.hasChanges(t)}get id(){return this.record.get("id")}get schedule(){return this.record.get("schedule")}set schedule(t){this.record.set("schedule",t)}get title(){return this.record.get("title")}set title(t){this.record.set("title",t)}get file(){return this.record.get("file")}set file(t){this.record.set("file",t)}get path(){return this.record.get("path")}set path(t){this.record.set("path",t)}async test(){return o.test(this.id)}get position(){const[t,e]=this.record.get("workflow_position");return{x:t,y:e,referential:"world"}}get isInitial(){return!1}}export{d as H,h as J,p as S};
//# sourceMappingURL=scripts.3780488f.js.map
