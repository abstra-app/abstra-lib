var h=Object.defineProperty;var l=(r,t,e)=>t in r?h(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var o=(r,t,e)=>(l(r,typeof t!="symbol"?t+"":t,e),e);import{C as n}from"./gateway.8c35b4b8.js";import{A as m}from"./record.f963a373.js";import"./outputWidgets.fdae7e91.js";(function(){try{var r=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},t=new Error().stack;t&&(r._sentryDebugIds=r._sentryDebugIds||{},r._sentryDebugIds[t]="3e916f64-80a9-49bb-b764-82cf939665e3",r._sentryDebugIdIdentifier="sentry-dbid-3e916f64-80a9-49bb-b764-82cf939665e3")}catch{}})();class g extends Error{constructor(){super("Subdomain already in use")}}class y{constructor(){o(this,"urlPath","projects")}async create({name:t,organizationId:e}){return n.post(`organizations/${e}/${this.urlPath}`,{name:t})}async delete(t){await n.delete(`/${this.urlPath}/${t}`)}async list(t){return n.get(`organizations/${t}/${this.urlPath}`)}async get(t){return n.get(`${this.urlPath}/${t}`)}async update(t,e){const a=await n.patch(`${this.urlPath}/${t}`,e);if("error"in a&&a.error==="subdomain-already-in-use")throw new g;if("error"in a)throw new Error("Unknown error");return a}async checkSubdomain(t,e){return n.get(`${this.urlPath}/${t}/check-subdomain/${e}`)}async getStatus(t){return n.get(`${this.urlPath}/${t}/deploy-status`)}}const s=new y;class i{constructor(t){o(this,"record");this.record=m.create(s,t)}static formatSubdomain(t){const a=t.toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g,""),c=/[a-z0-9]+/g,u=a.matchAll(c);return Array.from(u).map(d=>d[0]).join("-")}static async list(t){return(await s.list(t)).map(a=>new i(a))}static async create(t){const e=await s.create(t);return new i(e)}static async get(t){const e=await s.get(t);return new i(e)}static async getStatus(t){return await s.getStatus(t)}async delete(){await s.delete(this.id)}async save(){return this.record.save()}resetChanges(){this.record.resetChanges()}hasChanges(){return this.record.hasChanges()}get id(){return this.record.get("id")}get name(){return this.record.get("name")}set name(t){this.record.set("name",t)}get organizationId(){return this.record.get("organizationId")}get subdomain(){return this.record.get("subdomain")}set subdomain(t){this.record.set("subdomain",t)}get customDomain(){return this.record.get("customDomain")}async checkSubdomain(){return await s.checkSubdomain(this.id,this.subdomain)}getUrl(t=""){const e=t.startsWith("/")?t.slice(1):t;return`https://${this.subdomain}.abstra.app/${e}`}getCustomDomainUrl(t=""){const e=t.startsWith("/")?t.slice(1):t;return`https://${this.customDomain}/${e}`}static async rename(t,e){await s.update(t,{name:e})}}export{i as P};
//# sourceMappingURL=project.1bad15ea.js.map
