import{d as u,eK as f,I as l,o as _,K as h,f as p,v as g}from"./outputWidgets.91aca867.js";import{E as m}from"./ExclamationCircleOutlined.cb6ceddc.js";import{M as v}from"./Modal.b8d6e40f.js";(function(){try{var n=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},a=new Error().stack;a&&(n._sentryDebugIds=n._sentryDebugIds||{},n._sentryDebugIds[a]="93ad89d1-3d49-4159-b491-da52784b7d1b",n._sentryDebugIdIdentifier="sentry-dbid-93ad89d1-3d49-4159-b491-da52784b7d1b")}catch{}})();const i="You have unsaved changes. Are you sure you want to leave?",y=u({__name:"UnsavedChangesHandler",props:{hasChanges:{type:Boolean}},setup(n){const a=n,o=e=>(e=e||window.event,e&&(e.returnValue=i),i),c=()=>{window.addEventListener("beforeunload",o)};f(async(e,b,s)=>{if(!a.hasChanges)return s();await new Promise(r=>{v.confirm({title:"You have unsaved changes.",icon:p(m),content:"Are you sure you want to discard them?",okText:"Discard Changes",okType:"danger",cancelText:"Cancel",onOk(){r(!0)},onCancel(){r(!1)}})})?s():s(!1)});const t=()=>window.removeEventListener("beforeunload",o),d=e=>e?c():t();return l(()=>a.hasChanges,d),_(()=>d(a.hasChanges)),h(t),()=>{}}});const E=g(y,[["__scopeId","data-v-0a2660df"]]);export{E as U};
//# sourceMappingURL=UnsavedChangesHandler.1fe92f01.js.map
